[
  {
    "objectID": "blog/02_que-es-quarto.html",
    "href": "blog/02_que-es-quarto.html",
    "title": "¿Qué son R, RStudio y Quarto?",
    "section": "",
    "text": "En el curso usaremos R, RStudio y Quarto. Los 3 son programas de ordenador, pero son muy diferentes. Conviene diferenciarlos y saber para qué sirve cada uno. Trato de explicarlo."
  },
  {
    "objectID": "blog/02_que-es-quarto.html#qué-es-r",
    "href": "blog/02_que-es-quarto.html#qué-es-r",
    "title": "¿Qué son R, RStudio y Quarto?",
    "section": "\n1 ¿Qué es R?",
    "text": "1 ¿Qué es R?\nR es un programa de ordenador, una pieza de software, pero principalmente es un lenguaje de programación y un entorno para hacer estadística o ciencia de datos.\nLa página oficial de R dice que:\n\nR is a language and environment for statistical computing and graphics.\n\nActualmente R es el principal lenguaje usado (junto con Phyton) en el campo de la estadística y la ciencia de datos.\nR fue creado por 2 profesores de la universidad de Auckcland: Ross Ihaka y Robert Gentleman. Algunos dicen que el nombre R viene de sus iniciales, otros piensan que se debe a que para crear R se basaron en el lenguaje S1. Quizás se deba a las 2 cosas.\nR. Ihaka y R. Gentleman crearon R en 1993 con el objetivo de tener un programa para enseñar estadística en sus clases. En 1995 decidieron que R pasase a ser a dominio público, de forma que actualmente es un proyecto GNU con licencia GPL; es decir, es software libre.\nEn 1997 se creo un “consejo de sabios” (The R Core Team) para desarrollar y extender las capacidades de R. La primera versión oficial de R, la 1.0.0 vio la luz en febrero de 2000.\nActualmente el entorno R es el resultado de toda una comunidad de usuarios.\n\n\n\n\n\n\n¿R o Phyton?\n\n\n\n\n\nEn la actualidad, en el campo de la ciencia de datos, hay 2 alternativas, Phyton o R. De hecho hay un intenso debate sobre cual es más adecuado. Hay muchas opiniones al respecto, pero yo he seleccionado esta y esta, aunque la verdad, tampoco es necesario elegir un sólo lenguaje, R y Phyton pueden colaborar.\nR se está convirtiendo en el software estadístico de referencia en la mayoría de los centros de investigación y universidades, y su uso se está extendiendo también dentro de la empresa privada. Entre las empresas que usan R están: Google, Facebook, Twitter, Microsoft, IBM, Uber, Ford, Airbnb, American Express, Barclays Bank, Bank of America y muchas otras. Aquí o aquí puedes encontrar un listado más completo.\nCreo que en la actualidad R es el mejor programa para iniciarse y hacer análisis de datos. Si no me acabas de creer, o quieres leer algo sobre la importancia y capacidades de R puedes hacerlo aquí o aquí, o aquí o más recientemente aquí. Elmo lo tiene super-claro:\n\n\nElmo prefiere R\n\nSi te gustan los rankings de lenguajes de programación, aquí tienes uno, de enero de 2020, en el Phyton está en segundo lugar mientras que R está en el puesto 13. Esto es lo que que se decía de R:\n\nIn our first run of these rankings, R placed 17th. All these years later it jumps two spots from the last quarter’s edition up to #13. In the interim, it has ranked as high as 12th but mostly commonly is found in the 13-15 range. Given the language’s specialized focus, this is likely its effective ceiling, but it’s also an illustration of the remarkable popularity of a language whose usage is restricted for all intents and purposes to a single domain – those who work with and operate on data. R’s success is an example of the power of an academia-supported community to elevate a language beyond its expected threshold, and it is notable that the aforementioned growth of Python and its expansion into data analytics has not observably come at the expense of traction in R.\n\nEl ranking más actual puedes verlo aquí.\nPara hacerte una idea de las capacidades de R puedes visitar:\n\nListado de paquetes R agrupados por temática\nAwesome R learning resources\nAwesome R\nRviews: un blog sobre R. cada mes promocionan 4o paquetes nuevos, por ejemplo este\nRweekly: publicación semanal sobre novedades en el mundo R.\nBig Book of R: libro electrónico con multitud de recursos sobre R.\n\n¿Aprender R es complicado? No, bueno, ya hablaré de eso en clase. No mires el siguiente tweet:\n\n\nR is easy"
  },
  {
    "objectID": "blog/02_que-es-quarto.html#qué-es-rstudio",
    "href": "blog/02_que-es-quarto.html#qué-es-rstudio",
    "title": "¿Qué son R, RStudio y Quarto?",
    "section": "\n2 ¿Qué es RStudio?",
    "text": "2 ¿Qué es RStudio?\nSí, es un programa de ordenador, pero no es un programa para hacer estadística ni es un lenguaje de programación. RStudio nos servirá para poder interactuar con R de forma más cómoda y eficiente.\nPara entenderlo: cuando hacemos un análisis estadístico, R es el que hace los cálculos, gráficos etc… R lo hace todo pero le damos las ordenes a R a través de RStudio. RStudio es una interfaz para acceder a R de manera más cómoda. Técnicamente RStudio es un IDE (Integrated development environment) diseñado especialmente para R. Intuitivamente es un programa que nos facilita dar nuestras ordenes a R: si R y RStudio formasen parte de un coche, R sería el motor y Rstudio el volante y los pedales.\nRStudio fue creado en 2011 y actualmente es el entorno, o IDE, más usado para programar con R.\nTodavía no sabemos que es Quarto, pero RStudio nos facilita la interacción tanto con R como con Quarto. Son ellos, son R y Quarto, los que harán el “trabajo duro”, concretamente R hará los cálculos, si es que nuestro documento/informe es de índole cuantitativo, y Quarto generará el documento final, ya sea este un tutorial, unas slides, página web, etc …\nA pesar de que Quarto y R son los que generan los resultados, nosotros no veremos habitualmente a estos dos programas, porque interactuaremos con ellos a través de RStudio."
  },
  {
    "objectID": "blog/02_que-es-quarto.html#qué-es-quarto",
    "href": "blog/02_que-es-quarto.html#qué-es-quarto",
    "title": "¿Qué son R, RStudio y Quarto?",
    "section": "\n3 ¿Qué es Quarto?",
    "text": "3 ¿Qué es Quarto?\nSí, también es un programa de ordenador, por tanto tenemos que instalarlo.\nEs un programa sin interfaz gráfica (sin menús ni ventanas). Se maneja a través la Terminal con lineas de comandos, así que técnicamente es un programa de tipo CLI (command line interface), pero no sufras porque (casi siempre) interactuaremos con él a través de RStudio.\nQuarto es un programa para confeccionar documentos, documentos reproducibles. Se trata de escribir las ordenes que generan el documento en un archivo (source document) para que Quarto al procesarlo genere el documento final. Este documento final puede ser de diferentes tipos (tutoriales, informes, slides, webs, blogs, …) y formatos (html, pdf, docx, …).\nParece complicado pero enseguida verás que es easy-peasy-lemon-squeezy!!\nEn la página oficial de Quarto se dice que:\n\nQuarto® is an open-source scientific and technical publishing system built on Pandoc\n\nEs un programa de código abierto que sirve para escribir documentos (en sentido amplio) de carácter técnico y científico; y sí, usa Pandoc que es … otro programa!!\nQuarto es la segunda generación de Rmarkdown (otro entorno para hacer documentos técnicos) y podemos pensar que su anuncio semi-oficial se hizo con este post de Allison Hill, aunque su presentación a la sociedad y puesta de largo fue en el congreso rstudio::conf(2022).\nActualmente Quarto está en proceso de implantación por la comunidad R (pero también en las comunidades de Phyton y Julia) y es de esperar que cabe sustituyendo completamente al anterior sistema, Rmarkdown.\n\n\n\n\n\n\nUn poco de historia: en un principio fueron los dinosaurios, luego Rmarkdown\n\n\n\n\n\nQuarto es la segunda generación de Rmarkdown y es el objeto de estudio del curso, así que ya lo veremos\nQuarto y Rmarkdown sirven para confeccionar documentos, especialmente documentos científico-técnicos. Estos documentos serán reproducibles.\nLa idea de documentos reproducibles viene de Literate Programming de Donald Knuth\nEn R siempre ha habido estas herramientas Sweave, pero después knitr"
  },
  {
    "objectID": "blog/02_que-es-quarto.html#footnotes",
    "href": "blog/02_que-es-quarto.html#footnotes",
    "title": "¿Qué son R, RStudio y Quarto?",
    "section": "Notas",
    "text": "Notas\n\nUn programa para hacer estadística creado en los Bell Labs por John Chambers entre otros↩︎"
  },
  {
    "objectID": "blog/27_observable.html",
    "href": "blog/27_observable.html",
    "title": "Observable JS",
    "section": "",
    "text": "Ya sabemos que Quarto® is an open-source scientific and technical publishing system built on Pandoc que permite crear contenidos con R, Python, Julia y Observable\nObervable JS (OJS) es “a JavaScript flavor designed for data analysis”. Observable tiene digamos la interactividad incorporada de serie: es sencillo incorporar filtros interactivos para controlar el output que muestran las tablas y gráficos. Esto abre nuevas posibilidades a los usuarios de R.\nLa documentación oficial de Quarto para hacer disponibles los datos a OJS está aquí.\n\n\n\nComo señala Nicolas Lambert aquí:\n\nCombining R and Observable javascript allows to take advantage of the strengths of both languages. It allows to combine the statistical analysis possibilities of R and the reactive visualization features of Observable. A win win strategy.\n\nAlgo parecido dice Sharon Machlis aquí:\n\nUsing Quarto with Observable JavaScript is a great solution for R and Python users who want to create more interactive and visually engaging reports. Using Quarto with Observable offers an elegant workflow if you want to combine data analysis in Python and R with reactivity. Finally, Observable was set up with collaboration in mind, so it’s fairly easy to find and use someone else’s open source code.\n\nOtra ventaja de Quarto:\n\nQuarto’s rendered HTML files can be hosted on any web server or opened locally with a simple browser, with no separate language or framework installations required. That’s not the case for options like Shiny for R or Dash for Python (alpha Shiny for Python can run without a Shiny server, but it’s not yet production-ready). Using Quarto with Observable offers an elegant workflow if you want to combine data analysis in Python and R with reactivity.\n\nQuarto puede ejecutar código de OJS. Sólo hay que colocar el código entre las marcas habituales : ```{ojs}. Además se puede analizar los datos en R y luego enviarlos a OJS con la función ojs_define()."
  },
  {
    "objectID": "blog/27_observable.html#intro",
    "href": "blog/27_observable.html#intro",
    "title": "Observable JS",
    "section": "",
    "text": "Ya sabemos que Quarto® is an open-source scientific and technical publishing system built on Pandoc que permite crear contenidos con R, Python, Julia y Observable\nObervable JS (OJS) es “a JavaScript flavor designed for data analysis”. Observable tiene digamos la interactividad incorporada de serie: es sencillo incorporar filtros interactivos para controlar el output que muestran las tablas y gráficos. Esto abre nuevas posibilidades a los usuarios de R.\nLa documentación oficial de Quarto para hacer disponibles los datos a OJS está aquí.\n\n\n\nComo señala Nicolas Lambert aquí:\n\nCombining R and Observable javascript allows to take advantage of the strengths of both languages. It allows to combine the statistical analysis possibilities of R and the reactive visualization features of Observable. A win win strategy.\n\nAlgo parecido dice Sharon Machlis aquí:\n\nUsing Quarto with Observable JavaScript is a great solution for R and Python users who want to create more interactive and visually engaging reports. Using Quarto with Observable offers an elegant workflow if you want to combine data analysis in Python and R with reactivity. Finally, Observable was set up with collaboration in mind, so it’s fairly easy to find and use someone else’s open source code.\n\nOtra ventaja de Quarto:\n\nQuarto’s rendered HTML files can be hosted on any web server or opened locally with a simple browser, with no separate language or framework installations required. That’s not the case for options like Shiny for R or Dash for Python (alpha Shiny for Python can run without a Shiny server, but it’s not yet production-ready). Using Quarto with Observable offers an elegant workflow if you want to combine data analysis in Python and R with reactivity.\n\nQuarto puede ejecutar código de OJS. Sólo hay que colocar el código entre las marcas habituales : ```{ojs}. Además se puede analizar los datos en R y luego enviarlos a OJS con la función ojs_define()."
  },
  {
    "objectID": "blog/27_observable.html#un-ejemplo",
    "href": "blog/27_observable.html#un-ejemplo",
    "title": "Observable JS",
    "section": "\n2 Un ejemplo",
    "text": "2 Un ejemplo\nVoy a adaptar un ejemplo sacado de aquí\nPor ejemplo, voy a crear un sf data.frame para ver si me lo acepta OJS:\n\nCódigolibrary(tidyverse)\nlibrary(\"rnaturalearth\")\nlibrary(\"rnaturalearthdata\")\nlibrary(sf)\ndf &lt;- gapminder::gapminder %&gt;% filter(year == 2007) \nworld &lt;- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sf\") %&gt;% \n       filter(subregion != \"Antarctica\") %&gt;% \n       filter(admin != \"Greenland\") %&gt;% \n       select(name, iso_a3, geometry) \ndf_world &lt;- left_join(world, df,  by = c(\"name\" = \"country\")) %&gt;% #- solo 142\n  select(-year)\n\n\nPara pasar df_world a OJS, como es un sf, necesitamos el paquete geojsonsf:\n\nCódigo```{r}\n#| eval: true\nlibrary(\"geojsonsf\")\n#ojs_define(my_ojs_data = df)\nojs_define(data1 = sf_geojson(df_world))\n```\n\n\nHay que hacer un paso más para poder usar datos los datos de R en Observable: hay que transformar los datos a un formato compatible con OJS, para ello usamos la función transpose()\nLas visualizaciones de JavaScript suelen utilizar un formato de datos diferente al de los marcos de datos rectangulares que normalmente se necesitan en R o Python. Aunque en este caso no ha hecho falta (!!)\n\nCódigocountries = JSON.parse(data1) \nInputs.table(countries.features.map(d =&gt; d.properties))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCargamos la librería bertin\n\nCódigobertin = require(\"bertin@1.2.4\")\n//bertin.quickdraw(countries)\n\n\n\n\n\n\n\nHacemos una coropleta:\n\nCódigoviewof nbreaks = Inputs.range([3, 9], { label: \"nbreaks\", step: 1, value: 7 })\nviewof method = Inputs.select([\"jenks\", \"q6\", \"quantile\", \"equal\", \"msd\"], {\n  label: \"method\",\n  value: \"quantile\"\n})\nchoro = bertin.draw({\n  params: { projection: \"Eckert3\"},\n  layers: [\n    {\n      type: \"layer\",\n      geojson: countries,\n      fill: {\n        type: \"choro\",\n        values: \"lifeExp\",\n        nbreaks: nbreaks,\n        method: method,\n        colors: \"RdYlGn\",\n        leg_round: 3,\n        leg_title: `Lifeexperience \n(in years)`,\n        leg_x: 30,\n        leg_y: 100\n      },\n      tooltip: [\"$name\", \"Esperanza de vida\", \"$lifeExp\",  \"PIB per cápita\", \"$gdpPercap\"]\n    },\n    { type: \"graticule\" },\n    { type: \"outline\" }\n  ]\n})"
  },
  {
    "objectID": "blog/27_observable.html#otro-ejemplo",
    "href": "blog/27_observable.html#otro-ejemplo",
    "title": "Observable JS",
    "section": "\n3 Otro ejemplo",
    "text": "3 Otro ejemplo\nEsta vez sacado de aquí\n\nCódigoimport {viewof data} from \"@observablehq/summary-table\"\nviewof data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCódigoimport {viewof summary_data} from \"@observablehq/summary-table\"\nviewof summary_data"
  },
  {
    "objectID": "blog/27_observable.html#observable-2.0",
    "href": "blog/27_observable.html#observable-2.0",
    "title": "Observable JS",
    "section": "\n4 Observable 2.0",
    "text": "4 Observable 2.0\nPues parece que con Observable 2.0 ha creado un espacio para generar webs estáticas, digamos similar a QuartoPub, y que se llama Observable Framework. Aquí un toot sobre ello."
  },
  {
    "objectID": "blog/27_observable.html#biblio",
    "href": "blog/27_observable.html#biblio",
    "title": "Observable JS",
    "section": "\n5 Biblio",
    "text": "5 Biblio\n\nLet’s make maps with bertin.js in Quarto y aquí: post de Nicolas Lambert.\nBertin.js: a JavaScript library for visualizing geospatial data and make thematic maps for the web.\nA beginner’s guide to using Observable JavaScript, R, and Python with Quarto: una serie de 3 artículos de Infoworld de Sharon Machlis.\nUn ejemplo de boB Rudis, @hrbrmstr, otro, conviriendo OJS notebook in Quarto projects\nPaquete robservable"
  },
  {
    "objectID": "blog/72_publicando-en-UV.html",
    "href": "blog/72_publicando-en-UV.html",
    "title": "Publicando nuestra web en la UV",
    "section": "",
    "text": "Durante el curso hemos aprendido a generar webs/blogs con Quarto. El último paso es subirlas a Internet, hacerlas visibles. La documentación oficial de Quarto está aquí\nHay muchas opciones para publicar nuestra web, quizás la más sencilla es hacerlo en en Quarto Pub: básicamente lo único que hay que hacer es ejecutar en la Terminal: quarto publish quarto-pub.\nNosotros, como somos personal de la UV, tenemos un espacio web en los servidores de la UV, así que vamos a ver cómo podemos alojar nuestra web allí."
  },
  {
    "objectID": "blog/72_publicando-en-UV.html#intro",
    "href": "blog/72_publicando-en-UV.html#intro",
    "title": "Publicando nuestra web en la UV",
    "section": "",
    "text": "Durante el curso hemos aprendido a generar webs/blogs con Quarto. El último paso es subirlas a Internet, hacerlas visibles. La documentación oficial de Quarto está aquí\nHay muchas opciones para publicar nuestra web, quizás la más sencilla es hacerlo en en Quarto Pub: básicamente lo único que hay que hacer es ejecutar en la Terminal: quarto publish quarto-pub.\nNosotros, como somos personal de la UV, tenemos un espacio web en los servidores de la UV, así que vamos a ver cómo podemos alojar nuestra web allí."
  },
  {
    "objectID": "blog/72_publicando-en-UV.html#proceso",
    "href": "blog/72_publicando-en-UV.html#proceso",
    "title": "Publicando nuestra web en la UV",
    "section": "2 Proceso",
    "text": "2 Proceso\n\n\n2.1 Activando web UV\nLo primero que necesitamos es estar seguros de que tenemos activado nuestro espacio web en la UV. Es muy probable que ya lo tengamos activado pero hay que asegurarse. ¿Cómo? Te lo explico:\n\nPrimero, vas a tener que acceder a https://portal.uv.es/. desde allí,\naccedes al apartado “Mis cuentas” que está en la parte de arriba en pequeñito.\n\n\n\n\n\n\n\n\nPaso 2: accede al apartado “Mis cuentas”\n\n\n\n\n\nal pinchar te llevará a otra pantalla donde se puede activar y desactivar tu espacio web. Para ello solo tienes que pinchar en “Activar/Desactivar mi página web”.\n\n\n\n\n\n\n\n\nPaso 3: entra en activar/desactivar\n\n\n\n\n\nTe llevará a otra pantalla donde podrás activar tu web si no la tenías activada, PERO, cuidado, si ya tenías activado tu espacio web, entonces lo que te permitirá es borrar tu web1.\n\n\n\n\n2.2 Instalación de Filezilla\nPara subir nuestra web al servidor de la UV usaremos Filezilla un programa para acceder a servidores ftp. Para instalar Filezilla, simplemente ve aquí y descarga el “FileZilla client” adecuado para tu sistema operativo.\n\n\n\n2.3 Subiendo nuestra web\n\nAbrimos Filezilla y nos conectamos a disco.uv.es de la UV. Hemos de poner nuestro usuario y contraseña y clickamos en conexión rápida:\n\n\n\n\n\n\n\nUna vez creada la conexión accederemos a nuestra carpeta de usuario, en mi caso pjperez en usugru/usus\n\n\n\n\n\n\n\nPinchamos en la carpeta de usuario, en mi caso pjperez y veremos que dentro aparece una carpeta llamada web, ese es nuestro espacio web en la UV\n\n\n\n\n\n\n\nPincha ahora en la carpeta web y podrás ver en el panel inferior de Filezilla los ficheros y carpetas que tengamos en nuestro espacio web de la UV. Es posible que solo tengáis un fichero llamado index.html. Yo tengo además un par de carpetas ya alguna cosa más.\n\n\n\n\n\n\n\n\nFíjate que en el panel inferior de Filezilla tenemos a la derecha nuestro disco duro y a la izquierda nuestro espacio web, solo queda arrastrar los ficheros que queramos subir a nuestro espacio web.\n\n\nSuerte!! Seguro que te queda fenomenal!!"
  },
  {
    "objectID": "blog/72_publicando-en-UV.html#footnotes",
    "href": "blog/72_publicando-en-UV.html#footnotes",
    "title": "Publicando nuestra web en la UV",
    "section": "Notas",
    "text": "Notas\n\n\nSi te equivocas y la borras, lo único que tendrías que hacer es volver a activarla↩︎"
  },
  {
    "objectID": "blog/22_shortcodes.html",
    "href": "blog/22_shortcodes.html",
    "title": "Usando shortcodes",
    "section": "",
    "text": "La documentación oficial de Quarto señala que:\n\nShortcodes are special markdown directives that generate various types of content.\n\nUn shortcode es un código (una etiqueta, un elemento) que puedes insertar en tus documentos .qmd para añadir algún tipo de contenido en ellos sin tener que escribirlo directamente.\n¿Y por qué querríamos hacer esto? Pues resulta que muchas veces, en un proyecto, queremos incluir el mismo contenido en varios sitios o en varios documentos; esto es facilitado al usar shortcodes.\nMás que qué son, lo importante es para lo que sirven, y sirven para poder insertar fácilmente contenido que se repite.\n\nLo más evidente es que si hemos de insertar el mismo contenido varias veces o en varios documentos es más fácil hacerlo con shortcodes; además, si el contenido que gestionas con shortcodes cambia, solo tendrás que modificarlo una vez y automáticamente se cambiara en todos los sitios en los que hayan incluido tu shortcode.\nPor ejemplo, es muy probable que incluyas tu dirección de contacto en varios sitios de una página web o en varios archivos de tu Qproject, así que mejor gestionar e incluir este contenido en tus documentos a través de shortcodes, porque si esta dirección cambia solo tendrás que modificarla una vez.\n\nEl título de este post es “Usando shortcodes”. Imagina que ahora mismo necesito incluir el título del post en esta sección. No nos costaría mucho copiarlo y pegarlo pero … ¿y si luego decido cambiar el título? Es evidente, que si hay algún tipo de contenido que se repite, quizás debamos plantearnos la posibilidad de gestionarlo con shortcodes. Veamos un primer ejemplo.\nPor ejemplo, {{&lt; meta &gt;}} es un shortcode que permite incluir elementos de los metadatos de un archivo quarto: si incluimos {{&lt; meta title &gt;}} estaríamos insertando el título del documento; mientras que si incluimos {{&lt; meta date &gt;}} incluiríamos la fecha de creación del documento.\nVeamos como podemos usarlo:\n\n\nPara que se muestre esto …\nHas de escribir\n\n\n\nEl título de este post es “Usando shortcodes”, y fue creado el 22 de enero de 2023.\nEl objetivo del post es: “Cómo usar shortcodes en Quarto para, entre otras cosas, poder incluir el mismo contenido en varios documentos.”\n\n\nEl título de este post es \"{{&lt; meta title &gt;}}\", y fue creado el {{&lt; meta date &gt;}}. \n\nEl objetivo del post es:  \"{{&lt; meta description &gt;}}\""
  },
  {
    "objectID": "blog/22_shortcodes.html#qué-son-los-shortcodes",
    "href": "blog/22_shortcodes.html#qué-son-los-shortcodes",
    "title": "Usando shortcodes",
    "section": "",
    "text": "La documentación oficial de Quarto señala que:\n\nShortcodes are special markdown directives that generate various types of content.\n\nUn shortcode es un código (una etiqueta, un elemento) que puedes insertar en tus documentos .qmd para añadir algún tipo de contenido en ellos sin tener que escribirlo directamente.\n¿Y por qué querríamos hacer esto? Pues resulta que muchas veces, en un proyecto, queremos incluir el mismo contenido en varios sitios o en varios documentos; esto es facilitado al usar shortcodes.\nMás que qué son, lo importante es para lo que sirven, y sirven para poder insertar fácilmente contenido que se repite.\n\nLo más evidente es que si hemos de insertar el mismo contenido varias veces o en varios documentos es más fácil hacerlo con shortcodes; además, si el contenido que gestionas con shortcodes cambia, solo tendrás que modificarlo una vez y automáticamente se cambiara en todos los sitios en los que hayan incluido tu shortcode.\nPor ejemplo, es muy probable que incluyas tu dirección de contacto en varios sitios de una página web o en varios archivos de tu Qproject, así que mejor gestionar e incluir este contenido en tus documentos a través de shortcodes, porque si esta dirección cambia solo tendrás que modificarla una vez.\n\nEl título de este post es “Usando shortcodes”. Imagina que ahora mismo necesito incluir el título del post en esta sección. No nos costaría mucho copiarlo y pegarlo pero … ¿y si luego decido cambiar el título? Es evidente, que si hay algún tipo de contenido que se repite, quizás debamos plantearnos la posibilidad de gestionarlo con shortcodes. Veamos un primer ejemplo.\nPor ejemplo, {{&lt; meta &gt;}} es un shortcode que permite incluir elementos de los metadatos de un archivo quarto: si incluimos {{&lt; meta title &gt;}} estaríamos insertando el título del documento; mientras que si incluimos {{&lt; meta date &gt;}} incluiríamos la fecha de creación del documento.\nVeamos como podemos usarlo:\n\n\nPara que se muestre esto …\nHas de escribir\n\n\n\nEl título de este post es “Usando shortcodes”, y fue creado el 22 de enero de 2023.\nEl objetivo del post es: “Cómo usar shortcodes en Quarto para, entre otras cosas, poder incluir el mismo contenido en varios documentos.”\n\n\nEl título de este post es \"{{&lt; meta title &gt;}}\", y fue creado el {{&lt; meta date &gt;}}. \n\nEl objetivo del post es:  \"{{&lt; meta description &gt;}}\""
  },
  {
    "objectID": "blog/22_shortcodes.html#tipos-de-shortcodes",
    "href": "blog/22_shortcodes.html#tipos-de-shortcodes",
    "title": "Usando shortcodes",
    "section": "\n2 Tipos de shortcodes",
    "text": "2 Tipos de shortcodes\nDe momento, los que yo he usado son:\n\n{{&lt; meta &gt;}} : permite incluir elementos de los metadatos de un documento\n{{&lt; var &gt;}} : permite incluir elementos definidos en el fichero _variables.yml. Este fichero es de nivel proyecto\n\nAdemás:\n\n{{&lt; include &gt;}} : permite incluir el contenido de un archivo .qmd. Documentación oficial aquí\n{{&lt; video &gt;}} : permite incluir vídeos"
  },
  {
    "objectID": "blog/22_shortcodes.html#más-ejemplos",
    "href": "blog/22_shortcodes.html#más-ejemplos",
    "title": "Usando shortcodes",
    "section": "\n3 Más ejemplos",
    "text": "3 Más ejemplos\n\nIncluir contenido de _variables.yml\n\nDentro de un proyecto, podemos crear un fichero llamado _variables.yml donde podemos definir variables con contenido para ser incluido en nuestros documentos .qmd con el shortcode {{&lt; var &gt;}}. El fichero _variables.yml tiene que residir en la carpeta raíz del proyecto.\nVamos a ver un ejemplo de uso:\n\n\nSi el contenido de _variables.yml es …\n… puedes escribir lo siguiente ….\n… para que se muestre ….\n\n\n\nemail:\n  pedro: pedro@uvv.es\n  juan: juan@gmaillll.com\n\npedroblog: \"[Uno de mis blogs](https://perezp44.github.io/pjperez.web/01_blog.html)\"\n\n\nEl email de Pedro es {{&lt; var email.pedro &gt;}} y el de Juan es {{&lt; var email.juan &gt;}}.\nUno de los blogs de Pedro es {{&lt; var pedroblog &gt;}} .\n\n\nEl email de Pedro es pedro@uvv.es y el de Juan es juan@gmaillll.com.\nUno de los blogs de Pedro es Pedro’s blog’s .\n\n\n\n\nIncluir contenido de un archivo\nEn un proyecto en el que elaboraba tutoriales y slides con el mismo contenido en algunas partes, usé muchas veces el shortcode {{&lt; include &gt;}}. Me permitió incluir el mismo contenido en varios ficheros. Además, tuve que modificarlo varias veces, pero como gestionaba ese contenido con {{&lt; include &gt;}} solo tenía que modificarlo en un sitio. Os cuento con un ejemplo cómo se hace.\nSi crees que un determinado contenido puede ser utilizado en varios sitios, quizá sea más eficiente tener ese contenido en un fichero independiente e incluirlo a través del shortcode {{&lt; include &gt;}}.\nImagina que quieres incluir este contenido:\n\n\nQuieres incluir este contenido …\n… contenido que es generado con este código\n\n\n\nEl conjunto de datos iris tiene 5 variables y 150 filas. Veamos un resumen con summary()\n\nCódigosummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n\n\n\n\nEl conjunto de datos iris tiene `r ncol(iris)` variables y `r nrow(iris)` filas. Veamos un resumen con `summary()`\n```{r}\nsummary(iris)\n```\n\n\n\nPara poder incluir ese contenido haciendo uso de {{&lt; include &gt;}} deberás:\n\n\nCrear un documento, llamado por ejemplo _my_include_01.qmd, que contenga el código que hemos visto anteriormente.\n\nEl nombre del fichero es conveniente que empiece por _ porque eso hace que cuando hagamos un render del proyecto, este archivo no se procese. No queremos procesarlo, queremos que su contenido se incluya en otro documento y eso lo haremos utilizando el shortcode {{&lt; include &gt;}}.\n\n\n\nUna vez hemos creado el documento _my_include_01.qmd para que su contenido aparezca (y se ejecute, si tiene código ejecutable) en el documento que nosotros queramos, tendremos que incluir en este último documento lo siguiente: {{&lt; include _my_include_01.qmd &gt;}}\n\nRealmente {{&lt; include _my_include_01.qmd &gt;}} funcionará si el fichero _my_include_01.qmd está en la misma carpeta que el documento en el que queremos que parezca su contenido; si estuviese en otra ubicación habría que proporcionar la ruta relativa a _my_include_01.qmd.\n\n\n\n\nIncluir videos\nSe pueden incluir vídeos usando paquetes de R, también con extensiones de Quarto, pero es más cómodo hacerlo con el shortcode {{&lt; video &gt;}}\n\n\nPara incluir este video …\n… has de …\n\n\n\n\n\n\nHas de usar este shortcode:\n{{&lt; video video https://www.youtube.com/embed/ZkECLuuRwTg &gt;}}\nNo es tan-tan sencillo porque cuando vas a Youtube a ver ese vídeo lo ves en esta dirección: https://www.youtube.com/watch?v=ZkECLuuRwTg; como ves hay que sustituir watch?v= por embed/.\n\n\n\n\nSaltos de página\nComo casi siempre uso Quarto para generar documentos html, no me suelo preocupar por los saltos de página; aunque es verdad que si luego quiero imprimir el documento html como un pdf me arrepiento de no haberlo hecho; vamos que conviene pensar en los saltos de página y además es muy fácil incorporarlos con el shortcode {{&lt; pagebreak &gt;}}. Además, como se cuenta aquí, estos saltos de página funcionan para diferentes formatos de salida:\n\nNative pagebreaks are supported for HTML, LaTeX, Context, MS Word, Open Document, and ePub\n\nTeclitas de ordenador\n\nEn Quarto 1.3 apareció esto los Keyboard Shortcuts. Se insertan “iconos” que simulan unas tecitas con el shortcode “kbd”.\nPor ejemplo,\n\n\n\nSi escribes esto:\nSe verá lo siguiente:\n\n\n\nTo print, press {{&lt; kbd Shift-Ctrl-P &gt;}}. \n\nTo open an existing new project, \n\npress {{&lt; kbd mac=Shift-Command-O win=Shift-Control-O linux=Shift-Ctrl-L &gt;}}.\n\n\nTo print, press Shift-Ctrl-PShift-Ctrl-P.\nTo open an existing new project,\npress ."
  },
  {
    "objectID": "blog/22_shortcodes.html#referencias",
    "href": "blog/22_shortcodes.html#referencias",
    "title": "Usando shortcodes",
    "section": "Referencias",
    "text": "Referencias\n(Algunos artículos que hablan de esto …)\n\n\n«6 Productivity Hacks for Quarto». 2022. https://www.rstudio.com/blog/6-productivity-hacks-for-quarto/.\n\n\n«Quarto - Creating Shortcodes». s. f. Accedido 2 de febrero de 2023. https://quarto.org/docs/extensions/shortcodes.html."
  },
  {
    "objectID": "blog/28_phyton.html",
    "href": "blog/28_phyton.html",
    "title": "Using R data with phyton",
    "section": "",
    "text": "Quarto ha hecho que me vuelva a interesar por Phyton!!!\nEs muy fácil combinar chunks de R con Py, solo hay que pasar los datos así: my_py_data = r.df\nCódigolibrary(reticulate)\nCódigodf &lt;- gapminder::gapminder\niris &lt;- iris\nCódigofrom siuba import _, group_by, summarize\n\nmy_data = r.df\n\n(my_data\n  &gt;&gt; group_by(_.continent)\n  &gt;&gt; summarize(avg_lifeExp = _.lifeExp.mean())\n  )\n\n  continent  avg_lifeExp\n0    Africa    48.865330\n1  Americas    64.658737\n2      Asia    60.064903\n3    Europe    71.903686\n4   Oceania    74.326208\nCódigofrom siuba import mutate, _\nfrom plotnine import ggplot, aes, geom_point\n\nmy_data = r.iris\n\n(my_data\n  &gt;&gt; ggplot(aes(\"Sepal.Length\", \"Petal.Length\", color = \"Species\"))\n   + geom_point()\n)\n\n&lt;ggplot: (8325926046438)&gt;"
  },
  {
    "objectID": "blog/28_phyton.html#some-biblio",
    "href": "blog/28_phyton.html#some-biblio",
    "title": "Using R data with phyton",
    "section": "\n1 Some biblio",
    "text": "1 Some biblio\n\nQuarto with Python"
  },
  {
    "objectID": "blog/31_referencias-cruzadas.html",
    "href": "blog/31_referencias-cruzadas.html",
    "title": "Cross references",
    "section": "",
    "text": "En muchos informes/documentos científico-técnicos hay que incluir en el texto referencias a las tablas, ecuaciones, gráficos etc … Aquí y aquí la documentación oficial. Vamos a ello."
  },
  {
    "objectID": "blog/31_referencias-cruzadas.html#intro",
    "href": "blog/31_referencias-cruzadas.html#intro",
    "title": "Cross references",
    "section": "1 Intro",
    "text": "1 Intro\nSe pueden gestionar las referencias a tablas, gráficos, ecuaciones etc… como toda la vida; es decir, a mano. Esto implica que si introducimos (o quitamos), por ejemplo una nueva tabla, tendremos que cambiar la numeración a mano. Vamos a ver (un poco) como lo haríamos con Quarto.\nLas ventajas: (i) no tendremos que hacerlo a mano con el ahorro de tiempo y errores e inconsistencias que eso implica en el documento; (ii) podremos navegar fácilmente entre las referencias y los elementos referenciados, (iii) podremos cambiar “fácilmente” el formato de numeración y (iv) se pueden usar también para incorporar un índice o TOC(table of contents) que permita navegar por el documento.\nInconveniente: tenemos que aprender a hacerlo."
  },
  {
    "objectID": "blog/31_referencias-cruzadas.html#cross-references-en-quarto",
    "href": "blog/31_referencias-cruzadas.html#cross-references-en-quarto",
    "title": "Cross references",
    "section": "2 Cross-references en Quarto",
    "text": "2 Cross-references en Quarto\nQuarto permite cross-referencias los siguientes elementos:\n\nImágenes (también gráficos generados con código)\nTablas\nSecciones dentro del documento (incluso otros documentos)\n\nPara referenciar un elemento hay que introducir lo que se conoce como una “reference tag”.\nCada entidad (sea tabla, gráfico …) que queramos cross-referenciar necesita dos cosas:\n\nun label que hace de identificador único.\nEste label que hace identificador siempre ha de comenzar con un # seguido de unos caracteres que identifican el tipo de elemento (por ejemplo #fig-) finalizando con una parte decisión del escritor que para mi es realmente el label. Por ejemplo un label válido para una “figura” sería #fig-mi-imagen-chula, para una tabla sería #tbl-otra-tabla-chula.\nun caption o descripción"
  },
  {
    "objectID": "blog/31_referencias-cruzadas.html#hagamos-nuestras-dos-primeras-cross-referencias",
    "href": "blog/31_referencias-cruzadas.html#hagamos-nuestras-dos-primeras-cross-referencias",
    "title": "Cross references",
    "section": "3 Hagamos nuestras dos primeras cross-referencias",
    "text": "3 Hagamos nuestras dos primeras cross-referencias\n\nPrimero una imagen\nEn el texto de nuestro documento hemos de poner algo como:\n![Una imagen que vamos a referenciar](./imagenes/post_24_img_01.jpg){#fig-001}\nFíjate que el anterior chunk (no ejecutable) insertará una imagen (la veremos más abajo) y permite referenciarla ya que contiene un caption [Una imagen que vamos a referenciar] y un label que hace de identificador (#fig-001).\nLa imagen se mostrará así:\n\n\n\n\n\n\nGráfico 1: Una imagen que vamos a referenciar\n\n\n\nPara referenciarla, para hacer referencia a esta imagen, en el texto de nuestro documento hemos de usar unas marcas: @fig-001. Por ejemplo si en nuestro documento fuente (.qmd) tenemos un párrafo como este:\nComo puede verse en @fig-001 nos hacemos a la idea de que .... Pedro no sabe buscar imÁgenes nuevas\nY veremos algo como esto:\nComo puede verse en Figura 1 nos hacemos a la idea de que …. Pedro no sabe buscar imágenes nuevas\n\n\nAhora referenciamos una tabla\nAcuérdate que para referenciarla necesitaremos un label y una caption. Más abajo tienes la sintaxis para ello. Es un poco diferente a la de las tablas; ahora es: : Mys notas {#tbl-001-notas}\n+-------------------------------------+-----------------------------+\n| Nombre                              | Nota                        |\n+=====================================+=============================+\n|     Pedro                           | 5                           |\n+-------------------------------------+-----------------------------+\n|     María                           | 11                          |\n+-------------------------------------+-----------------------------+\n\n: Mys notas {#tbl-001-notas}\nAbajo puedes ver como quedaría la tabla:\n\n\n\nTabla 1: Mys notas\n\n\n\n\n\n\n\n\n\nNombre\nNota\n\n\n\n\nPedro\n5\n\n\nMaría\n11\n\n\n\n\n\n\nPara referenciarla, para hacer referencia a esta tabla, en el texto de nuestro documento hemos de usar unas marcas, en este caso @tbl-001-notas. Por ejemplo si en nuestro documento fuente (.qmd) tenemos un párrafo como este:\nComo puede verse en @@tbl-001-notas podemos ver las notas que han sacado Pedro y María ... Pedro no molt be!!\nPodremos ver algo como lo siguiente:\nComo puede verse en @Tabla 1 podemos ver las notas que han sacado Pedro y María … Pedro no molt be!!"
  },
  {
    "objectID": "blog/31_referencias-cruzadas.html#elementos-referenciables",
    "href": "blog/31_referencias-cruzadas.html#elementos-referenciables",
    "title": "Cross references",
    "section": "4 Elementos referenciables",
    "text": "4 Elementos referenciables\nComo puedes ver en la documentación oficial, también se pueden referenciar:\n\nlas imágenes creadas con código (por ejemplo gráficos).\nlas tablas creadas con código\necuaciones\nsecciones de un documento\nchunks\nteoremas y pruebas\ncapítulos"
  },
  {
    "objectID": "blog/31_referencias-cruzadas.html#más-cosas",
    "href": "blog/31_referencias-cruzadas.html#más-cosas",
    "title": "Cross references",
    "section": "5 Más cosas",
    "text": "5 Más cosas\nHay muchos más detalles que nos permiten por ejemplo incluir un listado de figuras o de tablas; también podemos modificar las cross-references a nuestro gusto o al gusto de los editores, pero no los vamos a ver: os remito a la documentación oficial, aquí y aquí\nLa documentación de las “text-references” y “cross-references” de Bookdown están aquí. No he probado si funcionan en Quarto."
  },
  {
    "objectID": "blog/73_tablas-de-modelos.html",
    "href": "blog/73_tablas-de-modelos.html",
    "title": "Generando tablas de modelos y contrastes",
    "section": "",
    "text": "De momento, hasta que tenga tiempo, simplemente voy a dejar 2 links a materiales sobre el tema que hice para un curso de introducción a la Ciencia de datos con R:\n\nTablas para modelos\nUn poco de modelos. Una sección, dentro de un tutorial sobre EDA (análisis exploratorio de datos) sobre modelos estadísticos con R\n\nAdemás, por si interesa el tema, voy a dejar aquí 3 scripts que he utilizado en clase para practicar sobre modelos y técnicas estadísticas:\n\n\n\n\n\n\nScript (tablas y tablas para modelos)\n\n\n\n\n\n\n\n#- script para seguir el tutorial nº 8: Tablas con .qmd y .Rmd\n#- en el tutorial hay más contenido\nlibrary(tidyverse)\noptions(scipen = 999) #- para quitar la notación científica\n\n\n#- cargamos datos para generar algunos resultados para mostrarlos en tablas\nmy_url &lt;- \"https://raw.githubusercontent.com/perezp44/iris_data/master/data/PIAAC_data_small.csv\"\ndf_original &lt;- read_csv(my_url)\n\ndf &lt;- df_original %&gt;% select(Country, Gender, Education, Wage_month, Wage_hour, Numeracy_score)\n\n#- remotes::install_github(\"perezp44/pjpv2020.01\")\ndf_aa &lt;- pjpv2020.01::pjp_f_estadisticos_basicos(df) #- estadísticos básicos del df\ndf_bb &lt;- pjpv2020.01::pjp_f_unique_values(df)        #- valores únicos de cada variable de df\n\n\n\n\n#- tt_6 ------------------------------------------------------------------------\n#- Calculamos la media, el mínimo, el máximo y la desviación típica de Wage_month\ndf_tt_6 &lt;- df %&gt;% \n    group_by(Country) %&gt;% \n    summarise(W_medio  = mean(Wage_month, na.rm = TRUE) ,\n              W_minimo = min(Wage_month, na.rm = TRUE)  ,\n              W_maximo = max(Wage_month, na.rm = TRUE)  ,\n              W_sd = sd(Wage_month, na.rm = TRUE) ) %&gt;% \n              ungroup()\n\n\nknitr::kable(df_tt_6)      #- funcionará ok en ficheros .qmd y .Rmd\nknitr::kable(df_tt_6, format = \"pipe\") #- solo para verlo ahora\n\n\n#- tt_9 ------------------------------------------------------------------------\n#- ¿Cuanto más cobran los hombres (en %)?\ndf_tt_9 &lt;- df %&gt;% \n  group_by(Country, Gender) %&gt;% \n  summarise(W_mes_medio = mean(Wage_month, na.rm = TRUE)) %&gt;% \n  ungroup() %&gt;% \n  pivot_wider(names_from = Gender, values_from = W_mes_medio) %&gt;% \n  mutate(dif_W = Male-Female, dif_percent_W = dif_W/Female)\n\nknitr::kable(df_tt_9, format = \"pipe\")\n\n\n#- tt_10 ------------------------------------------------------------------------\n#- Numeracy Score por país y nivel de estudios. La tabla nos va a salir alargada\ndf_tt_10 &lt;- df %&gt;% \n  group_by(Country, Education) %&gt;% \n  summarise(Numeracy_media = mean(Numeracy_score, na.rm = TRUE)) %&gt;% \n  ungroup() \n\nknitr::kable(df_tt_10, format = \"pipe\")\n\n\n#- tt_11 -----------------------------------------------------------------------\n#- Hagamos la anterior tabla más ancha (Una columna para cada país)\ndf_tt_11 &lt;- df_tt_10 %&gt;% \n            pivot_wider(names_from = Education, \n                        values_from = Numeracy_media)\n\nknitr::kable(df_tt_11, format = \"pipe\")\n\n\n#- quiero ordenar la tabla de menor a mayor nivel educativo\ndf &lt;- df %&gt;% \n  mutate(Education.f = forcats::as_factor(Education), .after = Education)\n\nlevels(df$Education.f)\ndf %&gt;% count(Education)\n\n\n#- renombrando los levels de los factores\ndf &lt;- df %&gt;% \n  mutate(Education.f = forcats::fct_recode(Education.f,\n                    \"Primaria\"         = \"Primary\",\n                    \"Secundaria\"       = \"Secondary\", \n                    \"Secundaria_post\"  = \"Upper_second\",\n                    \"Terciaria\"        = \"Tertiary\" )) \nlevels(df$Education.f)\ndf %&gt;% count(Education.f)\n\n\n#- reordenando los levels de un factor\ndf &lt;- df %&gt;% \n  mutate(Education.f = forcats::fct_relevel(Education.f, \n                                  \"Primaria\", \"Secundaria\", \"Secundaria_post\")) \nlevels(df$Education.f)\ndf %&gt;% count(Education.f)\n\n\n#- tt_12 -----------------------------------------------------------------------\ndf_tt_12 &lt;- df %&gt;% \n  group_by(Country, Education.f) %&gt;% \n  summarise(Numeracy_media = mean(Numeracy_score, na.rm = TRUE)) %&gt;% \n  ungroup() %&gt;%  \n  pivot_wider(names_from = Education.f, \n              values_from = Numeracy_media) \n\nknitr::kable(df_tt_12, format = \"pipe\")\n\n#- kable() más cosas -----------------------------------------------------------\n#- kable() admite dar formato a algunos elementos de la tabla\nknitr::kable(df_tt_12, format = \"pipe\",\n             align = \"c\", \n             caption = \"Numeracy Score por país\",\n             digits = 2, \n             format.args = list(decimal.mark = \",\", big.mark = \".\"))\n\n\n#- kableExtra pkg --------------------------------------------------------------\nknitr::kable(df_tt_12) %&gt;% \n  kableExtra::kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\n\n#- scroll box\ndf_tt_12 %&gt;%\n  knitr::kable() %&gt;%\n  kableExtra::kable_styling(font_size = 11) %&gt;%\n  kableExtra::scroll_box(width = \"50%\", height = \"60%\")\n\n\n#- colorines, girar ...\nknitr::kable(df_tt_12) %&gt;%\n       kableExtra::kable_styling(full_width = F) %&gt;%\n       kableExtra::column_spec(1, bold = T, border_right = T) %&gt;%\n       kableExtra::column_spec(3, width = \"20em\", background = \"yellow\") %&gt;% \n       kableExtra::row_spec(3:4, bold = T, color = \"white\", background = \"#D7261E\") %&gt;% \n       kableExtra::row_spec(0, angle = 10)\n\nno_quitar &lt;- c(\"df\", \"df_tt_6\")\nrm(list=ls()[! ls() %in% no_quitar])\n\n#- pkg gt: un ejemplo ----------------------------------------------------------\nlibrary(gt) #-remotes::install_github(\"rstudio/gt\")\n\ngt::gt(df_tt_6)\n\n\n#- la tabla, al igual q un ggplot, se guarda en un objeto de clase \"list\"\ngt_tbl &lt;- df_tt_6 %&gt;% gt()\ngt_tbl\n\ngt_tbl &lt;- gt_tbl %&gt;% tab_header(title = md(\"**Genero y nivel educativo**\"),\n                      subtitle = md(\"Porcentaje de *H y M* en cada nivel educativo\"))\ngt_tbl\n\n\n#- pkg DT: un ejemplo ----------------------------------------------------------\nDT::datatable(iris)\nDT::datatable(df_tt_6)\n\n\n\nDT::datatable(iris, filter = 'top', \n              options = list(pageLength = 5, autoWidth = TRUE ))\n\n#- pkg reactable: un ejemplo ----------------------------------------------------------\nreactable::reactable(iris)\n\n\n#- pkg rpivotTable: un ejemplo ----------------------------------------------------------\n\nlibrary(rpivotTable) #- remotes::install_github(c(\"ramnathv/htmlwidgets\", \"smartinsightsfromdata/rpivotTable\"))\nrpivotTable(df, rows = \"Gender\", cols = c(\"Country\"), width = \"100%\", height = \"400px\")\n\n\n#- tablas para modelos ---------------------------------------------------------\nurla &lt;- \"https://raw.githubusercontent.com/perezp44/iris_data/master/data/PIAAC_data_small.csv\"\ndf &lt;- read_csv(urla)\n\n\n#- estimamos un modelo lineal\nmy_model &lt;- lm(Wage_hour ~ Numeracy_score + Gender , data = df)\nmy_model\n\nsummary(my_model)\n\n\n#- pkg stargazer ---------------------------------------------------------------\nstargazer::stargazer(my_model, type = \"html\")\nstargazer::stargazer(my_model, type = \"text\")\n\n\n#- creo una variable dicotómica (para estimar un Logit)\ndf &lt;- df %&gt;% \n  mutate(Numeracy_score_b = \n                      ifelse(Numeracy_score &gt; mean(Numeracy_score, na.rm = TRUE), 1, 0)) \n\n#- estimamos varios modelos y los almacenamos en una lista\nmy_models &lt;- list()\nmy_models[['W:  OLS 1']]   &lt;- lm( Wage_hour         ~ Numeracy_score + Gender , df)\nmy_models[['Nu: OLS 2']]   &lt;- lm( Numeracy_score    ~ Education + Gender , df)\nmy_models[['Nu: Logit 1']] &lt;- glm( Numeracy_score_b ~ Education + Gender , df, family = binomial())\n\n\nstargazer::stargazer(my_models, type = \"html\", title = \"Results\", align = TRUE)\nstargazer::stargazer(my_models, type = \"text\", title = \"Results\", align = TRUE)\n\n\n#- pkg modelsummary ------------------------------------------------------------\nlibrary(modelsummary) #- remotes::install_github('vincentarelbundock/modelsummary')\n\nmm &lt;- modelsummary::msummary(my_models, title = \"Resultados de estimación\")\nmm\n\n\n\n#- más pkgs para tablas descriptivas -------------------------------------------\n\n#- pkg janitor\ndf %&gt;% janitor::tabyl(Education, Country, Gender)\n\n\n\n\n\n\n\n\n\n\n\nScript (EDA)\n\n\n\n\n\n\n\n#- ejemplo para ilustrar algunas ideas y pkgs para EDA\n#- más cosas en el tutorial\nlibrary(tidyverse)\n\n#- DATOS (de bebes) ------------------------------------------------------------\nurl_bebes &lt;- \"https://github.com/perezp44/archivos_download.2/raw/main/df_bebes_EDA.rds\"\ndf &lt;- rio::import(url_bebes)\n\ndf_dicc &lt;- pjpv.curso.R.2022::pjp_dicc(df)\ndf_uniques &lt;- pjpv.curso.R.2022::pjp_valores_unicos(df)\n\n#- INFORMES DESCRIPTIVOS -------------------------------------------------------\n#- Hay pkgs q hacen informes descriptivos completos\n\n#- summarytools pkg\nzz &lt;- summarytools::dfSummary(df) #- genera un fichero/df con un resumen útil y agradable de ver\nsummarytools::view(zz)            #- para visualizar el informe\n\n\n#- ej: un nuevo paquete con una tabla chula: https://github.com/agstn/dataxray\n#devtools::install_github(\"glin/reactable\")\n#devtools::install_github(\"agstn/dataxray\")\nlibrary(dataxray)\n\ndf %&gt;% make_xray() %&gt;% view_xray()\n\n\n\n#- NA's ------------------------------------------------------------------------\nnaniar::gg_miss_var(df, show_pct = TRUE)\nnaniar::gg_miss_var(df, facet = estudios_madre.ff, show_pct = TRUE) #- faceted por la variable estudios_madre.ff\n\n#- co-ocurrencias de NA's\nnaniar::gg_miss_upset(df)\n\n\n#- ¿QUÉ HACEMOS con los NA's? --------------------------------------------------\n#- quitamos las filas q tengan NA en cualquiera de las variables/columnas\nzz1 &lt;- df %&gt;% tidyr::drop_na()\n\nzz2 &lt;- df %&gt;% tidyr::drop_na(c(peso_bebe, parto_nn_semanas))   #- quito filas con NA en peso_bebe o en SEMANAS\n\n\n#- SELECCIONAR las vv. NUMÉRICAS -----------------------------------------------\ndf_numeric &lt;- df %&gt;% select_if(is.numeric)      #- antigua sintaxis\ndf_numeric &lt;- df %&gt;% select(where(is.numeric))  #- nueva API\n\nsummarytools::descr(df)\n\nDataExplorer::plot_histogram(df, ncol = 2)\nDataExplorer::plot_density(df, ncol = 2)\n\ncorrr::correlate(df_numeric)\n\n#- tabla con matriz de correlaciones, con gt::gt()\ndf_numeric %&gt;% corrr::correlate() %&gt;%\n  gt::gt() %&gt;%\n  gt::fmt_number(decimals = 1, sep_mark = \".\",  dec_mark = \",\")\n\ndf %&gt;% inspectdf::inspect_cor() %&gt;% gt::gt()\ndf %&gt;% inspectdf::inspect_cor() %&gt;% inspectdf::show_plot()\n\n#- https://r-coder.com/correlation-plot-r/\n#- https://albert-rapp.de/posts/ggplot2-tips/13_alternative_corrplots/13_alternative_corrplots.html\n\n\n#- Boxplots ------------------\n#DataExplorer::plot_boxplot(df, by = \"estudios_madre.ff\")\nDataExplorer::plot_boxplot(df, by = \"parto_cesarea.f\")\n\n#- boxplots (3 v.)\ndf %&gt;% explore::explore(edad_madre.1, estudios_madre.ff, target = parto_cesarea.f)\n\n#- explore_all()\ndf %&gt;% select(sexo_bebe.f, edad_madre.1, peso_bebe,  estudios_madre.ff, parto_cesarea.f) %&gt;%\n  explore::explore_all(target = parto_cesarea.f)\n\n#- janitor:: tabulaciones cruzadas\ndf %&gt;% janitor::tabyl(estudios_madre.ff, parto_cesarea.f) %&gt;%\n       janitor::adorn_percentages() %&gt;%\n       gt::gt()\n\n\n#- VARIABLES CATEGÓRICAS -------------------------------------------------------\n#- no pasa nada si no lo entendéis del todo (siempre se puede hacer \"a mano\")\ndf %&gt;% select(where(is.factor)) %&gt;% names()     #- se nos escapan las q son character.\n\nvv_numericas &lt;- df %&gt;% select(where(is.numeric)) %&gt;% names()\nvv_numericas\n\nzz &lt;- df %&gt;% select(!vv_numericas)         #- deprecated but funciona\nnames(zz)\nzz &lt;- df %&gt;% select(!all_of(vv_numericas)) #- forma correcta\n\n\n#- porcentajes\ninspectdf::inspect_cat(zz) %&gt;% inspectdf::show_plot(high_cardinality = 1)\n\n#- graficos de barras\nDataExplorer::plot_bar(zz)\nDataExplorer::plot_bar(zz, by = \"sexo_bebe.f\")\nDataExplorer::plot_bar(zz, by = \"parto_cesarea.f\")\nDataExplorer::plot_bar(zz, by = \"estudios_madre.ff\")\n\n\n\n#- TABLAS ----------------------------------------------------------------------\nsummarytools::freq(df$sexo_bebe.f, style = \"rmarkdown\")\n\n#- cross-tabulations\nsummarytools::ctable(df$sexo_bebe.f, df$parto_cesarea.f)\nsummarytools::ctable(df$sexo_bebe.f, df$parto_cesarea.f, chisq = TRUE)\n\n\n#- JANITOR\ndf %&gt;% janitor::tabyl(parto_cesarea.f) %&gt;% gt::gt()\n\ndf %&gt;% janitor::tabyl(parto_cesarea.f, estudios_madre.ff)\n\ndf %&gt;% janitor::tabyl(parto_cesarea.f, estudios_madre.ff) %&gt;% janitor::adorn_percentages()\n\n#- ademas, como janitor almacena las tablas en df, podemos usar gt()\ndf %&gt;% janitor::tabyl(parto_cesarea.f, estudios_madre.ff) %&gt;% gt::gt()\n\n\n#- CONTRASTES ------------------------------------------------------------------\nt.test(df$peso_bebe, mu = 3250)\nt.test(df$peso_bebe ~ df$parto_cesarea.f)\n\n\n#- MODELOS ---------------------------------------------------------------------\ndf_m &lt;- df %&gt;% select(peso_bebe, parto_nn_semanas, sexo_bebe.f, parto_cesarea.f, edad_madre.1, estudios_madre.ff)\n\n#- frente a todas las v. del df\nmod_1 &lt;- lm(peso_bebe ~ . , data = df_m)\nsummary(mod_1)\n\n\nmod_1 &lt;- lm(peso_bebe ~ parto_nn_semanas + edad_madre.1 + sexo_bebe.f , data = df_m)\n\nsummary(mod_1)                   #- tabla resumen\n\n#- varios modelos ----\nm1 &lt;- lm(peso_bebe ~ parto_nn_semanas + sexo_bebe.f + edad_madre.1 , data = df)\nm2 &lt;- lm(peso_bebe ~ parto_nn_semanas + sexo_bebe.f + edad_madre.1 + estudios_madre.ff , data = df)\n\nsjPlot::tab_model(m1)\n\nsjPlot::plot_model(m1, sort.est = TRUE)\n\nsjPlot::tab_model(m1, m2, show.ci   = FALSE)\n\n\n#- mas tablas de modelos\nstargazer::stargazer(m1, type = \"text\")  #- latex. html\n\nstargazer::stargazer(m1, m2,  type = \"text\")  #- latex. html\n\n\nlibrary(apaTables) #- install.packages(\"apaTables\",dep = TRUE)\napaTables::apa.reg.table(m1)\n\napaTables::\n#- en el tutorial de tablas vimos más posibilidades\n\n\n\n\n\n\n\n\n\n\n\nScript (easystats package)\n\n\n\n\n\n\n\n#- easystats: (https://easystats.github.io/easystats/)\n#- An R Framework for Easy Statistical Modeling, Visualization, and Reporting\n#- install.packages(\"easystats\")\n\n#- report: https://easystats.github.io/report/ ----------------\nlibrary(tidyverse)\nlibrary(easystats)\n\nreport(iris)\n\niris %&gt;% select(-starts_with(\"Sepal\")) %&gt;% group_by(Species) %&gt;%\n  report() %&gt;% summary()\n\nreport(t.test(mtcars$mpg ~ mtcars$am))\n\ncor.test(iris$Sepal.Length, iris$Sepal.Width) %&gt;%\n  report() %&gt;%  as.data.frame()\n\naov(Sepal.Length ~ Species, data = iris) %&gt;% report()\n\n\nmodel &lt;- lm(Sepal.Length ~ Species, data = iris)\nsummary(model)\nreport(model)\n\nmodel &lt;- glm(vs ~ mpg * drat, data = mtcars, family = \"binomial\")\nsummary(model)\nreport(model)\n\n\nlibrary(lme4)\nmodel &lt;- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris)\nsummary(model)\nreport(model)\n\n\n#- parameters: https://easystats.github.io/parameters/\n\nmodel &lt;- lm(Sepal.Width ~ Petal.Length * Species + Petal.Width, data = iris)\nmodel_parameters(model)\nmodel_parameters(model, standardize = \"refit\")\n\n\n#- see: https://easystats.github.io/see/\n\nresults &lt;- summary(correlation(iris))\nplot(results, show_data = \"points\")\n\n\nmodel &lt;- lm(wt ~ am * cyl, data = mtcars)\nsummary(model)\nplot(parameters(model))\n\n\n\nmodel &lt;- lm(mpg ~ factor(cyl) * wt, data = mtcars)\nsummary(model)\nresults &lt;- fortify(model)\n\n# step-3\nggplot(results) +\n  geom_point(aes(x = wt, y = mpg, color = `factor(cyl)`)) +\n  geom_line(aes(x = wt, y = .fitted, color = `factor(cyl)`))\n\n\n\n\n\n\n\n\n\n\n\n\nExtensión: Algunas referencias para cuando retome el tema\n\n\n\n\n\n\nEsto puede ayudar a escribir ecuaciones/modelos estimados\nQuarto con gt de A. Rapp\nMaking APA Tables with the gt Package\nTablas de MRLM con pkg finalfit\npaquete rempsyc: Convenience functions for psychology. Hace tablas APA\nTablas side by side\nCopy Table in Excel and Paste as a Markdown Table"
  },
  {
    "objectID": "blog/73_tablas-de-modelos.html#intro",
    "href": "blog/73_tablas-de-modelos.html#intro",
    "title": "Generando tablas de modelos y contrastes",
    "section": "",
    "text": "De momento, hasta que tenga tiempo, simplemente voy a dejar 2 links a materiales sobre el tema que hice para un curso de introducción a la Ciencia de datos con R:\n\nTablas para modelos\nUn poco de modelos. Una sección, dentro de un tutorial sobre EDA (análisis exploratorio de datos) sobre modelos estadísticos con R\n\nAdemás, por si interesa el tema, voy a dejar aquí 3 scripts que he utilizado en clase para practicar sobre modelos y técnicas estadísticas:\n\n\n\n\n\n\nScript (tablas y tablas para modelos)\n\n\n\n\n\n\n\n#- script para seguir el tutorial nº 8: Tablas con .qmd y .Rmd\n#- en el tutorial hay más contenido\nlibrary(tidyverse)\noptions(scipen = 999) #- para quitar la notación científica\n\n\n#- cargamos datos para generar algunos resultados para mostrarlos en tablas\nmy_url &lt;- \"https://raw.githubusercontent.com/perezp44/iris_data/master/data/PIAAC_data_small.csv\"\ndf_original &lt;- read_csv(my_url)\n\ndf &lt;- df_original %&gt;% select(Country, Gender, Education, Wage_month, Wage_hour, Numeracy_score)\n\n#- remotes::install_github(\"perezp44/pjpv2020.01\")\ndf_aa &lt;- pjpv2020.01::pjp_f_estadisticos_basicos(df) #- estadísticos básicos del df\ndf_bb &lt;- pjpv2020.01::pjp_f_unique_values(df)        #- valores únicos de cada variable de df\n\n\n\n\n#- tt_6 ------------------------------------------------------------------------\n#- Calculamos la media, el mínimo, el máximo y la desviación típica de Wage_month\ndf_tt_6 &lt;- df %&gt;% \n    group_by(Country) %&gt;% \n    summarise(W_medio  = mean(Wage_month, na.rm = TRUE) ,\n              W_minimo = min(Wage_month, na.rm = TRUE)  ,\n              W_maximo = max(Wage_month, na.rm = TRUE)  ,\n              W_sd = sd(Wage_month, na.rm = TRUE) ) %&gt;% \n              ungroup()\n\n\nknitr::kable(df_tt_6)      #- funcionará ok en ficheros .qmd y .Rmd\nknitr::kable(df_tt_6, format = \"pipe\") #- solo para verlo ahora\n\n\n#- tt_9 ------------------------------------------------------------------------\n#- ¿Cuanto más cobran los hombres (en %)?\ndf_tt_9 &lt;- df %&gt;% \n  group_by(Country, Gender) %&gt;% \n  summarise(W_mes_medio = mean(Wage_month, na.rm = TRUE)) %&gt;% \n  ungroup() %&gt;% \n  pivot_wider(names_from = Gender, values_from = W_mes_medio) %&gt;% \n  mutate(dif_W = Male-Female, dif_percent_W = dif_W/Female)\n\nknitr::kable(df_tt_9, format = \"pipe\")\n\n\n#- tt_10 ------------------------------------------------------------------------\n#- Numeracy Score por país y nivel de estudios. La tabla nos va a salir alargada\ndf_tt_10 &lt;- df %&gt;% \n  group_by(Country, Education) %&gt;% \n  summarise(Numeracy_media = mean(Numeracy_score, na.rm = TRUE)) %&gt;% \n  ungroup() \n\nknitr::kable(df_tt_10, format = \"pipe\")\n\n\n#- tt_11 -----------------------------------------------------------------------\n#- Hagamos la anterior tabla más ancha (Una columna para cada país)\ndf_tt_11 &lt;- df_tt_10 %&gt;% \n            pivot_wider(names_from = Education, \n                        values_from = Numeracy_media)\n\nknitr::kable(df_tt_11, format = \"pipe\")\n\n\n#- quiero ordenar la tabla de menor a mayor nivel educativo\ndf &lt;- df %&gt;% \n  mutate(Education.f = forcats::as_factor(Education), .after = Education)\n\nlevels(df$Education.f)\ndf %&gt;% count(Education)\n\n\n#- renombrando los levels de los factores\ndf &lt;- df %&gt;% \n  mutate(Education.f = forcats::fct_recode(Education.f,\n                    \"Primaria\"         = \"Primary\",\n                    \"Secundaria\"       = \"Secondary\", \n                    \"Secundaria_post\"  = \"Upper_second\",\n                    \"Terciaria\"        = \"Tertiary\" )) \nlevels(df$Education.f)\ndf %&gt;% count(Education.f)\n\n\n#- reordenando los levels de un factor\ndf &lt;- df %&gt;% \n  mutate(Education.f = forcats::fct_relevel(Education.f, \n                                  \"Primaria\", \"Secundaria\", \"Secundaria_post\")) \nlevels(df$Education.f)\ndf %&gt;% count(Education.f)\n\n\n#- tt_12 -----------------------------------------------------------------------\ndf_tt_12 &lt;- df %&gt;% \n  group_by(Country, Education.f) %&gt;% \n  summarise(Numeracy_media = mean(Numeracy_score, na.rm = TRUE)) %&gt;% \n  ungroup() %&gt;%  \n  pivot_wider(names_from = Education.f, \n              values_from = Numeracy_media) \n\nknitr::kable(df_tt_12, format = \"pipe\")\n\n#- kable() más cosas -----------------------------------------------------------\n#- kable() admite dar formato a algunos elementos de la tabla\nknitr::kable(df_tt_12, format = \"pipe\",\n             align = \"c\", \n             caption = \"Numeracy Score por país\",\n             digits = 2, \n             format.args = list(decimal.mark = \",\", big.mark = \".\"))\n\n\n#- kableExtra pkg --------------------------------------------------------------\nknitr::kable(df_tt_12) %&gt;% \n  kableExtra::kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\n\n#- scroll box\ndf_tt_12 %&gt;%\n  knitr::kable() %&gt;%\n  kableExtra::kable_styling(font_size = 11) %&gt;%\n  kableExtra::scroll_box(width = \"50%\", height = \"60%\")\n\n\n#- colorines, girar ...\nknitr::kable(df_tt_12) %&gt;%\n       kableExtra::kable_styling(full_width = F) %&gt;%\n       kableExtra::column_spec(1, bold = T, border_right = T) %&gt;%\n       kableExtra::column_spec(3, width = \"20em\", background = \"yellow\") %&gt;% \n       kableExtra::row_spec(3:4, bold = T, color = \"white\", background = \"#D7261E\") %&gt;% \n       kableExtra::row_spec(0, angle = 10)\n\nno_quitar &lt;- c(\"df\", \"df_tt_6\")\nrm(list=ls()[! ls() %in% no_quitar])\n\n#- pkg gt: un ejemplo ----------------------------------------------------------\nlibrary(gt) #-remotes::install_github(\"rstudio/gt\")\n\ngt::gt(df_tt_6)\n\n\n#- la tabla, al igual q un ggplot, se guarda en un objeto de clase \"list\"\ngt_tbl &lt;- df_tt_6 %&gt;% gt()\ngt_tbl\n\ngt_tbl &lt;- gt_tbl %&gt;% tab_header(title = md(\"**Genero y nivel educativo**\"),\n                      subtitle = md(\"Porcentaje de *H y M* en cada nivel educativo\"))\ngt_tbl\n\n\n#- pkg DT: un ejemplo ----------------------------------------------------------\nDT::datatable(iris)\nDT::datatable(df_tt_6)\n\n\n\nDT::datatable(iris, filter = 'top', \n              options = list(pageLength = 5, autoWidth = TRUE ))\n\n#- pkg reactable: un ejemplo ----------------------------------------------------------\nreactable::reactable(iris)\n\n\n#- pkg rpivotTable: un ejemplo ----------------------------------------------------------\n\nlibrary(rpivotTable) #- remotes::install_github(c(\"ramnathv/htmlwidgets\", \"smartinsightsfromdata/rpivotTable\"))\nrpivotTable(df, rows = \"Gender\", cols = c(\"Country\"), width = \"100%\", height = \"400px\")\n\n\n#- tablas para modelos ---------------------------------------------------------\nurla &lt;- \"https://raw.githubusercontent.com/perezp44/iris_data/master/data/PIAAC_data_small.csv\"\ndf &lt;- read_csv(urla)\n\n\n#- estimamos un modelo lineal\nmy_model &lt;- lm(Wage_hour ~ Numeracy_score + Gender , data = df)\nmy_model\n\nsummary(my_model)\n\n\n#- pkg stargazer ---------------------------------------------------------------\nstargazer::stargazer(my_model, type = \"html\")\nstargazer::stargazer(my_model, type = \"text\")\n\n\n#- creo una variable dicotómica (para estimar un Logit)\ndf &lt;- df %&gt;% \n  mutate(Numeracy_score_b = \n                      ifelse(Numeracy_score &gt; mean(Numeracy_score, na.rm = TRUE), 1, 0)) \n\n#- estimamos varios modelos y los almacenamos en una lista\nmy_models &lt;- list()\nmy_models[['W:  OLS 1']]   &lt;- lm( Wage_hour         ~ Numeracy_score + Gender , df)\nmy_models[['Nu: OLS 2']]   &lt;- lm( Numeracy_score    ~ Education + Gender , df)\nmy_models[['Nu: Logit 1']] &lt;- glm( Numeracy_score_b ~ Education + Gender , df, family = binomial())\n\n\nstargazer::stargazer(my_models, type = \"html\", title = \"Results\", align = TRUE)\nstargazer::stargazer(my_models, type = \"text\", title = \"Results\", align = TRUE)\n\n\n#- pkg modelsummary ------------------------------------------------------------\nlibrary(modelsummary) #- remotes::install_github('vincentarelbundock/modelsummary')\n\nmm &lt;- modelsummary::msummary(my_models, title = \"Resultados de estimación\")\nmm\n\n\n\n#- más pkgs para tablas descriptivas -------------------------------------------\n\n#- pkg janitor\ndf %&gt;% janitor::tabyl(Education, Country, Gender)\n\n\n\n\n\n\n\n\n\n\n\nScript (EDA)\n\n\n\n\n\n\n\n#- ejemplo para ilustrar algunas ideas y pkgs para EDA\n#- más cosas en el tutorial\nlibrary(tidyverse)\n\n#- DATOS (de bebes) ------------------------------------------------------------\nurl_bebes &lt;- \"https://github.com/perezp44/archivos_download.2/raw/main/df_bebes_EDA.rds\"\ndf &lt;- rio::import(url_bebes)\n\ndf_dicc &lt;- pjpv.curso.R.2022::pjp_dicc(df)\ndf_uniques &lt;- pjpv.curso.R.2022::pjp_valores_unicos(df)\n\n#- INFORMES DESCRIPTIVOS -------------------------------------------------------\n#- Hay pkgs q hacen informes descriptivos completos\n\n#- summarytools pkg\nzz &lt;- summarytools::dfSummary(df) #- genera un fichero/df con un resumen útil y agradable de ver\nsummarytools::view(zz)            #- para visualizar el informe\n\n\n#- ej: un nuevo paquete con una tabla chula: https://github.com/agstn/dataxray\n#devtools::install_github(\"glin/reactable\")\n#devtools::install_github(\"agstn/dataxray\")\nlibrary(dataxray)\n\ndf %&gt;% make_xray() %&gt;% view_xray()\n\n\n\n#- NA's ------------------------------------------------------------------------\nnaniar::gg_miss_var(df, show_pct = TRUE)\nnaniar::gg_miss_var(df, facet = estudios_madre.ff, show_pct = TRUE) #- faceted por la variable estudios_madre.ff\n\n#- co-ocurrencias de NA's\nnaniar::gg_miss_upset(df)\n\n\n#- ¿QUÉ HACEMOS con los NA's? --------------------------------------------------\n#- quitamos las filas q tengan NA en cualquiera de las variables/columnas\nzz1 &lt;- df %&gt;% tidyr::drop_na()\n\nzz2 &lt;- df %&gt;% tidyr::drop_na(c(peso_bebe, parto_nn_semanas))   #- quito filas con NA en peso_bebe o en SEMANAS\n\n\n#- SELECCIONAR las vv. NUMÉRICAS -----------------------------------------------\ndf_numeric &lt;- df %&gt;% select_if(is.numeric)      #- antigua sintaxis\ndf_numeric &lt;- df %&gt;% select(where(is.numeric))  #- nueva API\n\nsummarytools::descr(df)\n\nDataExplorer::plot_histogram(df, ncol = 2)\nDataExplorer::plot_density(df, ncol = 2)\n\ncorrr::correlate(df_numeric)\n\n#- tabla con matriz de correlaciones, con gt::gt()\ndf_numeric %&gt;% corrr::correlate() %&gt;%\n  gt::gt() %&gt;%\n  gt::fmt_number(decimals = 1, sep_mark = \".\",  dec_mark = \",\")\n\ndf %&gt;% inspectdf::inspect_cor() %&gt;% gt::gt()\ndf %&gt;% inspectdf::inspect_cor() %&gt;% inspectdf::show_plot()\n\n#- https://r-coder.com/correlation-plot-r/\n#- https://albert-rapp.de/posts/ggplot2-tips/13_alternative_corrplots/13_alternative_corrplots.html\n\n\n#- Boxplots ------------------\n#DataExplorer::plot_boxplot(df, by = \"estudios_madre.ff\")\nDataExplorer::plot_boxplot(df, by = \"parto_cesarea.f\")\n\n#- boxplots (3 v.)\ndf %&gt;% explore::explore(edad_madre.1, estudios_madre.ff, target = parto_cesarea.f)\n\n#- explore_all()\ndf %&gt;% select(sexo_bebe.f, edad_madre.1, peso_bebe,  estudios_madre.ff, parto_cesarea.f) %&gt;%\n  explore::explore_all(target = parto_cesarea.f)\n\n#- janitor:: tabulaciones cruzadas\ndf %&gt;% janitor::tabyl(estudios_madre.ff, parto_cesarea.f) %&gt;%\n       janitor::adorn_percentages() %&gt;%\n       gt::gt()\n\n\n#- VARIABLES CATEGÓRICAS -------------------------------------------------------\n#- no pasa nada si no lo entendéis del todo (siempre se puede hacer \"a mano\")\ndf %&gt;% select(where(is.factor)) %&gt;% names()     #- se nos escapan las q son character.\n\nvv_numericas &lt;- df %&gt;% select(where(is.numeric)) %&gt;% names()\nvv_numericas\n\nzz &lt;- df %&gt;% select(!vv_numericas)         #- deprecated but funciona\nnames(zz)\nzz &lt;- df %&gt;% select(!all_of(vv_numericas)) #- forma correcta\n\n\n#- porcentajes\ninspectdf::inspect_cat(zz) %&gt;% inspectdf::show_plot(high_cardinality = 1)\n\n#- graficos de barras\nDataExplorer::plot_bar(zz)\nDataExplorer::plot_bar(zz, by = \"sexo_bebe.f\")\nDataExplorer::plot_bar(zz, by = \"parto_cesarea.f\")\nDataExplorer::plot_bar(zz, by = \"estudios_madre.ff\")\n\n\n\n#- TABLAS ----------------------------------------------------------------------\nsummarytools::freq(df$sexo_bebe.f, style = \"rmarkdown\")\n\n#- cross-tabulations\nsummarytools::ctable(df$sexo_bebe.f, df$parto_cesarea.f)\nsummarytools::ctable(df$sexo_bebe.f, df$parto_cesarea.f, chisq = TRUE)\n\n\n#- JANITOR\ndf %&gt;% janitor::tabyl(parto_cesarea.f) %&gt;% gt::gt()\n\ndf %&gt;% janitor::tabyl(parto_cesarea.f, estudios_madre.ff)\n\ndf %&gt;% janitor::tabyl(parto_cesarea.f, estudios_madre.ff) %&gt;% janitor::adorn_percentages()\n\n#- ademas, como janitor almacena las tablas en df, podemos usar gt()\ndf %&gt;% janitor::tabyl(parto_cesarea.f, estudios_madre.ff) %&gt;% gt::gt()\n\n\n#- CONTRASTES ------------------------------------------------------------------\nt.test(df$peso_bebe, mu = 3250)\nt.test(df$peso_bebe ~ df$parto_cesarea.f)\n\n\n#- MODELOS ---------------------------------------------------------------------\ndf_m &lt;- df %&gt;% select(peso_bebe, parto_nn_semanas, sexo_bebe.f, parto_cesarea.f, edad_madre.1, estudios_madre.ff)\n\n#- frente a todas las v. del df\nmod_1 &lt;- lm(peso_bebe ~ . , data = df_m)\nsummary(mod_1)\n\n\nmod_1 &lt;- lm(peso_bebe ~ parto_nn_semanas + edad_madre.1 + sexo_bebe.f , data = df_m)\n\nsummary(mod_1)                   #- tabla resumen\n\n#- varios modelos ----\nm1 &lt;- lm(peso_bebe ~ parto_nn_semanas + sexo_bebe.f + edad_madre.1 , data = df)\nm2 &lt;- lm(peso_bebe ~ parto_nn_semanas + sexo_bebe.f + edad_madre.1 + estudios_madre.ff , data = df)\n\nsjPlot::tab_model(m1)\n\nsjPlot::plot_model(m1, sort.est = TRUE)\n\nsjPlot::tab_model(m1, m2, show.ci   = FALSE)\n\n\n#- mas tablas de modelos\nstargazer::stargazer(m1, type = \"text\")  #- latex. html\n\nstargazer::stargazer(m1, m2,  type = \"text\")  #- latex. html\n\n\nlibrary(apaTables) #- install.packages(\"apaTables\",dep = TRUE)\napaTables::apa.reg.table(m1)\n\napaTables::\n#- en el tutorial de tablas vimos más posibilidades\n\n\n\n\n\n\n\n\n\n\n\nScript (easystats package)\n\n\n\n\n\n\n\n#- easystats: (https://easystats.github.io/easystats/)\n#- An R Framework for Easy Statistical Modeling, Visualization, and Reporting\n#- install.packages(\"easystats\")\n\n#- report: https://easystats.github.io/report/ ----------------\nlibrary(tidyverse)\nlibrary(easystats)\n\nreport(iris)\n\niris %&gt;% select(-starts_with(\"Sepal\")) %&gt;% group_by(Species) %&gt;%\n  report() %&gt;% summary()\n\nreport(t.test(mtcars$mpg ~ mtcars$am))\n\ncor.test(iris$Sepal.Length, iris$Sepal.Width) %&gt;%\n  report() %&gt;%  as.data.frame()\n\naov(Sepal.Length ~ Species, data = iris) %&gt;% report()\n\n\nmodel &lt;- lm(Sepal.Length ~ Species, data = iris)\nsummary(model)\nreport(model)\n\nmodel &lt;- glm(vs ~ mpg * drat, data = mtcars, family = \"binomial\")\nsummary(model)\nreport(model)\n\n\nlibrary(lme4)\nmodel &lt;- lme4::lmer(Sepal.Length ~ Petal.Length + (1 | Species), data = iris)\nsummary(model)\nreport(model)\n\n\n#- parameters: https://easystats.github.io/parameters/\n\nmodel &lt;- lm(Sepal.Width ~ Petal.Length * Species + Petal.Width, data = iris)\nmodel_parameters(model)\nmodel_parameters(model, standardize = \"refit\")\n\n\n#- see: https://easystats.github.io/see/\n\nresults &lt;- summary(correlation(iris))\nplot(results, show_data = \"points\")\n\n\nmodel &lt;- lm(wt ~ am * cyl, data = mtcars)\nsummary(model)\nplot(parameters(model))\n\n\n\nmodel &lt;- lm(mpg ~ factor(cyl) * wt, data = mtcars)\nsummary(model)\nresults &lt;- fortify(model)\n\n# step-3\nggplot(results) +\n  geom_point(aes(x = wt, y = mpg, color = `factor(cyl)`)) +\n  geom_line(aes(x = wt, y = .fitted, color = `factor(cyl)`))\n\n\n\n\n\n\n\n\n\n\n\n\nExtensión: Algunas referencias para cuando retome el tema\n\n\n\n\n\n\nEsto puede ayudar a escribir ecuaciones/modelos estimados\nQuarto con gt de A. Rapp\nMaking APA Tables with the gt Package\nTablas de MRLM con pkg finalfit\npaquete rempsyc: Convenience functions for psychology. Hace tablas APA\nTablas side by side\nCopy Table in Excel and Paste as a Markdown Table"
  },
  {
    "objectID": "blog/75_webr.html",
    "href": "blog/75_webr.html",
    "title": "Webr",
    "section": "",
    "text": "Para ejecutar código R se necesita tener instalado R en tu ordenado: sí, se necesita un interprete de R. Pero resulta que, Webr es una versión de R que se ejecuta directamente en el navegador. ¿Y cómo puede R ejecutarse en el navegador? pues usando WebAssembly(wasm), un estándar abierto que ha revolucionado el desarrollo web al proporcionar un nuevo enfoque para ejecutar código en los navegadores. Si te interesa el tema, aquí puedes empezar. El caso es que ahora, con WebAssembly y Webr, podemos ejecutar R en el navegador.\nLa documentación oficial de Webr nos dice que:\n\nWebR is a version of the statistical language R compiled for the browser and Node.js using WebAssembly, via Emscripten.\n\nAsí que con Webr tenemos la posibilidad de ejecutar R en el navegador. Genial!! Aquí tienes una demo del webR IDE donde puedes probarlo."
  },
  {
    "objectID": "blog/75_webr.html#intro",
    "href": "blog/75_webr.html#intro",
    "title": "Webr",
    "section": "",
    "text": "Para ejecutar código R se necesita tener instalado R en tu ordenado: sí, se necesita un interprete de R. Pero resulta que, Webr es una versión de R que se ejecuta directamente en el navegador. ¿Y cómo puede R ejecutarse en el navegador? pues usando WebAssembly(wasm), un estándar abierto que ha revolucionado el desarrollo web al proporcionar un nuevo enfoque para ejecutar código en los navegadores. Si te interesa el tema, aquí puedes empezar. El caso es que ahora, con WebAssembly y Webr, podemos ejecutar R en el navegador.\nLa documentación oficial de Webr nos dice que:\n\nWebR is a version of the statistical language R compiled for the browser and Node.js using WebAssembly, via Emscripten.\n\nAsí que con Webr tenemos la posibilidad de ejecutar R en el navegador. Genial!! Aquí tienes una demo del webR IDE donde puedes probarlo."
  },
  {
    "objectID": "blog/75_webr.html#quarto-webr",
    "href": "blog/75_webr.html#quarto-webr",
    "title": "Webr",
    "section": "\n2 quarto-webr\n",
    "text": "2 quarto-webr\n\nGenial que ahora se pueda ejecutar R en el navegador, pero este curso va sobre Quarto, así que me voy a centrar en quarto-webr, una extensión de Quarto que facilita la inserción de chunks de código WebR en documentos generados con Quarto de Quarto1.\n¿Y para que puede ser de utilidad quarto-webr? Pues para hacer documentos interactivos, en el sentido de que se puedan ejecutar código R en ellos … sin tener instalado R en el ordenador!!\nAquí tienes la documentación de quarto-webr, y aquí tienes un post llamado “Playing with webr” que si te fijas te permite descargarte el documento fuente"
  },
  {
    "objectID": "blog/75_webr.html#cómo-usamos-quarto-webr",
    "href": "blog/75_webr.html#cómo-usamos-quarto-webr",
    "title": "Webr",
    "section": "\n3 ¿Cómo usamos quarto-webr?",
    "text": "3 ¿Cómo usamos quarto-webr?\nPara empezar a usar Webr no hace falta más que este video. Básicamente hay que:\n\nañadir la extensión:\n\nquarto add coatless/quarto-webr\n\nPara usarla hay que añadir webr en el YAML, también hay que poner engine: knitr. Además se pueden añadir paquetes adicionales: El YAML podría quedar como:\n\n---\ntitle: webR in Quarto HTML Documents\nformat: html\nengine: knitr\nfilters:\n  - webr\nwebr:\n  packages:\n    - \"dplyr\"\n    - \"ggplot2\"\n---\n\nThis is a webr-enabled code cell in a Quarto HTML document.\n\n```{webr-r}\nfit = lm(mpg ~ am, data = mtcars)\nsummary(fit)\n```\n\n\nY ya podríamos introducir en nuestros .qmd, chunks de código R ejecutables. Para ello solo hay que marcar los chunks with {webr-r} en lugar de con {r}. Algo como:\n\n```{webr-r}\nfit = lm(mpg ~ am, data = mtcars)\nsummary(fit)\n```\nLo bueno de estos nuevos webr-chunks es que son editables y se pueden ejecutar en el navegador."
  },
  {
    "objectID": "blog/75_webr.html#un-ejemplo",
    "href": "blog/75_webr.html#un-ejemplo",
    "title": "Webr",
    "section": "\n4 Un ejemplo",
    "text": "4 Un ejemplo\nUn ejemplo de celda/chunk de Webr\nSi escribes esto:\n```{webr-r}\nplot(iris)\n```\nGenerará la siguiente celda:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "blog/75_webr.html#más-ejemplos",
    "href": "blog/75_webr.html#más-ejemplos",
    "title": "Webr",
    "section": "\n5 Más ejemplos",
    "text": "5 Más ejemplos\n\nAquí se usa webr. Una cosa que hace es instalar un paquete con el sistema propio de WebR con: webr::install(\"ggplot2\"); aunque esto puede estar superado pues se pueden cargar pkgs no R-base desde el YAML. Lo investigaré. Sí ahora se puede usar el YAML para “instalar” paquetes, pero supongo que también funcionará el método anterior\nAquí otro tutorial. Habla de Bob Rudis\nAquí una web con varios ejemplos de uso de WebR. Aquí está el repo.\nUn post de Bob Rudis que fue de los primeros en trabajar en WebR\nNicola Rennie explica en este toot que ha hecho un Shiny con WebR. La ventaja es que puedes hacer el deply sin teer R en el backend. Otro toot con una charla de Nicola.\nUn video de 16 minutos y sus slides para posit::conference 2023\nwebR 0.2.0 has been released\nDanielle: How to run R code in the browser with webR"
  },
  {
    "objectID": "blog/75_webr.html#algunas-noticias-sobre-webr",
    "href": "blog/75_webr.html#algunas-noticias-sobre-webr",
    "title": "Webr",
    "section": "\n6 Algunas noticias sobre WebR",
    "text": "6 Algunas noticias sobre WebR\nWebR es bastante nuevo, así que hasta que se “estabilice la cosa” y yo pilote un poco, apuntaré aquí algunas news sobre WebR:\n\nla extensión quarto-webr ya está en la version 0.4\nParece que había problemas para usar Webr en revealjs slides. Con Quarto 1.4 ya está solucionado, parece que era un problema de Pandoc, pero aquí está la issue. La guardo porque tiene cosas como, por ejemplo, hacer un downgrade de una extensión.\nSe ha creado una Awesome WebR list."
  },
  {
    "objectID": "blog/75_webr.html#footnotes",
    "href": "blog/75_webr.html#footnotes",
    "title": "Webr",
    "section": "Notas",
    "text": "Notas\n\nEvidentemente sólo funcionará para documentos en HTML, ya sean RevealJS slides, Websites, Blogs, etc … Olvídate de que funcione en un pdf↩︎"
  },
  {
    "objectID": "blog/71_tablas-con-R.html",
    "href": "blog/71_tablas-con-R.html",
    "title": "Generando tablas con R",
    "section": "",
    "text": "Durante el curso vimos que se podían insertar tablas en nuestros documentos QMD de dos formas:\n\nusando Markdown\nusando R (o otro lenguaje de programación)\n\nSolo vimos un ejemplo muy sencillo, concretamente este pero dije que se podían hacer tablas muy chulas con R. Vamos a profundizar en ello."
  },
  {
    "objectID": "blog/71_tablas-con-R.html#intro",
    "href": "blog/71_tablas-con-R.html#intro",
    "title": "Generando tablas con R",
    "section": "",
    "text": "Durante el curso vimos que se podían insertar tablas en nuestros documentos QMD de dos formas:\n\nusando Markdown\nusando R (o otro lenguaje de programación)\n\nSolo vimos un ejemplo muy sencillo, concretamente este pero dije que se podían hacer tablas muy chulas con R. Vamos a profundizar en ello."
  },
  {
    "objectID": "blog/71_tablas-con-R.html#datos",
    "href": "blog/71_tablas-con-R.html#datos",
    "title": "Generando tablas con R",
    "section": "\n2 Datos",
    "text": "2 Datos\nPara ello vamos a usar datos de inflación de la OCDE. Vamos a descargar los datos:\n\nCódigolibrary(tidyverse)\n\n#- Datos de inflación de la OCDE \nruta_inflation &lt;- \"https://raw.githubusercontent.com/perezp44/archivos.download.2023/main/DP_LIVE_22032023113248591.csv\"\ninflation_orig &lt;- readr::read_csv(ruta_inflation)\ninflation_dicc &lt;- pjpv.curso.R.2022::pjp_dicc(inflation_orig)\n\n#- seleccionamos CPI mensual\ninflation &lt;- inflation_orig %&gt;% \n  dplyr::filter(FREQUENCY == \"M\" & MEASURE == \"AGRWTH\") %&gt;% \n  select(place = LOCATION, date = TIME, cpi = Value, tipo = SUBJECT) \n\n#- nos quedamos solo con el último dato: 2023-02 (y arreglamos)\ninflation &lt;- inflation %&gt;% dplyr::filter(date == \"2023-02\") %&gt;% \n  tidyr::pivot_wider(names_from = tipo, values_from = cpi) %&gt;% \n  dplyr::arrange(desc(TOT))"
  },
  {
    "objectID": "blog/71_tablas-con-R.html#tablas-básicas",
    "href": "blog/71_tablas-con-R.html#tablas-básicas",
    "title": "Generando tablas con R",
    "section": "\n3 Tablas básicas",
    "text": "3 Tablas básicas\nUna vez tenemos los datos que queremos mostrar en una tabla, es muy fácil usar varios paquetes para mostrarlos en una tabla. Para saber un poco más sobre tablas en Quarto, puedes ir aquí\nCon gt\n\n\nCódigogt::gt(inflation %&gt;% slice(1:10))\n\n\n\n\n\nplace\ndate\nENRG\nFOOD\nTOT\nTOT_FOODENRG\n\n\n\nARG\n2023-02\nNA\n102.62940\n102.50080\nNA\n\n\nTUR\n2023-02\n42.23681\n69.33482\n55.17983\n51.902860\n\n\nHUN\n2023-02\n39.45069\n45.80613\n25.40000\n16.207950\n\n\nLVA\n2023-02\n46.42958\n25.33258\n20.26292\n10.511360\n\n\nLTU\n2023-02\n29.20563\n30.18281\n18.73836\n12.170210\n\n\nEST\n2023-02\n30.27698\n25.20833\n17.54967\n12.125680\n\n\nCZE\n2023-02\n33.82126\n23.91482\n16.71949\n11.444360\n\n\nCOL\n2023-02\n18.02995\n24.13994\n13.27902\n10.150170\n\n\nCHL\n2023-02\n13.22474\n21.43148\n11.94660\n9.090909\n\n\nAUT\n2023-02\n26.51685\n16.15970\n10.88180\n8.612440\n\n\n\n\n\n\nCon DT\n\n\nCódigoDT::datatable(inflation)\n\n\n\n\n\nCon reactable\n\n\nCódigoreactable::reactable(inflation)"
  },
  {
    "objectID": "blog/71_tablas-con-R.html#tuneando",
    "href": "blog/71_tablas-con-R.html#tuneando",
    "title": "Generando tablas con R",
    "section": "\n4 Tuneando",
    "text": "4 Tuneando\n\nCódigolibrary(gt)\ntt &lt;- gt::gt(inflation %&gt;% slice(1:10))\n\ntt %&gt;% tab_header(title = md(\"**Tasa de inflación**\"),\n                      subtitle = md(\"TOT: total; FOOD: alimentos; ENRG: energía\")) %&gt;% \n    tab_source_note(md(\"Fuente: datos de [OCDE](https://raw.githubusercontent.com/perezp44/archivos.download.2023/main/DP_LIVE_22032023113248591.csv)\")) \n\n\n\n\n\n\nTasa de inflación\n\n\nTOT: total; FOOD: alimentos; ENRG: energía\n\n\nplace\ndate\nENRG\nFOOD\nTOT\nTOT_FOODENRG\n\n\n\n\nARG\n2023-02\nNA\n102.62940\n102.50080\nNA\n\n\nTUR\n2023-02\n42.23681\n69.33482\n55.17983\n51.902860\n\n\nHUN\n2023-02\n39.45069\n45.80613\n25.40000\n16.207950\n\n\nLVA\n2023-02\n46.42958\n25.33258\n20.26292\n10.511360\n\n\nLTU\n2023-02\n29.20563\n30.18281\n18.73836\n12.170210\n\n\nEST\n2023-02\n30.27698\n25.20833\n17.54967\n12.125680\n\n\nCZE\n2023-02\n33.82126\n23.91482\n16.71949\n11.444360\n\n\nCOL\n2023-02\n18.02995\n24.13994\n13.27902\n10.150170\n\n\nCHL\n2023-02\n13.22474\n21.43148\n11.94660\n9.090909\n\n\nAUT\n2023-02\n26.51685\n16.15970\n10.88180\n8.612440\n\n\n\nFuente: datos de OCDE\n\n\n\n\n\n\nPongamos banderitas y alguna cosas más\n\nCódigo#- data munging\ninflation &lt;- inflation_orig %&gt;%\n  dplyr::filter(FREQUENCY == \"M\") %&gt;% \n  dplyr::filter(MEASURE == \"AGRWTH\") %&gt;% \n  dplyr::mutate(fecha = lubridate::ym(TIME)) %&gt;% \n  select(pais = LOCATION, fecha, inflacion = Value, tipo_inf = SUBJECT)\n\n#- incorporar region para filtrar grupos de países\nzz &lt;- countrycode::codelist %&gt;% select(iso.name.en, region, region23, wb, fips, ioc, imf, iso2c, iso3c, ecb, eurostat, continent, eu28, un, un.region.name)\n\ninflation &lt;- left_join(inflation, zz, by = join_by(pais == iso3c) ) \n\n#- solo Europa (q no sea Europa del Este) --------------------------------------\ndf &lt;- inflation %&gt;% \n  dplyr::filter(un.region.name %in% c(\"Europe\")) %&gt;% \n  dplyr::filter(!(region23 %in% c(\"Eastern Europe\"))) \n\nmy_title &lt;- \"Tasas de inflación interanual en Europa (febrero 2023)\"\nmy_subtitle &lt;- \"Países europeos y &lt;span style='color:#3569a4'&gt; España &lt;/span&gt; \"\n\n#- paso a ancho ----------------------------------------------------------------\ndf &lt;- df %&gt;% \n  select(pais, iso.name.en, fecha, inflacion, tipo_inf) %&gt;% \n  pivot_wider(names_from = tipo_inf, values_from = inflacion)\n\n#- banderas --------------------------------------------------------------------\ndf &lt;- df %&gt;% #- fips\n  mutate(iso2 = countrycode::countrycode(sourcevar = pais, origin = \"iso3c\", destination = \"iso2c\", warn = FALSE)) %&gt;% \n  mutate(iso2 = tolower(iso2)) %&gt;% \n  mutate(flag_URL = glue::glue('https://hatscripts.github.io/circle-flags/flags/{iso2}.svg')) \n  \n#- selecciono fecha ------------------------------------------------------------\nmy_fecha &lt;-  max(inflation$fecha)\nmy_fecha &lt;-  \"2023-02-01\"\n\ndf &lt;- df %&gt;% dplyr::filter(fecha == my_fecha) \n\n#- ordeno de + a - la inf. total -----------------------------------------------\ndf &lt;- df %&gt;% select(1,2, flag_URL, 3, 6, everything()) %&gt;% arrange(desc(TOT), ENRG) %&gt;% select(-iso2)\n\ndf &lt;- df %&gt;% mutate(FOOD = FOOD/max(FOOD))\n\n\nMe he quedado solo con los países de Europa\n\nCódigo#- con DT: https://rstudio.github.io/DT/\ndf_DT &lt;- df %&gt;% select(-flag_URL)\nDT::datatable(df_DT, filter = 'top', extensions = \"Scroller\")\n\n\n\n\n\n\nCódigo#- con reactable: https://glin.github.io/reactable/index.html\nlibrary(reactable)\nreactable::reactable(df_DT, pagination = FALSE, height = 850, \n                     filterable = TRUE, searchable = TRUE, highlight = TRUE, \n                     columns = list( variable = colDef(\n     # sticky = \"left\",\n      # Add a right border style to visually distinguish the sticky column\n      style = list(borderRight = \"1px solid #eee\"),\n      headerStyle = list(borderRight = \"1px solid #eee\")\n    )),\n  defaultColDef = colDef(minWidth = 50)\n)\n\n\n\n\n\n\nCódigott_6 &lt;- df %&gt;%  \n  gt(rowname_col = \"pais\") %&gt;% \n  tab_header(title = my_title, subtitle = md(my_subtitle))  %&gt;% \n  tab_source_note(md(\"Fuente: datos proveniente de la [OCDE](http://www.oecd.org/)\")) %&gt;%\n  gtExtras::gt_theme_nytimes() %&gt;%\n  gtExtras::gt_img_rows(flag_URL, height = 25) %&gt;% \n  gtExtras::gt_merge_stack(col2 = iso.name.en, col1 = pais) %&gt;% \n  tab_footnote(footnote = \"Tasa de inflación eliminando el efecto de la energía y los alimentos\", \n               location = cells_column_labels(columns = TOT_FOODENRG)) %&gt;% \n  cols_label(TOT = md(\"**Total**\"), ENRG = \"Energética\", FOOD = \"Alimentos\", TOT_FOODENRG = \"Total sin ...\" )  %&gt;% \n  cols_align(align = \"center\") %&gt;% \n  cols_align(align = \"left\", columns = fecha) %&gt;% \n  cols_width(columns = TOT ~ px(120)) %&gt;% \n  fmt_percent(columns = c(TOT, ENRG, FOOD, TOT_FOODENRG), scale_values = FALSE) %&gt;% \n  tab_style(style = cell_text(color = \"#f97d64\"),\n            locations = cells_body(columns = TOT,\n            rows = TOT &gt;= mean(TOT))) %&gt;% \n  tab_style(style = cell_text(color = \"#f97d64\"),\n            locations = cells_body(columns = FOOD,\n            rows = FOOD &gt;= mean(FOOD))) %&gt;% \n   tab_style(style = cell_text(color = \"#f97d64\"),\n            locations = cells_body(columns = ENRG,\n            rows = ENRG &gt;= mean(ENRG))) %&gt;% \n   tab_style(style = cell_text(color = \"#3569a4\"),\n            locations = cells_body(rows = pais == \"ESP\")) %&gt;% \n   data_color(columns = c(TOT_FOODENRG),\n              colors = scales::col_numeric(palette = \"Reds\", domain = NULL)) \n  \ntt_6  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTasas de inflación interanual en Europa (febrero 2023)\n    \n\nPaíses europeos y  España \n    \n\n\n      flag_URL\n      fecha\n      Total\n      Energética\n      Alimentos\n      Total sin ...1\n\n    \n\n\n\n\nLVA\nLatvia\n\n\n2023-02-01\n20.26%\n46.43%\n0.84%\n10.51%\n\n\n\nLTU\nLithuania\n\n\n2023-02-01\n18.74%\n29.21%\n1.00%\n12.17%\n\n\n\nEST\nEstonia\n\n\n2023-02-01\n17.55%\n30.28%\n0.84%\n12.13%\n\n\n\nAUT\nAustria\n\n\n2023-02-01\n10.88%\n26.52%\n0.54%\n8.61%\n\n\n\nISL\nIceland\n\n\n2023-02-01\n10.20%\n14.58%\n0.40%\n9.47%\n\n\n\nSVN\nSlovenia\n\n\n2023-02-01\n9.28%\n6.14%\n0.61%\n7.67%\n\n\n\nITA\nItaly\n\n\n2023-02-01\n9.15%\n28.20%\n0.44%\n4.79%\n\n\n\nFIN\nFinland\n\n\n2023-02-01\n8.80%\n16.83%\n0.54%\n6.60%\n\n\n\nDEU\nGermany\n\n\n2023-02-01\n8.68%\n19.98%\n0.69%\n5.86%\n\n\n\nIRL\nIreland\n\n\n2023-02-01\n8.46%\n29.30%\n0.43%\n5.56%\n\n\n\nPRT\nPortugal\n\n\n2023-02-01\n8.25%\n1.94%\n0.71%\n7.21%\n\n\n\nNLD\nNetherlands (the)\n\n\n2023-02-01\n7.96%\n−1.07%\n0.59%\nNA\n\n\n\nDNK\nDenmark\n\n\n2023-02-01\n7.60%\n13.97%\n0.49%\n5.80%\n\n\n\nBEL\nBelgium\n\n\n2023-02-01\n6.62%\n−7.93%\n0.56%\n6.90%\n\n\n\nNOR\nNorway\n\n\n2023-02-01\n6.30%\n12.44%\n0.29%\n5.60%\n\n\n\nFRA\nFrance\n\n\n2023-02-01\n6.28%\n13.95%\n0.52%\n3.57%\n\n\n\nGRC\nGreece\n\n\n2023-02-01\n6.13%\n−5.22%\n0.49%\n6.34%\n\n\n\nESP\nSpain\n\n\n2023-02-01\n6.03%\n−8.87%\n0.55%\n5.19%\n\n\n\nLUX\nLuxembourg\n\n\n2023-02-01\n4.31%\n−1.98%\n0.43%\n3.63%\n\n\n\nCHE\nSwitzerland\n\n\n2023-02-01\n3.37%\n16.65%\n0.21%\n2.03%\n\n\n\nSWE\nSweden\n\n\n2023-02-01\nNA\n11.97%\n0.69%\n10.50%\n\n\n\nFuente: datos proveniente de la OCDE\n    \n\n\n1 Tasa de inflación eliminando el efecto de la energía y los alimentos\n    \n\n\n\n\n\nAlgún día lo retomaré!!"
  },
  {
    "objectID": "blog/24_imagenes.html",
    "href": "blog/24_imagenes.html",
    "title": "Imágenes",
    "section": "",
    "text": "Las figuras en documentos Rmarkdown se podían insertar con la sintaxis de Markdown; es decir con ![](&lt;ruta-a-la-imagen&gt;), aunque yo prefería hacerlo con knitr::include_graphics(). Era algo así, veamos si también funciona en Quarto:\n\nCódigo```{r}\n#| fig.show: \"hold\"\n#| out.width: \"45%\"\n#| fig.align: \"default\"\n# graficos side to side en Rmarkdown\n# https://community.rstudio.com/t/how-to-stack-two-images-horizontally-in-r-markdown/18941/12\n\n\nknitr::include_graphics(here::here(\"blog\", \"imagenes\", \"post_24_img_01.jpg\"))\n```"
  },
  {
    "objectID": "blog/24_imagenes.html#figuras-en-rmd",
    "href": "blog/24_imagenes.html#figuras-en-rmd",
    "title": "Imágenes",
    "section": "",
    "text": "Las figuras en documentos Rmarkdown se podían insertar con la sintaxis de Markdown; es decir con ![](&lt;ruta-a-la-imagen&gt;), aunque yo prefería hacerlo con knitr::include_graphics(). Era algo así, veamos si también funciona en Quarto:\n\nCódigo```{r}\n#| fig.show: \"hold\"\n#| out.width: \"45%\"\n#| fig.align: \"default\"\n# graficos side to side en Rmarkdown\n# https://community.rstudio.com/t/how-to-stack-two-images-horizontally-in-r-markdown/18941/12\n\n\nknitr::include_graphics(here::here(\"blog\", \"imagenes\", \"post_24_img_01.jpg\"))\n```"
  },
  {
    "objectID": "blog/24_imagenes.html#figuras-en-quarto",
    "href": "blog/24_imagenes.html#figuras-en-quarto",
    "title": "Imágenes",
    "section": "\n2 Figuras en Quarto",
    "text": "2 Figuras en Quarto\nDocumentación aquí.\nLas imágenes (o figuras) se pueden insertar de múltiples maneras:\n\nLa sintaxis de Pandoc:\n\n\n\nPara hacer esto …\nHas de escribir\n\n\n\n\n\n\n\n\nGráfico 1: Una imagén centrada (75%)\n\n\n\n\n![Una imagén centrada (75%)](./imagenes/post_24_img_01.jpg){#fig-01 fig-align=\"left\" width=\"75%\"}\n\n\n\nSubfiguras\nDocumentación aquí.\n\n\nPara hacer esto …\nHas de escribir\n\n\n\n\n\n\n\n\n\n\n\nGráfico 2: Imágen 1\n\n\n\n\n\n\n\n\n\nGráfico 3: Imágen 2\n\n\n\n\n\n\nDos imágenes alineadas\n\n\n\n\n\n::: {layout-ncol=2}\n\n![Imágen 1](./imagenes/post_24_img_01.jpg){#fig-2.1}\n\n![Imágen 2](./imagenes/post_24_img_01.jpg){#fig-2.2}\n\n2 imágenes alineadas\n:::\n\n\n\nPanel de imágenes\nDocumentación aquí.\n\n\nPara hacer esto …\nHas de escribir\n\n\n\n\n\n\n\n\n(A)\n\n\n\n\n\n(B)\n\n\n\n\n\n\n\n(C)\n\n\n\n\n\n(D)\n\n\n\n\n\n\n::: {layout-nrow=2}\n![(A)](./imagenes/post_24_img_01.jpg)\n\n![(B)](./imagenes/post_24_img_01.jpg)\n\n![(C)](./imagenes/post_24_img_01.jpg)\n\n![(D)](./imagenes/post_24_img_01.jpg)\n:::\n\n\n\nCustom layouts\nDocumentación aquí.\n\n\nPara hacer esto …\nHas de escribir\n\n\n\n\n\n\n\n\n(A)\n\n\n\n \n\n\n\n\n(B)\n\n\n\n\n\n\n\n(C)\n\n\n\n\n\n\n::: {layout=\"[[40,-20,40], [100]]\"}\n![(A)](./imagenes/post_24_img_01.jpg)\n\n![(B)](./imagenes/post_24_img_01.jpg)\n\n![(C)](./imagenes/post_24_img_01.jpg)\n:::"
  },
  {
    "objectID": "blog/24_imagenes.html#tamaño-de-las-imágenes",
    "href": "blog/24_imagenes.html#tamaño-de-las-imágenes",
    "title": "Imágenes",
    "section": "\n3 Tamaño de las imágenes",
    "text": "3 Tamaño de las imágenes\nEl tamaño de las imágenes es problemático (al menos para mi).\nAquí puedes ver la documentación oficial de Quarto sobre el tamaño por defecto de las imágenes y como cambiarlo. Aquí más documentación sobre imágenes.\nAquí puedes ver los consejos sobre el tamaño de las imágenes de Hadley en R4DS (2nd ed.)"
  },
  {
    "objectID": "blog/24_imagenes.html#truquillos",
    "href": "blog/24_imagenes.html#truquillos",
    "title": "Imágenes",
    "section": "\n4 Truquillos",
    "text": "4 Truquillos\n\nPara centrar el caption de las imágenes, puedes usar este trozo de css. Mira aquí\n\n\n.caption{\n    text-align: center;\n    border: thin silver solid;  \n    caption-side: top;  /* no chuta */\n }\n\nPuede que un truco fácil para fijar el tamaño de imágenes, o lo que sea, sea combinarlo con los layout’s:\n\n:::{.column-page} \nor .column-screen or ....\n\n![](imagenes/post_21_img_01.png){fig-align=\"center\", width=\"90%\"}\n\n:::"
  },
  {
    "objectID": "blog/24_imagenes.html#más-cosas",
    "href": "blog/24_imagenes.html#más-cosas",
    "title": "Imágenes",
    "section": "\n5 Más cosas",
    "text": "5 Más cosas\n\nAquí una discusión sobre una “Linked figure with linked caption in quarto”.\nggview un paquete de R para ver que tamaño de gráfico necesitas, sin salir de Rstudio!!. Aquí el repo.\n\n\nCódigoggview::ggview(width = 10, height = 3)"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog del curso “Escribiendo con R y Quarto”",
    "section": "",
    "text": "¿Qué son R, RStudio y Quarto?\n\n\n\nreproducibilidad\n\n\n\nEn el curso usaremos 3 programas: R, RStudio y Quarto, así que la primera tarea es saber qué son y para qué sirven: conviene saber diferenciar entre ellos.\n\n\n\n\n\n2 ene 2023\n\n\nPedro J. Pérez\n\n7 minutos\n\n\n\n\n\n\n\n\n\n\n\nReferencias bibliográficas\n\n\n\nquarto\n\nbibliografía\n\n\n\n¿Cómo incluir referencias bibliográficas en documentos .qmd? Una buena opción es a través de ficheros .bib creados en Zotero.\n\n\n\n\n\n20 ene 2023\n\n\nPedro J. Pérez\n\n10 minutos\n\n\n\n\n\n\n\n\n\n\n\nLayout’s\n\n\n\nquarto\n\nlayout\n\n\n\nViendo las posibilidades de Layout que tenemos en Quarto\n\n\n\n\n\n21 ene 2023\n\n\nPedro J. Pérez\n\n2 minutos\n\n\n\n\n\n\n\n\n\n\n\nUsando shortcodes\n\n\n\nquarto\n\nshortcodes\n\n\n\nCómo usar shortcodes en Quarto para, entre otras cosas, poder incluir el mismo contenido en varios documentos.\n\n\n\n\n\n22 ene 2023\n\n\nPedro J. Pérez\n\n6 minutos\n\n\n\n\n\n\n\n\n\n\n\nExtensiones\n\n\n\nQuarto\n\nextensiones\n\n\n\nIntentando entender qué son y cómo usar las extensiones de Quarto\n\n\n\n\n\n23 ene 2023\n\n\nPedro J. Pérez\n\n4 minutos\n\n\n\n\n\n\n\n\n\n\n\nImágenes\n\n\n\nQuarto\n\nimágenes\n\n\n\nRepasando algunas opciones de Quarto para insertar imágenes.\n\n\n\n\n\n24 ene 2023\n\n\nPedro J. Pérez\n\n2 minutos\n\n\n\n\n\n\n\n\n\n\n\nTuneando con CSS\n\n\n\nQuarto\n\nCSS\n\n\n\nCambiando el formato con CSS\n\n\n\n\n\n25 ene 2023\n\n\nPedro J. Pérez\n\n5 minutos\n\n\n\n\n\n\n\n\n\n\n\nTuneando con CSS (cambios bizarros!!)\n\n\n\nQuarto\n\nCSS\n\n\n\nEl contenido de este post es el mismo que el del anterior, PERO , pero ahora haciendo cambios bizarros!! con CSS.\n\n\n\n\n\n26 ene 2023\n\n\nPedro J. Pérez\n\n5 minutos\n\n\n\n\n\n\n\n\n\n\n\nObservable JS\n\n\n\nQuarto\n\nObservable\n\n\n\nIntentando entender qué es y cómo usar Observable JS en R.\n\n\n\n\n\n27 ene 2023\n\n\nPedro J. Pérez\n\n4 minutos\n\n\n\n\n\n\n\n\n\n\n\nUsing R data with phyton\n\n\n\nQuarto\n\nPython\n\n\n\nViendo cómo usar datos de R en chunks de Py con Quarto.\n\n\n\n\n\n28 ene 2023\n\n\nPedro J. Pérez\n\n1 minutos\n\n\n\n\n\n\n\n\n\n\n\nTuneado de un post con opciones de YAML\n\n\n\nQuarto\n\ntuneado yaml\n\n\n\nViendo cómo modificar la apariencia de un post con opciones de YAML.\n\n\n\n\n\n29 ene 2023\n\n\nPedro J. Pérez\n\n1 minutos\n\n\n\n\n\n\n\n\n\n\n\nInformes parametrizados\n\n\n\nreproducibilidad\n\nInformes parametrizados\n\n\n\nAutomatizando la creación de informes: generando grupos de informes utilizando conjuntos de parámetros.\n\n\n\n\n\n30 ene 2023\n\n\nPedro J. Pérez\n\n5 minutos\n\n\n\n\n\n\n\n\n\n\n\nCross references\n\n\n\ncross-references\n\n\n\n¿Cómo insertar referencias cruzadas en documentos Quarto?\n\n\n\n\n\n31 ene 2023\n\n\nPedro J. Pérez\n\n5 minutos\n\n\n\n\n\n\n\n\n\n\n\nMi Segundo post con Quarto\n\n\n\nTaller\n\nsoluciones practica nº 5\n\n\n\nSoluciones a la Práctica 5.1 del curso\n\n\n\n\n\n1 feb 2023\n\n\nPedro J. Pérez, Nosotros\n\n1 minutos\n\n\n\n\n\n\n\n\n\n\n\nGenerando botoncitos de descarga en mi web\n\n\n\nTuneando la web\n\n\n\nInsertar un link de descarga en nuestra web es muy fácil pero quedará más chulo si generamos unos botoncitos de descarga.\n\n\n\n\n\n2 feb 2023\n\n\nPedro J. Pérez\n\n5 minutos\n\n\n\n\n\n\n\n\n\n\n\nGenerando tablas con R\n\n\n\ntablas\n\n\n\nSe pueden hacer tablas muy chulas con R. Por ejemplo mira aquí\n\n\n\n\n\n3 feb 2023\n\n\nPedro J. Pérez\n\n5 minutos\n\n\n\n\n\n\n\n\n\n\n\nPublicando nuestra web en la UV\n\n\n\nQuarto\n\nPublicando la web\n\n\n\nSe describe el proceso para publicar nuestra web/blog en el espacio web que tenemos disponible en los servidores de la Universitat de València.\n\n\n\n\n\n4 feb 2023\n\n\nPedro J. Pérez\n\n3 minutos\n\n\n\n\n\n\n\n\n\n\n\nGenerando tablas de modelos y contrastes\n\n\n\ntablas estadísticas\n\n\n\nPost en proceso de elaboración\n\n\n\n\n\n5 feb 2023\n\n\nPedro J. Pérez\n\n1 minutos\n\n\n\n\n\n\n\n\n\n\n\nIconos en Quarto\n\n\n\niconos\n\nemojis\n\n\n\nUsando emojis e iconos en Quarto\n\n\n\n\n\n12 feb 2024\n\n\nPedro J. Pérez\n\n7 minutos\n\n\n\n\n\n\n\n\n\n\n\nWebr\n\n\n\nWebr\n\n\n\nEntender un poco qué es y como funciona Webr\n\n\n\n\n\n12 feb 2024\n\n\nPedro J. Pérez\n\n4 minutos\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "materiales.html",
    "href": "materiales.html",
    "title": "Materiales para el curso",
    "section": "",
    "text": "Importante!!\n\n\n\n\nDurante el curso interactuaremos con R y Quarto a través de RStudio. Se recomienda tener instaladas versiones recientes de los 3 programas. En Info tienes los links de instalación."
  },
  {
    "objectID": "materiales.html#slides",
    "href": "materiales.html#slides",
    "title": "Materiales para el curso",
    "section": "Slides",
    "text": "Slides\nDurante el curso utilizaremos, en clase, las siguientes slides:\n\nSlides 01: Presentación\nSlides 02: Primeros pasos\nSlides 03: Aprendiendo a escribir en QMD\nSlides 04: Revealjs slides\nSlides 05: Webs/blogs con Quarto\nSlides 06: Más cosas con Quarto\nSlides 07: Aún más cosas con Quarto\n\n\nSi quieres, puedes descargar todas las slides en formato html aquí."
  },
  {
    "objectID": "materiales.html#qprojects-a-descargar",
    "href": "materiales.html#qprojects-a-descargar",
    "title": "Materiales para el curso",
    "section": "Qproject’s (a descargar)",
    "text": "Qproject’s (a descargar)\nEn clase también usaremos dos Qproject’s:\n\nEl primer Qproject, llamado Qproj_01_eurovision puedes descargarlo aquí.\n(Al pinchar, se te descargará una archivo comprimido llamado Qproj_01_eurovision.zip. Descomprime el archivo y así tendrás en tu ordenador el Qproject con los materiales (scripts, ejemplos, datos, …) que utilizaremos en clase.)\nEl segundo Qproject, llamado Qproj_02_param-rep puedes descargarlo, también comprimido, aquí. Lo usaremos cuando hagamos “informes parametrizados”."
  },
  {
    "objectID": "materiales.html#blog",
    "href": "materiales.html#blog",
    "title": "Materiales para el curso",
    "section": "Blog",
    "text": "Blog\nEn los artículos del Blog se desarrollan algunos de los tópicos que iremos viendo durante el curso.\nLa sección Truquillos es en realidad otro blog con una recopilación de pequeños consejos y trucos que te pueden ser útiles en tu día a día con Quarto."
  },
  {
    "objectID": "materiales.html#logística-enlaces",
    "href": "materiales.html#logística-enlaces",
    "title": "Materiales para el curso",
    "section": "Logística (enlaces)",
    "text": "Logística (enlaces)\nSon simplemente enlaces para mi, para tenerlos a mano por si los necesito durante las clases:\n\nEtherpad\nPosit Cloud Project \nProgramación y manejo de datos con R \nCurso de introduccióna R, SFPIE, 2024 \nAula Virtual de la asignatura: Grupo PAS y Grupo PDI"
  },
  {
    "objectID": "materiales.html#bibliografíarecursos",
    "href": "materiales.html#bibliografíarecursos",
    "title": "Materiales para el curso",
    "section": "Bibliografía/Recursos",
    "text": "Bibliografía/Recursos\nDesde que Quarto se hizo publico con We don’t talk about Quarto ha sido un no parar de workshops, posts, etc … En esta página tienes una selección de recursos sobre Quarto.\nLa principal referencia es la web de Quarto: absolutamente fantástica!!! En ella hay, entre otras secciones, una Guide, una Reference y una Gallery.\nQuarto continúa estando en constante evolución. Para estar al día sobre las novedades leyendo el blog. Por ejemplo, en quarto 1.4, quarto 1.5 y quarto 1.6 puedes ver las novedades de esas versiones de Quarto.\nA destacar también el listado de recursos Awesome Quarto mantenida por Mickaël Canouil.\n\nPara dudas, consejos, trucos:\n\nQuarto CLI-dev repo: Issues and Discussions.\nStackoverflow: preguntas sobre Quarto aquí\nTabla con “useful Quarto tips” de Sharon Machlis, aquí\nQuarto Tips Chatbot Search. Saron Machlis lo presentaba en este toot\n\n\nEntre los materiales sobre Quarto, destacar los siguientes:\n\nQuarto tip a day: Un blog de Mine Çetinkaya-Rundel con consejos y tips sobre Quarto.\nGet Started with Quarto: un workshop de Thomas Mock. El video, y otro video de 3h.\nBeautiful Reports and Presentations with Quarto: un workshop de Thomas Mock. El video y el repo.\nIntroducción a RMarkdown, creando reportes con R y Python en RStudio: workshop de Renzo Cáceres para LatinR 2022.\nMaking shareable documents with Quarto: una web de Openscapes.\nQuarto/RMarkdown - What’s Different?: unas slides de Ted Laderas.\nRstudio::conf(2022) Playlist: la presentación en sociedad de Quarto con varias charlas sobre Quarto, Hello Quarto: Share, Collaborate, Teach, Reimagine, Websites & Books & Blogs, oh my! Creating Rich Content with Quarto, Quarto for the Curious entre otras.\nRstudio::conf(2022) Workshops: por ejemplo, Get Started with Quarto o Rmarkdown to Quarto.\nReproducible authoring with Quarto: un vídeo de Mine Çetinkaya-Rundel donde se hace evidente las ventajas de Quarto y la utilidad del editor visual de RStudio. Sus slides aquí.\nBuilding a blog with Quarto: un workshop de Isabella Velásquez acerca de cómo construir un blog con Quarto. El repo de los ejercicios, video y RStudioCloud project.\nWebsites & Books & Blogs, oh my! Creating Rich Content with Quarto: ponencia de Devin Pastoor en el marco de RStudio::conf(2022).\n\n\n\nOtros recursos\n\nUna fantástica guía sobre Markdown\n\n\n\nMás recursos\n\nAquí y aquí dos posts sobre tunear un Quarto blog"
  },
  {
    "objectID": "materiales.html#footnotes",
    "href": "materiales.html#footnotes",
    "title": "Materiales para el curso",
    "section": "Notas",
    "text": "Notas\n\n\nDe momento podemos pensar que un Qproject no es más que una carpeta con materiales. Ya os explicaré un poco más en clase y os diré cuando descargarlos↩︎"
  },
  {
    "objectID": "blog_02.html",
    "href": "blog_02.html",
    "title": "Blog para recopilar trucos relacionados con Quarto",
    "section": "",
    "text": "Título\n\n\n\nDescripción\n\n\n\n\n\n\n\n\nTrucos: Quarto\n\n\nRecopilando trucos sobre Quarto. \n\n\n\n\n\n\nTrucos: Reveal.js\n\n\nRecopilando trucos sobre Reveal.js slides. \n\n\n\n\n\n\nTrucos: Webs (blogs y books) con Quarto\n\n\nRecopilando trucos sobre webs, blogs y books hechos con Quarto \n\n\n\n\n\n\nTrucos: CSS y SCSS\n\n\nRecopilando trucos/ejemplos de CSS y SASS \n\n\n\n\n\n\nTrucos: html\n\n\nRecopilando trucos sobre html. \n\n\n\n\n\n\nTrucos: workflow\n\n\nRecopilando trucos sobre workflow en Quarto. \n\n\n\n\n\n\nTrucos: Rmarkdown\n\n\nRecopilando trucos sobre Rmarkdown y knitr. \n\n\n\n\n\n\nEXTRAS de Quarto\n\n\nCosas EXTRA de Quarto y también trucos más rarunos (ó EXTRA) sobre Quarto. \n\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "slides/07_aun_mas_cosas.html#con-quarto-se-pueden-hacer-muuuuchas-más-cosas-aún",
    "href": "slides/07_aun_mas_cosas.html#con-quarto-se-pueden-hacer-muuuuchas-más-cosas-aún",
    "title": "Aún más cosas con Quarto",
    "section": "Con Quarto se pueden hacer muu🙀uuchas más cosas aún!!!",
    "text": "Con Quarto se pueden hacer muu🙀uuchas más cosas aún!!!\n\n\nVeamos algunas de ellas"
  },
  {
    "objectID": "slides/07_aun_mas_cosas.html#con-quarto-aún-se-pueden-hacer-muuuuchas-más-cosas",
    "href": "slides/07_aun_mas_cosas.html#con-quarto-aún-se-pueden-hacer-muuuuchas-más-cosas",
    "title": "Aún más cosas con Quarto",
    "section": "Con Quarto AÚN se pueden hacer muu🙀uuchas más cosas!!",
    "text": "Con Quarto AÚN se pueden hacer muu🙀uuchas más cosas!!\n\n\nVeamos algunas de ellas"
  },
  {
    "objectID": "slides/05_primer_web.html#estructura-del-taller",
    "href": "slides/05_primer_web.html#estructura-del-taller",
    "title": "Webs/blogs con Quarto",
    "section": "Estructura del … 😉 “taller”",
    "text": "Estructura del … 😉 “taller”\n\n\n\nPrimeras ideas, visionado de blogs\n\n\n\n\nCreación de un blog básico: mi blog en 3 minutos\nTuneado básico del blog.\nConvirtiendo el blog en una web personal\n\n\n\n\n\nWorkflow: creando posts\nEscribiendo un post con Quarto\n\n\n\n\n\nTuneado: mejorando la web\n\n\n\n\nGestión y publicación de la web/blog"
  },
  {
    "objectID": "slides/05_primer_web.html#objetivos-del-taller",
    "href": "slides/05_primer_web.html#objetivos-del-taller",
    "title": "Webs/blogs con Quarto",
    "section": "Objetivo(s) del taller",
    "text": "Objetivo(s) del taller\n\n\nAprender a hacer websites/blogs con Quarto\n\n\n\nAprender sobre Quarto mientras vamos creando una web/blog\n\n\n\nQue salgáis todos con el bosquejo y la intención de hacer una web/blog!!\n\n\n\n… y, si puede ser, pasar un buen rato 🙂 mientras aprendemos"
  },
  {
    "objectID": "slides/05_primer_web.html#beneficios-de-tener-un-blog",
    "href": "slides/05_primer_web.html#beneficios-de-tener-un-blog",
    "title": "Webs/blogs con Quarto",
    "section": "Beneficios de tener un blog",
    "text": "Beneficios de tener un blog\n\n\nSe aprende mucho!!\n\n\n\nEs fácil (pocas barreras de entrada si ya usas Rmarkdown)\nEs divertido\n\n\n\n\nRegistrar análisis que haces que de otra forma olvidarías\nPortafolio y contactos\n\n\n\n\nProductive procrastination (!!)\n\n\n\n(Discursos más elaborados aquí o aquí )\n\n\n\nImportante:\n\n\nEl blog no tiene que ser perfecto. Mejor empezar con un blog sencillo\n\n\n\n\nLos posts tampoco tienen porqué estar perfectos … y Jenny Bryan está de acuerdo conmigo"
  },
  {
    "objectID": "slides/05_primer_web.html#estructura-de-una-web",
    "href": "slides/05_primer_web.html#estructura-de-una-web",
    "title": "Webs/blogs con Quarto",
    "section": "Estructura de una web",
    "text": "Estructura de una web\n\n\n\n\nHEADER/Navbar\n\nTITLE-block banner\n\nARTICLE\n\nFooter"
  },
  {
    "objectID": "slides/05_primer_web.html#ejemplos-de-blogs-hechos-con-quarto",
    "href": "slides/05_primer_web.html#ejemplos-de-blogs-hechos-con-quarto",
    "title": "Webs/blogs con Quarto",
    "section": "Ejemplos de blogs (hechos con Quarto)",
    "text": "Ejemplos de blogs (hechos con Quarto)\n\nMike Mahoney (el repo aqui)\nIsabella Velásquez (el repo aqui)\nDanielle Navarro (el repo aqui)\nJeff y Marc Dotson (el repo aqui)\nLayton R blog (el repo aqui)\nR Lille (el repo aqui)\nDrew Dimmery\nPA blog (el repo aqui)\nMario Angst\nMatt Worthington (el repo aqui)\nIlya Kashnitsky (el repo aquí)\nRebecca Carter (el repo aquí)\n\n\nMás opciones:\n\nLa Gallery de Quarto"
  },
  {
    "objectID": "slides/05_primer_web.html#ejemplos-de-webs-hechas-con-quarto",
    "href": "slides/05_primer_web.html#ejemplos-de-webs-hechas-con-quarto",
    "title": "Webs/blogs con Quarto",
    "section": "Ejemplos de webs (hechas con Quarto)",
    "text": "Ejemplos de webs (hechas con Quarto)\n\nMaking shareable documents with Quarto y el repo\nData in life y el repo\nAndrew Heiss y el repo\nProgram Evaluation for Public Service y el repo\nComparative Public Administration y el repo\nQuantum Jitter y el repo\nElla Kaye y el repo\nIntroduction to Regression and Data Science y el repo\nSTA 199: Intro to Data Science y el repo\nESPM 157: Data Science for Global Change Ecology y el repo\nMAT555E-Statistical Data Analysis for Comp. Sciences y el repo\nAntony Barja y el repo. Además tiene cursos sobre GIS\nThe tidy trekker y el repo\nReal World Data Science y el repo\nTidy Tales y el repo\n\n\n\nUnas plantillas para webs personales y académicas (cursos y workshops)\nOtras plantillas para webs académicas\nMás plantillas, pero también para books, etc …Muy chulas\nOtras plantillas para webs, pero también para books, etc … (muy chulas)"
  },
  {
    "objectID": "slides/05_primer_web.html#contenido-del-qproject",
    "href": "slides/05_primer_web.html#contenido-del-qproject",
    "title": "Webs/blogs con Quarto",
    "section": "Contenido del Qproject",
    "text": "Contenido del Qproject\nLos archivos importantes ahora son 3:\n\n\n\n\n\n_quarto.yml: especifica la estructura (y apariencia) de la web\n\n\n\nindex.qmd : generará (y dará formato) a la “landing page” o Home. Esta página será un listado de páginas (un blog)\n\n\n\nabout.qmd : una de la páginas del blog"
  },
  {
    "objectID": "slides/05_primer_web.html#contenido-del-qproject-tras-procesar-el-blog",
    "href": "slides/05_primer_web.html#contenido-del-qproject-tras-procesar-el-blog",
    "title": "Webs/blogs con Quarto",
    "section": "Contenido del Qproject (tras procesar el blog)",
    "text": "Contenido del Qproject (tras procesar el blog)\n\n\n\n\n\n\n\n\n\n\n\n\nSe han creado 2 subcarpetas: _site y _freeze\n_site es la carpeta que contiene el blog."
  },
  {
    "objectID": "slides/05_primer_web.html#ver-el-blog-en-local",
    "href": "slides/05_primer_web.html#ver-el-blog-en-local",
    "title": "Webs/blogs con Quarto",
    "section": "Ver el blog en local",
    "text": "Ver el blog en local\n\n_site es la carpeta que contiene el blog. Veamos su contenido\nLa página principal (o Home) de nuestro blog es el archivo index.html.\nEl archivo index.html ha sido generado por el fichero index.qmd.\n\n\n\n\nTarea 1.3: Ver el blog\n\n\n\nEnseguida publicaremos el blog en Quartopub, pero antes vamos a verlo en local.\nPara ello solo tienes que pinchar en el archivo ./blog_prueba_00/_site/index.html\nEse fichero es el que contiene la “Landing Page” o “Home” de nuestro blog.\nComo ves el blog es muy sencillo, solo tiene 2 páginas:\n\nla Home Page (que consiste en un listado de posts)\nla página About"
  },
  {
    "objectID": "slides/05_primer_web.html#contenido-de-index.qmd",
    "href": "slides/05_primer_web.html#contenido-de-index.qmd",
    "title": "Webs/blogs con Quarto",
    "section": "Contenido de index.qmd",
    "text": "Contenido de index.qmd\n\nEl archivo index.qmd genera index.html, la página principal (o Home) de nuestro blog\n\n\n\n\n\nExtensiones: ver el contenido del archivo index.qmd\n\n\n\nEl archivo index.qmd genera a index.html:\n\n\n\n\n\n\n\n\n\n\n\n\n\nComo vemos, el archivo index.qmd no tiene contenido, sólo contiene un yaml o encabezamiento\nEse encabezamiento genera una lista (listing:) con los contenidos (con los ficheros .qmd) que haya en la carpeta posts.\nSí, has imaginado bien, en la carpeta posts es donde estarán los ficheros .qmd que generarán los posts\nEl resto del yaml son opciones para nuestro blog. Por ejemplo, sort: \"date desc\" ordenará el listado de post de más reciente a más antiguo.\nLo iremos viendo"
  },
  {
    "objectID": "slides/05_primer_web.html#alojando-el-blog",
    "href": "slides/05_primer_web.html#alojando-el-blog",
    "title": "Webs/blogs con Quarto",
    "section": "Alojando el blog",
    "text": "Alojando el blog\n\n\n\nTarea 1.4: Alojar el blog en Quarto Pub\n\n\nPara publicar nuestro blog en Quartopub sólo hay que:\n\nteclear en la Terminal de RStudio (panel inferior-izquierda) lo siguiente:\n\nquarto publish quarto-pub\n\nTras ejecutar lo anterior, se te pedirá que autorices en la Terminal.\nDespués se abrirá el navegador, tendrás que logearte en Quarto Pub y volverás a autorizar. Además te preguntarán el nombre del blog.\n\n\n\n\n\nPuedes ver aquí, como quedaría el blog una vez alojado en Internet.\n\n\n\n\n\nExtensiones: el fichero _publish.yml\n\n\nSi te fijas, tras haberse publicado el blog en “Quarto Pub”, se habrá creado un nuevo fichero en nuestro Qproject: es el fichero _publish.yml. En él solamente están los metadatos necesarios para publicar y actualizar nuestro blog."
  },
  {
    "objectID": "slides/05_primer_web.html#archivo-_quarto.yml",
    "href": "slides/05_primer_web.html#archivo-_quarto.yml",
    "title": "Webs/blogs con Quarto",
    "section": "Archivo _quarto.yml",
    "text": "Archivo _quarto.yml\n\n\n\n\n\n\nContenido original de _quarto.yml\n\n\n\n\n\n\n\nAsí dejaremos el fichero _quarto.yml"
  },
  {
    "objectID": "slides/05_primer_web.html#section",
    "href": "slides/05_primer_web.html#section",
    "title": "Webs/blogs con Quarto",
    "section": "",
    "text": "Tarea 2.1: Modificar el contenido de _quarto.yml\n\n\n\nSustituye el contenido original del fichero _quarto.yml por el contenido del siguiente chunk.\nPon un título que te guste a tu blog (línea 5 title: \"titulo-de-mi-blog\")\nPon tu usuario de Github y cuenta de Twitter (lineas 12 y 14: href:)\nPon tu email (línea 16: href:)\n\nproject:\n  type: website\n\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  navbar:\n    logo: \"profile.jpg\"\n    right:\n      - text: \"About me\"\n        href: about.qmd\n      - icon: github\n        href: https://github.com/&lt;tu-usuario-github&gt;\n      - icon: twitter\n        href: https://twitter.com/&lt;tu-usuario-twitter&gt;\n      - icon: envelope\n        url: \"mailto:&lt;tu-mail@uv.es&gt;\"\n    left: \n      - text: \"Docencia\"\n        href: docencia.qmd\n \nformat:\n  html:\n    theme: flatly  \n    css: styles.css\n    toc: true\n    highlight-style: a11y\n\n\n\nAdemás:\n\nlineas 17-19: añadimos la página/pestaña “Docencia” a la izquierda de la navbar, pero estamos referenciando una archivo que aún no existe, el archivo docencia.qmd\n\nlineas 21-26: modificamos el theme, ponemos TOC a los documentos, …, CSS,"
  },
  {
    "objectID": "slides/05_primer_web.html#archivo-index.qmd",
    "href": "slides/05_primer_web.html#archivo-index.qmd",
    "title": "Webs/blogs con Quarto",
    "section": "Archivo index.qmd",
    "text": "Archivo index.qmd\n\n\n\n\n\n\nContenido original de index.qmd\n\n\n\n\n\n\n\nAsí dejaremos el fichero index.qmd\n\n\n\n\n\n\nDe momento, solo vamos a hacer cambios en la segunda linea: cambiaremos el título.\nFíjate que es el título del listado de posts (del blog), no de la página web.\nFijaros que index.qmd es un archivo especial: “sólo tiene yaml”. Es el que genera el listado de posts: es una “listing page”"
  },
  {
    "objectID": "slides/05_primer_web.html#archivo-about.qmd",
    "href": "slides/05_primer_web.html#archivo-about.qmd",
    "title": "Webs/blogs con Quarto",
    "section": "Archivo about.qmd",
    "text": "Archivo about.qmd\n\n\n\n\n\n\nContenido original de about.qmd\n\n\n\n\n\n\n\nAsí dejaremos el fichero about.qmd\n\n\n\n\n\n\nSi en el yaml se activa la opción about: (linea 4), entonces puedes usar unas plantillas que Quarto tiene disponibles para crear About’s pages.\nComo puedes ver aquí hay 5 plantillas: jolla, trestles, solana, marquee y broadside.\nAquí tienes la documentación oficial sobre estas plantillas."
  },
  {
    "objectID": "slides/05_primer_web.html#archivo-styles.css",
    "href": "slides/05_primer_web.html#archivo-styles.css",
    "title": "Webs/blogs con Quarto",
    "section": "Archivo styles.css",
    "text": "Archivo styles.css\n\nPuedes cambiar la apariencia estética del blog usando los themes predefinidos en Quarto o puedes usar el archivo styles.css1\n\n\n\n\nTarea 2.7: Modificar styles.css\n\n\n\nSimplemente sustituye el contenido original del fichero styles.css por el contenido del siguiente chunk:\n\n/* css styles */\n\n\n/* justificar el texto */ \np, ul, ol {\n  text-align: justify; }       \n\n\n\n\nVeremos en el tutorial nº 6 que también podremos usar archivos .scss"
  },
  {
    "objectID": "slides/05_primer_web.html#práctica-tutorial-nº-2",
    "href": "slides/05_primer_web.html#práctica-tutorial-nº-2",
    "title": "Webs/blogs con Quarto",
    "section": "Práctica (tutorial nº 2)",
    "text": "Práctica (tutorial nº 2)\nEn esta sección dedicaremos un tiempo a la práctica libre para que adaptes el blog a tus necesidades y gustos. Por ejemplo puedes probar:\n\n\nAñadir una nueva página a la web (_quarto.yml). Os doy una posibilidad en la siguiente slide\n\n\n\nModificar la apariencia del blog (realmente del listado de posts) jugando con las opciones que nos proporciona Quarto (index.qmd). Gracias YAML inteligence!!\n\n\n\nModificar la apariencia de la página About (about.qmd)"
  },
  {
    "objectID": "slides/05_primer_web.html#donde-están-los-posts-del-blog",
    "href": "slides/05_primer_web.html#donde-están-los-posts-del-blog",
    "title": "Webs/blogs con Quarto",
    "section": "¿Donde están los posts del blog?",
    "text": "¿Donde están los posts del blog?\n\nLos ficheros .qmd que generan los posts están en la carpeta posts (de nuestro Qproject que genera el blog).\nCada post está en una carpeta diferente1:\n\n\n\n\n\n\n\n\n\n\n\n\n\nVeamos (en la siguiente slide) el contenido de ./posts/welcome/\n\nNo es necesario que los posts estén cada uno en una carpeta, pero puede ser una buena práctica."
  },
  {
    "objectID": "slides/05_primer_web.html#contenido-de-cada-subcarpeta-de-.posts",
    "href": "slides/05_primer_web.html#contenido-de-cada-subcarpeta-de-.posts",
    "title": "Webs/blogs con Quarto",
    "section": "Contenido de cada subcarpeta de ./posts/",
    "text": "Contenido de cada subcarpeta de ./posts/\n\n\nPor ejemplo de ./posts/welcome/\n\n\n\n\n\n\n\nContenido de la carpeta welcome que genera el post titulado “Welcome to my blog”\n\n\n\n\n\n\n\nContenido del archivo index.qmd"
  },
  {
    "objectID": "slides/05_primer_web.html#section-1",
    "href": "slides/05_primer_web.html#section-1",
    "title": "Webs/blogs con Quarto",
    "section": "",
    "text": "Advertencia\n\n\n\nVoy a suponer que los asistentes al taller, y posibles lectores de estos tutoriales, conocen Rmarkdown\nEl paso de .Rmd a .qmd es sencillo.\nEn cualquier caso, aquí tienes unas FAQ’s para usuarios de .Rmd que se preguntan si pasarse a Quarto, y aquí unas slides sobre las diferencias entre .qmd y .Rmd.\nAquí y aquí slides sobre cómo convertir ficheros .Rmd a .qmd\nAquellos que no sepan qué es Rmarkdown pueden empezar por aquí o aquí.\n\n\n\n\n\n\n\n\nEn realidad la advertencia no aplica a los asistentes al “curso de intro a Quarto”\n\n\n\nLógicamente, a los asistentes al curso no os hace falta conocer Rmarkdown, porque ya estáis aprendiendo Quarto, la segunda generación de .Rmd\nYa vimos con las Slides 03: Aprendiendo a escribir en QMD cómo escribir con .qmd"
  },
  {
    "objectID": "slides/05_primer_web.html#ficheros-.qmd",
    "href": "slides/05_primer_web.html#ficheros-.qmd",
    "title": "Webs/blogs con Quarto",
    "section": "Ficheros .qmd",
    "text": "Ficheros .qmd\n\nLos ficheros .qmd tienen 3 partes: YAML, texto y chunks de código.\n\n\n\n\n\n\n\n\n\n\n\n\n\nVeámoslas una a una"
  },
  {
    "objectID": "slides/05_primer_web.html#yaml-ideas-importantes",
    "href": "slides/05_primer_web.html#yaml-ideas-importantes",
    "title": "Webs/blogs con Quarto",
    "section": "YAML: ideas importantes",
    "text": "YAML: ideas importantes\n\n\nEl encabezamiento o YAML sirve para fijar opciones y metadatos de nuestro documento.\n\n\n\nEl YAML será procesado varias veces durante el procesado del documento: es leído por Quarto, knitr y Pandoc e influirá en el output final.\n\n\n\nEl hecho de estar trabajando dentro de un Qproject nos da mucha versatilidad a la hora de especificar el YAML de nuestros documentos .qmd. Documentación oficial aquí"
  },
  {
    "objectID": "slides/05_primer_web.html#el-yaml-de-un-post-se-puede-especificar-en-3-niveles",
    "href": "slides/05_primer_web.html#el-yaml-de-un-post-se-puede-especificar-en-3-niveles",
    "title": "Webs/blogs con Quarto",
    "section": "El yaml de un post se puede especificar en 3 niveles",
    "text": "El yaml de un post se puede especificar en 3 niveles\n\n\nNivel proyecto: todo Qproject tiene archivo _quarto.yml. Todo documento que se procese dentro del proyecto, heredará los metadatos definidos en _quarto.yml.\n\n\n\n\nNivel carpeta: si en una carpeta existe un documento _metadata.yml, los documentos de esa carpeta heredan sus metadatos. La carpeta ./posts/ de un blog suele tener un archivo _metadata.yml.\n\n\n\n\nNivel documento: en el yaml del propio documento .qmd\n\n\n\n\n\nSi hay conflictos prevalecen las opciones del nivel documento, luego nivel carpeta y finalmente nivel proyecto.\nDocumentación oficial de Quarto con las principales opciones que se pueden fijar en el YAML para documentos html: aquí y aquí"
  },
  {
    "objectID": "slides/05_primer_web.html#yaml-tal-como-lo-tenemos-ahora",
    "href": "slides/05_primer_web.html#yaml-tal-como-lo-tenemos-ahora",
    "title": "Webs/blogs con Quarto",
    "section": "YAML: tal como lo tenemos ahora",
    "text": "YAML: tal como lo tenemos ahora\n\n1. nivel proyecto (_quarto.yml)2. nivel carpeta (_metadata.yml)3. nivel documento (index.qmd)\n\n\nAbajo el contenido del fichero _quarto.yml tal y como lo tenemos ahora en nuestro blog. Solo he añadido 3 comentarios para diferenciar entre secciones:\n\n\n\n\n\n\n\nAbajo el, contenido del fichero ./posts/_metadata.yml. Afectará a todos los ficheros .qmd que haya en la carpeta ./posts/"
  },
  {
    "objectID": "slides/05_primer_web.html#yaml-nivel-proyecto-opciones-en-_quarto.yml",
    "href": "slides/05_primer_web.html#yaml-nivel-proyecto-opciones-en-_quarto.yml",
    "title": "Webs/blogs con Quarto",
    "section": "YAML: NIVEL PROYECTO (opciones en _quarto.yml)",
    "text": "YAML: NIVEL PROYECTO (opciones en _quarto.yml)\nEn _quarto.yml se suelen poner opciones referentes a 3 aspectos:\n\n1. Sobre el propio Qproject2. Estructura de la página web3. Formato de salida de los documentos\n\n\n\n# 1/ Opciones referentes al proyecto ----------------------------\nproject:\n  type: website\n  output-dir: docs    #- podemos cambiar la carpeta donde se redirige el output (.html)\n  # execute-dir: project    #- cambiar el render directory: https://quarto.org/docs/projects/code-execution.html#working-dir\n\n\n\nlinea 4: podemos elegir la carpeta de destino de nuestro blog\nlinea 5: podemos cambiar el render directory de los .qmd\n\n\nDocumentación oficial aquí.\n\n\n\n#- 2/ Opciones referentes a la estructura de la web -----------------\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  favicon: profile.jpg\n  #site-url: https://....\n  #repo-url: https://....\n  open-graph: true #-https://quarto.org/docs/websites/website-tools.html#twitter-cards\n  twitter-card:\n    creator: \"@tu-usuario-twitter\"\n    card-style: summary_large_image\n  navbar:\n    logo: \"profile.jpg\"\n    #background: primary    #- pink\n    right:\n      - text: \"About me\"\n        href: about.qmd\n      - icon: github\n        href: https://github.com/&lt;tu-usuario-github&gt;\n      - icon: twitter\n        href: https://twitter.com/&lt;tu-usuario-twitter&gt;\n      - icon: envelope\n        url: \"mailto:&lt;tu-mail@uv.es&gt;\"\n    left: \n      - icon: house-door\n        href: index.html\n      - text: \"Docencia\"\n        href: docencia.qmd\n  page-footer:\n    left: \"© 2022 Pedro J. Pérez\"\n    center: \"Hecho con [Quarto](https://quarto.org)\"\n    right:\n      - icon: github\n        href: https://github.com/&lt;tu-usuario-github&gt;\n      - icon: twitter\n        href: https://twitter.com/&lt;tu-usuario-twitter&gt;\n      - icon: envelope\n        url: \"mailto:&lt;tu-mail&gt;@uv.es\"\n\n\nComo ves, se añadirían elementos como:\n\nlineas 28 a 37: se añade un pie de página al blog\nlineas 24 y 25: Hemos añadido un elemento a la navbar concretamente el icono Home. La documentación oficial para elementos de navegación está aquí\nlinea 4: añadimos un favicon\nlineas 5 y 6: el url de la web y del repo en Github\nlineas 7-10: elementos de redes sociales. La documentación oficial para estos elementos esta aquí\n\n\n\n\n\n#- 3/ Opciones referentes al formato de salida  ---------------------\nformat:\n  html:\n    theme: flatly  \n    css: styles.css\n    toc: true\n    highlight-style: a11y\n\n\nEn un blog/web el formato de salida es siempre .html; sin embargo podemos especificar otras opciones como por ejemplo sí los documentos (o páginas de la web, o post del blog) tienen un índice flotante, etc… Documentación oficial aquí y aquí"
  },
  {
    "objectID": "slides/05_primer_web.html#un-ejemplo-completito-de-_quarto.yml",
    "href": "slides/05_primer_web.html#un-ejemplo-completito-de-_quarto.yml",
    "title": "Webs/blogs con Quarto",
    "section": "Un ejemplo “completito” de _quarto.yml",
    "text": "Un ejemplo “completito” de _quarto.yml\nSi quieres ver un documento _quarto.yml completito, ve aquí. Pertenece a la web de Quarto.\n\n\n\n\n\n\nproject:\n  type: website\n  output-dir: _site\n  resources:\n    - \"/docs/download/_download.json\"\n    - \"/docs/download/_prerelease.json\"\n    - \"/_redirects\"\n\nwebsite:\n  title: \"Quarto\"\n  image: \"quarto.png\"\n  favicon: \"favicon.png\"\n  google-analytics: \"G-FV9Z7SDZ0M\"\n  open-graph: true\n  twitter-card: true\n  site-url: https://quarto.org\n  repo-url: https://github.com/quarto-dev/quarto-web\n  repo-actions: [edit, issue]\n  page-navigation: true\n  search:\n    algolia:\n      index-name: prod_QUARTO\n      application-id: ZPJB5I1QN7\n      search-only-api-key: 41be6c1e0a7fea4a51b107810facf577\n      analytics-events: true\n      show-logo: true\n  page-footer:\n    left: |\n      Proudly supported by\n      [![](https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-flat.svg){fig-alt=\"RStudio\" width=65px}](https://www.rstudio.com)\n    center:\n      - text: \"About\"\n        href: about.qmd\n      - text: \"FAQ\"\n        href: docs/faq/index.qmd\n      - text: \"License\"\n        href: license.qmd\n      - text: \"Trademark\"\n        href: trademark.qmd\n    right:\n      - icon: twitter\n        href: https://twitter.com/quarto_pub\n        aria-label: Quarto Twitter\n      - icon: github\n        href: https://github.com/quarto-dev/quarto-cli\n        aria-label: Quarto GitHub\n  navbar:\n    background: light\n    logo: quarto.png\n    logo-alt: \"Quarto logo.\"\n    title: false\n    collapse-below: lg\n    left:\n      - text: \"Overview\"\n        href: index.qmd\n      - text: \"Get Started\"\n        href: docs/get-started/index.qmd\n      - text: \"Guide\"\n        href: docs/guide/index.qmd\n      - text: Extensions\n        href: docs/extensions/index.qmd\n      - text: \"Reference\"\n        href: docs/reference/index.qmd\n      - text: \"Gallery\"\n        href: docs/gallery/index.qmd\n      - text: \"Blog\"\n        href: docs/blog/index.qmd\n      - text: \"Help\"\n        menu:\n          - text: \"Report a Bug\"\n            icon: \"bug\"\n            href: \"https://github.com/quarto-dev/quarto-cli/issues\"\n          - text: \"Ask a Question\"\n            icon: \"chat-right-text\"\n            href: \"https://github.com/quarto-dev/quarto-cli/discussions\"\n          - text: \"FAQ\"\n            icon: \"question-circle\"\n            href: docs/faq/index.qmd\n    right:\n      - icon: twitter\n        href: https://twitter.com/quarto_pub\n        aria-label: Quarto Twitter\n      - icon: github\n        href: https://github.com/quarto-dev/quarto-cli\n        aria-label: Quarto GitHub\n\n  sidebar:\n    - id: get-started\n      title: \"Get Started\"\n      style: \"floating\"\n      collapse-level: 2\n      align: left\n      contents:\n        - docs/get-started/index.qmd\n        - text: \"Tutorial: Hello, Quarto\"\n          href: docs/get-started/hello/\n        - text: \"Tutorial: Computations\"\n          href: docs/get-started/computations/\n        - text: \"Tutorial: Authoring\"\n          href: docs/get-started/authoring/\n\n    - id: guide\n      collapse-level: 1\n      contents:\n        - text: \"Guide\"\n          href: docs/guide/index.qmd\n        - section: \"Authoring\"\n          contents:\n            - docs/authoring/markdown-basics.qmd\n            - docs/authoring/figures.qmd\n            - docs/authoring/tables.qmd\n            - docs/authoring/diagrams.qmd\n            - docs/authoring/videos.qmd\n            - docs/authoring/callouts.qmd\n            - docs/authoring/article-layout.qmd\n            - section: \"Scholarly Writing\"\n              contents:\n                - docs/authoring/title-blocks.qmd\n                - docs/authoring/footnotes-and-citations.qmd\n                - docs/authoring/cross-references.qmd\n                - docs/authoring/create-citeable-articles.qmd\n                - docs/authoring/appendices.qmd\n        - section: \"Computations\"\n          contents:\n            - docs/computations/python.qmd\n            - docs/computations/r.qmd\n            - docs/computations/julia.qmd\n            - docs/computations/ojs.qmd\n            - docs/computations/execution-options.qmd\n            - docs/computations/parameters.qmd\n        - section: \"Tools\"\n          contents:\n            - docs/tools/jupyter-lab.qmd\n            - docs/tools/rstudio.qmd\n            - docs/tools/vscode.qmd\n            - docs/tools/text-editors.qmd\n            - section: \"Visual Editor\"\n              contents:\n                - text: Editor Basics\n                  href: docs/visual-editor/index.qmd\n                - docs/visual-editor/technical.qmd\n                - docs/visual-editor/content.qmd\n                - docs/visual-editor/options.qmd\n                - docs/visual-editor/markdown.qmd\n        - section: \"Documents\"\n          contents:\n            - section: \"HTML\"\n              contents:\n                - docs/output-formats/html-basics.qmd\n                - docs/output-formats/html-code.qmd\n                - docs/output-formats/html-themes.qmd\n                - docs/output-formats/html-publishing.qmd\n            - section: \"PDF\"\n              contents:\n                - docs/output-formats/pdf-basics.qmd\n                - docs/output-formats/pdf-engine.qmd\n            - section: \"MS Word\"\n              contents:\n                - docs/output-formats/ms-word.qmd\n                - docs/output-formats/ms-word-templates.qmd\n            - section: \"Markdown\"\n              contents:\n                - docs/output-formats/gfm.qmd\n                - docs/output-formats/hugo.qmd\n                - docs/output-formats/docusaurus.qmd\n            - docs/output-formats/all-formats.qmd\n        - section: \"Presentations\"\n          contents:\n            - text: \"Overview\"\n              href: docs/presentations/index.qmd\n            - section: docs/presentations/revealjs/index.qmd\n              contents:\n                - text: \"Reveal Basics\"\n                  href: docs/presentations/revealjs/index.qmd\n                - docs/presentations/revealjs/presenting.qmd\n                - docs/presentations/revealjs/advanced.qmd\n                - docs/presentations/revealjs/themes.qmd\n            - docs/presentations/powerpoint.qmd\n            - docs/presentations/beamer.qmd\n        - section: \"Websites\"\n          href: docs/websites/website-basics.qmd\n          contents:\n            - docs/websites/website-basics.qmd\n            - docs/websites/website-navigation.qmd\n            - docs/websites/website-blog.qmd\n            - docs/websites/website-search.qmd\n            - docs/websites/website-tools.qmd\n            - docs/websites/website-about.qmd\n            - section: \"Listing Pages\"\n              href: docs/websites/website-listings.qmd\n              contents:\n                - docs/websites/website-listings.qmd\n                - docs/websites/website-listings-custom.qmd\n        - section: \"Books\"\n          href: docs/books/book-basics.qmd\n          contents:\n            - docs/books/book-basics.qmd\n            - docs/books/book-structure.qmd\n            - docs/books/book-crossrefs.qmd\n            - text: \"Customizing Output\"\n              href: docs/books/book-output.qmd\n        - section: \"Interactivity\"\n          contents:\n            - text: \"Overview\"\n              href: docs/interactive/index.qmd\n            - section: docs/interactive/ojs/index.qmd\n              contents:\n                - text: \"Introduction\"\n                  href: docs/interactive/ojs/index.qmd\n                - docs/interactive/ojs/libraries.qmd\n                - docs/interactive/ojs/data-sources.qmd\n                - docs/interactive/ojs/ojs-cells.qmd\n                - docs/interactive/ojs/shiny.qmd\n                - docs/interactive/ojs/code-reuse.qmd\n                - section: \"Examples\"\n                  contents:\n                    - docs/interactive/ojs/examples/penguins.qmd\n                    - docs/interactive/ojs/examples/sunburst.qmd\n                    - docs/interactive/ojs/examples/arquero.qmd\n                    - docs/interactive/ojs/examples/population.qmd\n                    - docs/interactive/ojs/examples/noaa-co2.qmd\n                    - docs/interactive/ojs/examples/github.qmd\n                    - docs/interactive/ojs/examples/layout.qmd\n                    - section: \"Shiny\"\n                      contents:\n                        - text: \"K-Means\"\n                          href: https://jjallaire.shinyapps.io/kmeans-shiny-ojs/\n                        - text: \"Binning\"\n                          href: https://jjallaire.shinyapps.io/binning-shiny-ojs/\n                        - text: \"Data Binding\"\n                          href: https://jjallaire.shinyapps.io/data-shiny-ojs/\n                        - text: \"Covid Map\"\n                          href: https://jjallaire.shinyapps.io/covid19-bicartogram/\n            - section: docs/interactive/shiny/index.qmd\n              contents:\n                - text: \"Introduction\"\n                  href: docs/interactive/shiny/index.qmd\n                - docs/interactive/shiny/running.qmd\n                - docs/interactive/shiny/execution.qmd\n                - docs/interactive/shiny/resources.qmd\n                - section: \"Examples\"\n                  contents:\n                    - text: \"Old Faithful\"\n                      href: https://jjallaire.shinyapps.io/shiny-old-faithful/\n                    - text: \"K-Means\"\n                      href: https://jjallaire.shinyapps.io/shiny-k-means/\n                    - text: \"Diamonds\"\n                      href: https://jjallaire.shinyapps.io/shiny-diamonds/\n            - section: \"Widgets\"\n              contents:\n                - docs/interactive/widgets/jupyter.qmd\n                - docs/interactive/widgets/htmlwidgets.qmd\n            - docs/interactive/layout.qmd\n        - section: \"Publishing\"\n          contents:\n            - docs/publishing/index.qmd\n            - docs/publishing/quarto-pub.qmd\n            - docs/publishing/github-pages.qmd\n            - docs/publishing/rstudio-connect.qmd\n            - docs/publishing/netlify.qmd\n            - docs/publishing/other.qmd\n            - text: \"Publishing with CI\"\n              href: docs/publishing/ci.qmd\n        - section: \"Projects\"\n          contents:\n            - docs/projects/quarto-projects.qmd\n            - docs/projects/code-execution.qmd\n            - docs/projects/profiles.qmd\n            - docs/projects/environment.qmd\n            - docs/projects/scripts.qmd\n            - docs/projects/virtual-environments.qmd\n        - section: \"Advanced\"\n          contents:\n            - docs/authoring/includes.qmd\n            - docs/authoring/variables.qmd\n            - docs/output-formats/page-layout.qmd\n            - docs/authoring/language.qmd\n            - docs/authoring/conditional.qmd\n            - docs/extensions/nbfilter.qmd\n    - id: extensions\n      title: \"Extensions\"\n      contents:\n        - \"---\"\n        - section: docs/extensions/index.qmd\n          contents: \n            - text: \"Shortcodes & Filters\"\n              href: docs/extensions/listing-filters.qmd\n            - text: \"Journal Articles\"\n              href: docs/extensions/listing-journals.qmd\n            - text: \"Custom Formats\"\n              href: docs/extensions/listing-formats.qmd\n            - text: \"Revealjs Extensions\"\n              href: docs/extensions/listing-revealjs.qmd\n            - docs/extensions/managing.qmd\n        - \"---\"\n        - section: docs/extensions/creating.qmd\n          contents:\n            - text: \"Overview\"\n              href: docs/extensions/creating.qmd\n            - docs/extensions/lua.qmd\n            - docs/extensions/lua-api.qmd\n            - text: \"Distribution\"\n              href: docs/extensions/distributing.qmd\n            - \"---\"\n            - text: \"Shortcodes\"\n              href: docs/extensions/shortcodes.qmd\n            - text: \"Filters\"\n              href: docs/extensions/filters.qmd\n            - section: \"Journal Articles\"\n              href: docs/journals/formats.qmd\n              contents:\n                - docs/journals/formats.qmd\n                - docs/journals/templates.qmd\n                - docs/journals/authors.qmd\n            - docs/extensions/formats.qmd\n            - docs/extensions/revealjs.qmd\n            - docs/extensions/project-types.qmd\n            - docs/extensions/starter-templates.qmd\n\n    - id: reference\n      title: \"Reference\"\n      contents:\n        - text: \"Reference\"\n          href: docs/reference/index.qmd\n        - section: \"Formats\"\n          contents:\n            - text: \"HTML\"\n              href: docs/reference/formats/html.qmd\n            - text: \"PDF\"\n              href: docs/reference/formats/pdf.qmd\n            - text: \"MS Word\"\n              href: docs/reference/formats/docx.qmd\n            - text: \"OpenOffice\"\n              href: docs/reference/formats/odt.qmd\n            - text: \"ePub\"\n              href: docs/reference/formats/epub.qmd\n            - section: \"Presentations\"\n              contents:\n                - text: \"Revealjs\"\n                  href: docs/reference/formats/presentations/revealjs.qmd\n                - text: \"PowerPoint\"\n                  href: docs/reference/formats/presentations/pptx.qmd\n                - text: \"Beamer\"\n                  href: docs/reference/formats/presentations/beamer.qmd\n            - section: \"Markdown\"\n              contents:\n                - text: \"GitHub\"\n                  href: docs/reference/formats/markdown/gfm.qmd\n                - text: \"CommonMark\"\n                  href: docs/reference/formats/markdown/commonmark.qmd\n                - text: \"Markua\"\n                  href: docs/reference/formats/markdown/markua.qmd\n            - section: \"Wikis\"\n              contents:\n                - text: \"MediaWiki\"\n                  href: docs/reference/formats/wiki/mediawiki.qmd\n                - text: \"DokuWiki\"\n                  href: docs/reference/formats/wiki/dokuwiki.qmd\n                - text: \"ZimWiki\"\n                  href: docs/reference/formats/wiki/zimwiki.qmd\n                - text: \"Jira Wiki\"\n                  href: docs/reference/formats/wiki/jira.qmd\n                - text: \"XWiki\"\n                  href: docs/reference/formats/wiki/xwiki.qmd\n            - section: \"More Formats\"\n              contents:\n                - text: \"JATS\"\n                  href: docs/reference/formats/jats.qmd\n                - text: \"Jupyter\"\n                  href: docs/reference/formats/ipynb.qmd\n                - text: \"ConTeXt\"\n                  href: docs/reference/formats/context.qmd\n                - text: \"RTF\"\n                  href: docs/reference/formats/rtf.qmd\n                - text: \"reST\"\n                  href: docs/reference/formats/rst.qmd\n                - text: \"AsciiDoc\"\n                  href: docs/reference/formats/asciidoc.qmd\n                - text: \"Org-Mode\"\n                  href: docs/reference/formats/org.qmd\n                - text: \"Muse\"\n                  href: docs/reference/formats/muse.qmd\n                - text: \"GNU TexInfo\"\n                  href: docs/reference/formats/texinfo.qmd\n                - text: \"Groff Man Page\"\n                  href: docs/reference/formats/man.qmd\n                - text: \"Groff Manuscript\"\n                  href: docs/reference/formats/ms.qmd\n                - text: \"Haddock markup\"\n                  href: docs/reference/formats/haddock.qmd\n                - text: \"OPML\"\n                  href: docs/reference/formats/opml.qmd\n                - text: \"Textile\"\n                  href: docs/reference/formats/textile.qmd\n                - text: \"DocBook\"\n                  href: docs/reference/formats/docbook.qmd\n                - text: \"InDesign\"\n                  href: docs/reference/formats/icml.qmd\n                - text: \"TEI Simple\"\n                  href: docs/reference/formats/tei.qmd\n                - text: \"FictionBook\"\n                  href: docs/reference/formats/fb2.qmd\n        - section: \"Code Cells\"\n          contents:\n            - text: \"Jupyter\"\n              href: docs/reference/cells/cells-jupyter.qmd\n            - text: \"Knitr\"\n              href: docs/reference/cells/cells-knitr.qmd\n            - text: \"Observable\"\n              href: docs/reference/cells/cells-ojs.qmd\n        - section: \"Projects\"\n          contents:\n            - text: \"Options\"\n              href: docs/reference/projects/options.qmd\n            - text: \"Websites\"\n              href: docs/reference/projects/websites.qmd\n            - text: \"Books\"\n              href: docs/reference/projects/books.qmd\n        - section: \"More\"\n          contents:\n            - text: \"Dates\"\n              href: docs/reference/dates.qmd\n            - text: \"Globs\"\n              href: docs/reference/globs.qmd\n            - text: \"Citations\"\n              href: docs/reference/metadata/citation.qmd\n\nbibliography: references.bib\n\nformat:\n  html:\n    toc: true\n    theme:\n      light: [cosmo, theme.scss]\n    code-copy: true\n    code-overflow: wrap\n    css: styles.css\n    include-after-body: js.html\n\nfilters:\n  - filters/tools-tabset.lua\n\n\nfreeze: true\n\neditor: visual\n\nprofile:\n  group: \n    - [rc, prerelease]"
  },
  {
    "objectID": "slides/05_primer_web.html#layout-general",
    "href": "slides/05_primer_web.html#layout-general",
    "title": "Webs/blogs con Quarto",
    "section": "Layout   (“general”)",
    "text": "Layout   (“general”)\n\nAdemás de yaml, texto y chunk, para escribir con Quarto conviene conocer la estructura o layout de las páginas web que generamos con Quarto. Documentación aquí y aquí.\n\n\n\nNuestra páginas web tienen 2 zonas si la miramos en horizontal: la sidebar y la zona reservada para el artículo. Puedes verlo aquí\n\nA su vez, la zona del artículo se divide en 2: body y margin.\n\n\n\n\n\nA partir de la versión 1.3 de Quarto, se puede controlar estos componentes del layout. Puedes verlo aquí\n\n\n\n\nAdemás, el layout puede venir afectado por la opción page-layout: full que tiene 3 opciones: article, full y custom"
  },
  {
    "objectID": "slides/05_primer_web.html#layouts-para-secciones-específicas",
    "href": "slides/05_primer_web.html#layouts-para-secciones-específicas",
    "title": "Webs/blogs con Quarto",
    "section": "Layout’s   (“para secciones específicas”)",
    "text": "Layout’s   (“para secciones específicas”)\n\n⚠️ Importante!!\n\n\nUsando fenced-divs se puede hacer que alguna sección de nuestra página ocupe un espacio mayor al habitual; es decir, mayor al espacio habitualmente reservado para el “body”.\n\n\n\nDe esta forma podemos hacer que, por ejemplo, una imagen1 ocupe más espacio del habitual, más espacio del reservado al body, o incluso desplazarlo al “margin”.\n\n\n\n\n\nVeamos las posibilidades que tenemos de layout con este post del blog del curso\n\n\n\nO un párrafo de texto, en realidad cualquier elemento de nuestros documentos"
  },
  {
    "objectID": "slides/05_primer_web.html#imágenes",
    "href": "slides/05_primer_web.html#imágenes",
    "title": "Webs/blogs con Quarto",
    "section": "Imágenes",
    "text": "Imágenes\n\nConocemos ya la sintaxis básica para insertar imágenes ![](&lt;ruta-a-imagen&gt;); ahora veremos posibilidades más avanzadas\nVeamos como insertar imágenes con este post del blog del curso"
  },
  {
    "objectID": "slides/05_primer_web.html#extensiones",
    "href": "slides/05_primer_web.html#extensiones",
    "title": "Webs/blogs con Quarto",
    "section": "Extensiones",
    "text": "Extensiones\n\nUna de las novedades de Quarto es la posibilidad de usar extensiones. Las extensiones se escriben en lenguaje Lua.\nPara ver como instalar y usar extensiones vamos a ir, otra vez, a otro de los post del blog del curso: concretamente aquí"
  },
  {
    "objectID": "slides/05_primer_web.html#shortcodes",
    "href": "slides/05_primer_web.html#shortcodes",
    "title": "Webs/blogs con Quarto",
    "section": "Shortcodes",
    "text": "Shortcodes\n\nUn shortcode es un código (una etiqueta, un elemento) que podemos insertar para añadir algún tipo de contenido sin tener que escribirlo directamente.\nSon muy útiles para insertar contenido que se repite\nPodemos verlo en este post del blog del curso o en la documentación oficial"
  },
  {
    "objectID": "slides/05_primer_web.html#faltan-2-elementos",
    "href": "slides/05_primer_web.html#faltan-2-elementos",
    "title": "Webs/blogs con Quarto",
    "section": "Faltan 2 elementos",
    "text": "Faltan 2 elementos\n\n\nCallout blocks: documentación aquí\n\n\n\nDivs y spans: documentación aquí"
  },
  {
    "objectID": "slides/05_primer_web.html#intro-1",
    "href": "slides/05_primer_web.html#intro-1",
    "title": "Webs/blogs con Quarto",
    "section": "Intro",
    "text": "Intro\n\nQuarto utiliza el framework Bootstrap 5 para generar sus documentos .html.\nAdemás, incorpora 25 themes del Bootswatch project que le dan a nuestro blog/web una apariencia profesional y cuidada.\n\n\n\n\nCreo que es mejor comenzar con un blog sencillo usando las plantillas, o themes, que nos ofrece Quarto pero, si queremos modificar la apariencia de nuestro blog, podemos hacerlo de 3 formas:\n\n\n\n           1. Utilizando las opciones disponibles en Quarto para el yaml\n           2. Utilizando CSS\n           3. Utilizando SASS"
  },
  {
    "objectID": "slides/05_primer_web.html#documentación-oficial",
    "href": "slides/05_primer_web.html#documentación-oficial",
    "title": "Webs/blogs con Quarto",
    "section": "Documentación oficial",
    "text": "Documentación oficial\n(sobre opciones disponibles en los YAML’s)\n\n\nReferentes al proyecto: aquí\nReferentes a la estructura de la web: aquí y aquí\nReferentes a la estética: aquí y aquí\nReferentes a las Listing Pages: aquí\nReferentes a las About Pages: aquí"
  },
  {
    "objectID": "slides/05_primer_web.html#algunas-opciones-de-yaml-lang",
    "href": "slides/05_primer_web.html#algunas-opciones-de-yaml-lang",
    "title": "Webs/blogs con Quarto",
    "section": "Algunas opciones de YAML: lang",
    "text": "Algunas opciones de YAML: lang\n\nSi te has fijado, los metadatos de los documentos aparecen en inglés.\nPor ejemplo, pone “Author” en lugar de “Autor” o “Autora”.\n\n\n\nHagamos algunos cambios\n\nSi quisiéramos cambiar específicamente la opción de autor, tendríamos que poner en el YAML:\n\n\nlanguage: \n  title-block-author-single: \"Autora\"\n\n\nPodemos cambiar todas las opciones especificando en el YAML lang: es.\nLa documentación oficial está aquí y aquí todos los elementos que se pueden modificar. Y aquí los ficheros específicos para diferentes idiomas. Aquí el documento para el castellano.\n\n\n\nSi quisieras usar tu propio documento tendrías que poner en el YAML: language: custom.yml (lógicamente el fichero custom.yml tendría que existir y estar en la ruta correcta).\n¿Probamos a hacerlo?"
  },
  {
    "objectID": "slides/05_primer_web.html#otras-opciones-para-tunear-desde-el-yaml",
    "href": "slides/05_primer_web.html#otras-opciones-para-tunear-desde-el-yaml",
    "title": "Webs/blogs con Quarto",
    "section": "Otras opciones para tunear desde el YAML",
    "text": "Otras opciones para tunear desde el YAML\n\nTOC: es importante tenerlo a nuestro gusto. Aquí tienes las opciones que puedes ajustar con opciones en el yaml\nChunks: aquí tienes las opciones que puedes ajustar desde el YAML\nResizing de los thumbnails. Un gist para hacerlo.\nAlgunas opciones de tuneado que puedes implementar desde el YAML. Prueba a poner estas opciones en el archivo _quarto.yml. Nuestro blog empeorará bastante. Más opciones aquí.\n\n\nfontcolor: green          #- color del texto\nlinkcolor: purple         #- color de los enlaces\nmonobackgroundcolor: red  #- color de los cuadros de resultados de evaluar código\nfontsize: 0.6em           #- tamaño del texto (más pequeño de lo normal: 1)\nlinestretch: 2.3          #- tamaño entre las lineas (1.6 es lo \"normal\")"
  },
  {
    "objectID": "slides/05_primer_web.html#utilizando-css",
    "href": "slides/05_primer_web.html#utilizando-css",
    "title": "Webs/blogs con Quarto",
    "section": "2. Utilizando CSS",
    "text": "2. Utilizando CSS\n\n\nLa apariencia visual del blog puede cambiarse utilizando CSS.\nVeamos un ejemplo con el siguiente post"
  },
  {
    "objectID": "slides/05_primer_web.html#utilizando-sass",
    "href": "slides/05_primer_web.html#utilizando-sass",
    "title": "Webs/blogs con Quarto",
    "section": "3. Utilizando SASS",
    "text": "3. Utilizando SASS\n\n\nLa documentación oficial aquí\nAquí la documentación oficial de Quarto sobre los Bootswatch Sass Theme Files.\nBootstrap define unas 1.400 variables con las que controlar fuentes, colores, etc … . Puedes verlas aquí\nAquí están los ficheros .scss de los 25 built-in Bootswatch themes.\n\n\n\nOtras referencias, por ejemplo: Customizing Quarto Websites: Make your website stand out using SASS o este video\nUna pequeña práctica en el tutorial nº6 del taller “Mi primer blog con Quarto”."
  },
  {
    "objectID": "slides/04_revealjs.html#creación-de-unas-nuevas-transparencias",
    "href": "slides/04_revealjs.html#creación-de-unas-nuevas-transparencias",
    "title": "Slides con Quarto",
    "section": "Creación de unas nuevas transparencias",
    "text": "Creación de unas nuevas transparencias\n\n\nHas de seguir la siguiente ruta de menús:\nFile &gt; New File &gt; Quarto Presentation.\n\nSe abrirá una interfaz gráfica donde podrás elegir entre 3 formatos de slides (Revealjs, Beamer y ppt). También podrás poner título y autor.\n\n\n\nEn imágenes:"
  },
  {
    "objectID": "slides/04_revealjs.html#creación-de-una-nueva-slide",
    "href": "slides/04_revealjs.html#creación-de-una-nueva-slide",
    "title": "Slides con Quarto",
    "section": "Creación de una nueva slide",
    "text": "Creación de una nueva slide\n\nLos títulos de primer nivel crean una nueva slide (y tb una nueva sección)\nLos títulos de segundo nivel crean una nueva slide.\n\n\n\nTambién se puede crear una nueva slide usando 3 o mas guiones cortos: ---\n\n\n\n\n\n\n\nExtensión: modificar la generación de nuevas slides\n\n\nHay que usar slide-level: en el YAML. Por ejemplo:\n\n\n---\ntitle: \"Mis slides\"\nformat: revealjs \n---\nPor defecto, los títulos de primer(#) y segundo nivel (##) crean nuevas slides\n\n---\ntitle: \"Mis slides\"\nformat: \n  revealjs:   \n  slide-level: 3\n---\nCon este yaml, los títulos de tercer nivel (con ###) también crearían una nueva slide"
  },
  {
    "objectID": "slides/04_revealjs.html#pausas-en-la-presentación",
    "href": "slides/04_revealjs.html#pausas-en-la-presentación",
    "title": "Slides con Quarto",
    "section": "Pausas en la presentación",
    "text": "Pausas en la presentación\n\nPor defecto, los elementos de una slide se muestran todos de golpe\n\n\n\n\n⚠️ Para crear pausas en la presentación has de usar las siguientes marcas:  . . . \n\n    (es decir, tres puntos separados por espacios)\n\n\n\n\nPor ejemplo:\n\n## Una nueva slide\n\nContenido nº 1\n\n. . . \n\nContenido nº 2\n(para ver el Contenido nº 2 habrá que dar al avance página)"
  },
  {
    "objectID": "slides/04_revealjs.html#listas-incrementales",
    "href": "slides/04_revealjs.html#listas-incrementales",
    "title": "Slides con Quarto",
    "section": "Listas incrementales",
    "text": "Listas incrementales\n\nPor defecto las listas se muestran de golpe\n\n\n\nSi quieres que se muestren elemento a elemento, puedes controlarlo desde el YAML:\n\ntitle: \"My Presentation\"\nformat:\n  revealjs:\n    incremental: true   \n\n\n\nSe puede ir intercalando listas incrementales, y no-incrementales, con los siguientes fenced div’s:\n\n\n\nLista incremental :\n\n::: {.incremental}\n- First we take Manhatan,\n- then we take Berlin\n:::\n\nLista no-incremental :\n\n::: {.nonincremental}\n- First we take Manhatan,\n- then we take Berlin\n:::"
  },
  {
    "objectID": "slides/04_revealjs.html#columas-multiples",
    "href": "slides/04_revealjs.html#columas-multiples",
    "title": "Slides con Quarto",
    "section": "Columas multiples",
    "text": "Columas multiples\n\n\n\nComo puedes ver, se puede generar contenido en varias columnas. Para ello hay que usar “un fenced div con clase columns”.\n\n\n\nTo put material in side by side columns, you can use a native div container with class .columns, containing two or more div containers with class .column and a width attribute. – Documentacion oficial de Quarto\n\n\n\n\nPor ejemplo:\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\nMi contenido en la primera columna\n:::\n\n::: {.column width=\"60%\"}\nContenido en la segunda columna\n:::\n\n::::"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-slide-background",
    "href": "slides/04_revealjs.html#revealjs-slide-background",
    "title": "Slides con Quarto",
    "section": "Revealjs: Slide background",
    "text": "Revealjs: Slide background\n\n\nLas slides mejoran bastante estéticamente si en alguna de ellas cambiamos el fondo. La documentación está aquí\n\n\n\nSe pueden usar los siguientes elementos: color, imagen, vídeo e iframe. Por ejemplo:\n\n\n## Título de la slide {background-color=\"aquamarine\"}\n\n## Título de la slide {background-color=\"#A9339A\"}\n\n\n\n\n\n\n\nExtensión: Opciones más complejas\n\n\n## Slide Title {background-video=\"video.mp4\" background-video-loop=\"true\" background-video-muted=\"true\"}\n\n## Slide Title {background-color=\"black\" background-image=\"https://placekitten.com/100/100\" background-size=\"100px\" background-repeat=\"repeat\"}\n\n## Slide Title {background-iframe=\"https://www.uv.es\"}"
  },
  {
    "objectID": "slides/04_revealjs.html#slide-backgrounds-ejemplo-1-color",
    "href": "slides/04_revealjs.html#slide-backgrounds-ejemplo-1-color",
    "title": "Slides con Quarto",
    "section": "Slide Backgrounds: ejemplo 1 (color)",
    "text": "Slide Backgrounds: ejemplo 1 (color)\nPara poner un color de fondo:\n\n## Slide Backgrounds: ejemplo 1 (color) {background-color=\"aquamarine\"}"
  },
  {
    "objectID": "slides/04_revealjs.html#slide-backgrounds-ejemplo-2-imagen",
    "href": "slides/04_revealjs.html#slide-backgrounds-ejemplo-2-imagen",
    "title": "Slides con Quarto",
    "section": "Slide Backgrounds: ejemplo 2 (imagen)",
    "text": "Slide Backgrounds: ejemplo 2 (imagen)\nPara poner una imagen de fondo:\n\n## Slide Backgrounds: ejemplo 2 (imagen) {background-image=\"imagenes/perro_blanco.jpg\" background-size=\"cover\"}"
  },
  {
    "objectID": "slides/04_revealjs.html#section",
    "href": "slides/04_revealjs.html#section",
    "title": "Slides con Quarto",
    "section": "",
    "text": "Se pueden hacer cosas muy chulas como:\n\n\nSlides Emil Hvitfeldt\nParallax background. Documentación aquí\nQuarto iFrame Examples. El repo\n\n\n\n\nInspiración, vamos, copiado de https://emilhvitfeldt.github.io/useR2022-textrecipes"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-tabsets",
    "href": "slides/04_revealjs.html#revealjs-tabsets",
    "title": "Slides con Quarto",
    "section": "Revealjs: Tabsets",
    "text": "Revealjs: Tabsets\n\n\n\n\nPor ejemplo este tabset\n\n\nAdivinanzaSolución\n\n\nOro parece, plátano es …\n\n\n😀\n\n\n\n\n\nse ha creado con este código:\n\n::: {.panel-tabset}\n## Adivinanza\n\nOro parece, platano es ...\n\n## Solución\n\n😀\n:::"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-numeración-de-las-slides",
    "href": "slides/04_revealjs.html#revealjs-numeración-de-las-slides",
    "title": "Slides con Quarto",
    "section": "Revealjs: Numeración de las slides",
    "text": "Revealjs: Numeración de las slides\n\nPor defecto las slides están numeradas\n\n---\nformat:\n  revealjs:\n    slide-number: true #- {true, false}\n---\n\n\nPuedes hacer que una slide no se cuente:\n\n## Título de la slide  {visibility=\"uncounted\"}\n\n\n\n\nPuedes hacer cosas más complejas. Documentación oficial aquí\n\n---\nformat:\n  revealjs:\n    slide-number: c/t   #- current/total {c/t, c, ...}\n---"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-tunear-con-themes",
    "href": "slides/04_revealjs.html#revealjs-tunear-con-themes",
    "title": "Slides con Quarto",
    "section": "Revealjs: tunear con themes",
    "text": "Revealjs: tunear con themes\n\nPodemos cambiar la apariencia de las slides usando los themes.\nListado de themes aquí.\n\n\n\nPara ello tenemos que incluir en el YAML el theme que queremos:\n\n---\ntitle: \"Presentation\"\nformat:\n  revealjs: \n    theme: dark\n---\n\n\n\n\n\n\nHay extensiones para tunear\n\n\n\nAdemás disponemos de muchos otros themes en extensiones en la web de Quarto y en Awesome Quarto\nPor ejemplo: los themes 4 estaciones, Inversa, Insper, … Revealjs Earth theme impresiona."
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-la-primera-slide",
    "href": "slides/04_revealjs.html#revealjs-la-primera-slide",
    "title": "Slides con Quarto",
    "section": "Revealjs: la primera slide",
    "text": "Revealjs: la primera slide\n\nLa primera slide se crea automáticamente si pones un título en el YAML\n\nEn ese caso, la 1ª slide contendrá los metadatos: title, subtitle, author, institute, date\n\n\n\n\nLa apariencia de la primera slide dependerá del tema elegido. Listado de themes aquí.\n\n\n\n\n\nTenemos muchas opciones para personalizar las slides y, en concreto, para tunear la primera slide"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-tuneando-la-primera-slide",
    "href": "slides/04_revealjs.html#revealjs-tuneando-la-primera-slide",
    "title": "Slides con Quarto",
    "section": "Revealjs: tuneando la primera slide",
    "text": "Revealjs: tuneando la primera slide\n\n\n\nExtensión: modificar el aspecto de la primera slide con YAML\n\n\nAquí tienes algunas opciones en el YAML para la primera slide\n---\ntitle: \"Mys slides\"\nformat:\n  revealjs: \n    theme: default\n    center-title-slide: true                #- centrado vertical\ntitle-slide-attributes:\n  data-background-color: \"#562457\"          #- color del backgroung\n  data-background-image: imagenes/my_imagen.jpg  #- ruta a imagén\n  data-background-size: cover               #- {cover, contain}\n  data-background-opacity: \"0.4\"\n---\n\n\n\n\n\n\n\nExtensión: modificar el aspecto de la primera slide manualmente\n\n\n# My slides {background-image=\"imagenes/my_imagen.jpg\" background-size=\"cover\" background-color=\"#4f6952\" background-opacity=\"0.5\"}\n\n&lt;h2&gt;Tuneando la primera slide&lt;/h2&gt;\n\n&lt;h3&gt;Pedro J. Pérez \\| 2023-04-04&lt;/h3&gt;"
  },
  {
    "objectID": "slides/04_revealjs.html#rvealjs-el-footer",
    "href": "slides/04_revealjs.html#rvealjs-el-footer",
    "title": "Slides con Quarto",
    "section": "Rvealjs: el Footer",
    "text": "Rvealjs: el Footer\n\nPodemos incorporar contenido en el píe de página de las slides.\n\n\n\n\n\n\n\n\nEl footer habitual de estas slides se haría así:\n\n---\ntitle: \"My slides\"\nformat: \n  revealjs:\n    footer: \"[https://go.uv.es/pjperez/intro.to.quarto](https://go.uv.es/pjperez/intro.to.quarto)\"\n---\n\n\nPero si te fijas, he cambiado el footer específicamente para esta slide. Lo he hecho con:\n\n\nhttps://www.uv.es\n\n::: {.footer}\n&lt;https://www.uv.es&gt;\n:::"
  },
  {
    "objectID": "slides/04_revealjs.html#rvealjs-logo",
    "href": "slides/04_revealjs.html#rvealjs-logo",
    "title": "Slides con Quarto",
    "section": "Rvealjs: Logo",
    "text": "Rvealjs: Logo\n\nTambién podemos poner un logo. Por defecto se colocará en la esquina inferior-izquierda. La numeración pasaría a estar en la esquina superior-izquierda\n\n---\ntitle: \"My slides\"\nformat: \n  revealjs:\n    footer: \"[https://go.uv.es/pjperez/intro.to.quarto](https://go.uv.es/pjperez/intro.to.quarto)\"\n    #logo: imagenes/economia.gif\n    logo: \"https://upload.wikimedia.org/wikipedia/commons/8/8c/Esuni.GIF\"\n---\n\n\nHay extensiones que permiten incorporar más elementos y dar más flexibilidad al footer y al header de nuestras slides. Por ejemplo esta extensión permite hacer slides como estas"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-content-overflow",
    "href": "slides/04_revealjs.html#revealjs-content-overflow",
    "title": "Slides con Quarto",
    "section": "Revealjs: Content overflow",
    "text": "Revealjs: Content overflow\nSi el contenido que queremos poner es mucho y no se ajusta, no cabe en la slide, tenemos varias posibilidades:\n\n\n\nUsar la .smaller class al crear la slide:\n\n\n## Título de la slide {.smaller}\n\n\n\n\nModificar el YAML para hacer las slides “scrollables”:\n\n---\ntitle: \"My Presentation\"\nformat:\n  revealjs:\n      scrollable: true\n---"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-transiciones",
    "href": "slides/04_revealjs.html#revealjs-transiciones",
    "title": "Slides con Quarto",
    "section": "Revealjs: Transiciones",
    "text": "Revealjs: Transiciones\n\nDocumentación oficial aquí\n\n\n\n\n\n\n\n\nTransition\nDescription\n\n\n\n\nnone\nNo transition (switch instantly)\n\n\nfade\nCross fade\n\n\nslide\nSlide horizontally\n\n\nconvex\nSlide at a convex angle\n\n\nconcave\nSlide at a concave angle\n\n\nzoom\nScale the incoming slide so it grows in from the center of the screen.\n\n\n\n\n---\ntitle: \"Presentation\"\nformat:\n  revealjs:\n    transition: slide      #- transiciones de las slide: {none, fade, slide, convex, concave, or zoom}\n    transition-speed: fast #- {default, fast, slow}\n---"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-transiciones-1",
    "href": "slides/04_revealjs.html#revealjs-transiciones-1",
    "title": "Slides con Quarto",
    "section": "Revealjs: Transiciones",
    "text": "Revealjs: Transiciones\n\nLas transiciones se pueden fijar para una slide:\n\n## Título de la slide {transition=\"convex\" transition-speed=\"slow\"}\n\ny hacerlas más complejas\n\n## Título de la slide {transition=\"fade-in slide-out\"}"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-auto-animaciones",
    "href": "slides/04_revealjs.html#revealjs-auto-animaciones",
    "title": "Slides con Quarto",
    "section": "Revealjs: Auto-animaciones",
    "text": "Revealjs: Auto-animaciones\n\nSe puede auto-animar 2 slides próximas. Documentación aquí\n\n\n\n# {auto-animate=true}\n\n¿Esto te gusta?\n\n## {auto-animate=true}\n\n¿Esto te gusta?\n\nSí, esto me gusta\n\n## {auto-animate=true}\n\nSí, esto me gusta **MUCHO**\n\n\n\n\nSe pueden usar las siguientes propiedades CSS: position, font-size, line-height, color, background-color, padding y margin.\n\n## {auto-animate=true}\n\n::: {style=\"margin-top: 100px;\"}\nContenido auto-anímado\n:::\n\n## {auto-animate=true}\n\n::: {style=\"margin-top: 200px; font-size: 3em; color: red;\"}\nContenido auto-anímado\n:::"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-auto-animaciones-chunks",
    "href": "slides/04_revealjs.html#revealjs-auto-animaciones-chunks",
    "title": "Slides con Quarto",
    "section": "Revealjs: Auto-animaciones (chunks)",
    "text": "Revealjs: Auto-animaciones (chunks)\n\nTambién se puede auto-animar chunks de código. Documentación aquí\n\n\n## {auto-animate=\"true\"}\n\n```r\n#######- Hagamos un ggplot\nlibrary(ggplot2)\nggplot(iris) +\n```\n\n## {auto-animate=true}\n\n```r\n#######- Hagamos un ggplot\nlibrary(ggplot2)\nggplot(iris) +\n  geom_point(aes(x = Sepal.Length, \n                 y = Petal.Length, \n                 color = Species))\n```"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-asides",
    "href": "slides/04_revealjs.html#revealjs-asides",
    "title": "Slides con Quarto",
    "section": "Revealjs: Asides",
    "text": "Revealjs: Asides\n\nLos “asides” son similares a las notas al píe de página, pero no llevan numeración.\n\n\n\nSu sintaxis es:\n\n::: aside\nEl contenido de un aside se colocará al final de la slides, justo encima de las notas al píe\n:::\n\n\nEl contenido de un aside se colocará al final de la slides, justo encima de las notas al píe"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-más-cosas",
    "href": "slides/04_revealjs.html#revealjs-más-cosas",
    "title": "Slides con Quarto",
    "section": "Revealjs: Más cosas",
    "text": "Revealjs: Más cosas\n\nPuedes ocultar una slide:\n\n## Título de la slide  {visibility=\"hidden\"}\n\n\n\nTamaño de las slides. Documentación oficial aquí"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-alineación-de-los-títulos",
    "href": "slides/04_revealjs.html#revealjs-alineación-de-los-títulos",
    "title": "Slides con Quarto",
    "section": "Revealjs: Alineación de los títulos",
    "text": "Revealjs: Alineación de los títulos\n\nLos títulos de primer nivel (#) aparecen verticalmente centrados\nLos títulos de segundo nivel (##) aparecen en el margen superior\n\n\n\nTodo se puede cambiar con CSS, o . . .\n\n\n\n\nSi quieres alinear un título a la derecha, una posibilidad es:\n\n\n\n::: {style=\"text-align: right;\"}\n\n&lt;h2&gt;Right aligned!&lt;/h2&gt;\n\n### Right aligned  tb!\n:::\n\n\nRight aligned!\n\nRight aligned tb!"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-ajustar-texto-con-r-fit-text",
    "href": "slides/04_revealjs.html#revealjs-ajustar-texto-con-r-fit-text",
    "title": "Slides con Quarto",
    "section": "Revealjs: ajustar texto con “r-fit-text”",
    "text": "Revealjs: ajustar texto con “r-fit-text”\n\n\n\nNO\nQUIERO!!\n\n\n::: r-fit-text\nNO\n\nQUIERO!!\n:::"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-fragments",
    "href": "slides/04_revealjs.html#revealjs-fragments",
    "title": "Slides con Quarto",
    "section": "Revealjs: Fragments",
    "text": "Revealjs: Fragments\n\nLos fragments se usan para resaltar o mostrar poco a poco algunos elementos de una slide: cada elemento con clase .fragment aparecerá sólo cuando avancemos a la siguiente slide. Documentación aquí. Hay muchas clases de fragments\n\n\n\n\n::: {.fragment}\nFade in\n:::\n\n::: {.fragment .fade-out}\nFade out\n:::\n\n::: {.fragment .highlight-red}\nHighlight red\n:::\n\n::: {.fragment .fade-in-then-out}\nFade in, then out\n:::\n\n::: {.fragment .fade-up}\nSlide up while fading in\n:::\n\n\nFade in\n\n\nFade out\n\n\nHighlight red\n\n\nFade in, then out\n\n\nSlide up while fading in"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-fragments-en-spans",
    "href": "slides/04_revealjs.html#revealjs-fragments-en-spans",
    "title": "Slides con Quarto",
    "section": "Revealjs: Fragments en spans",
    "text": "Revealjs: Fragments en spans\n\nEl uso más directo que veo a los fragments es usarlos con spans para hacer esto:\n\nEsto es muy [importante!!]{.fragment .highlight-red}\n\n\nEsto es muy importante!!\n\n\n\n\nOtro ejemplo:\n\nLos datos indican que [Quarto]{.fragment .highlight-green} mientras que [Rmarkdown]{.fragment .fade-in} va desapareciendo\n\nLos datos indican que Quarto crece mucho, mientras que Rmarkdown va desapareciendo"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-imágenes",
    "href": "slides/04_revealjs.html#revealjs-imágenes",
    "title": "Slides con Quarto",
    "section": "Revealjs: Imágenes",
    "text": "Revealjs: Imágenes\n\nPor defecto se alinean a la izquierda\n\n![](imagenes/perro_goya.jpg){fig-align=\"center\"}"
  },
  {
    "objectID": "slides/04_revealjs.html#imágenes-con-o-sin-stretch",
    "href": "slides/04_revealjs.html#imágenes-con-o-sin-stretch",
    "title": "Slides con Quarto",
    "section": "Imágenes: con o sin Stretch",
    "text": "Imágenes: con o sin Stretch\n\nPor defecto, Revealjs hace que las imágenes se ajusten al espacio vertical que queda en la slide.\n\n\n\nPuedes desactivar esta opción en el YAML y/o en slide o imagen concreta. Documentación aquí\n\n\n\n\nEn el YAML\n\nformat: \n  revealjs:\n    auto-stretch: false\n\n\nEn una slide o imagen concreta\n\n## Nueva slide {.nostretch}\n\n![](imagenes/imagen_ababol.jpg){.nostretch}"
  },
  {
    "objectID": "slides/04_revealjs.html#imágenes-stack-layout",
    "href": "slides/04_revealjs.html#imágenes-stack-layout",
    "title": "Slides con Quarto",
    "section": "Imágenes: Stack layout",
    "text": "Imágenes: Stack layout\n\n\n\n::: {.r-stack}\n![](imagenes/perro_blanco.jpg){.fragment width=\"350\"}\n\n![](imagenes/perro_goya.jpg){.fragment width=\"400\"}\n:::"
  },
  {
    "objectID": "slides/04_revealjs.html#imágenes-posición-absoluta",
    "href": "slides/04_revealjs.html#imágenes-posición-absoluta",
    "title": "Slides con Quarto",
    "section": "Imágenes: Posición absoluta",
    "text": "Imágenes: Posición absoluta\n![](imagenes/perro_goya.jpg){.absolute top=500 left=0 width=\"250\" height=\"100\"}\n\n![](imagenes/perro_blanco.jpg){.absolute top=50 right=50 height=\"250\"}\n\n![](imagenes/imagen_ababol.jpg){.absolute bottom=30 right=-100 width=\"300\" height=\"300\"}"
  },
  {
    "objectID": "slides/04_revealjs.html#chunks-code-line-highlighting",
    "href": "slides/04_revealjs.html#chunks-code-line-highlighting",
    "title": "Slides con Quarto",
    "section": "Chunks: code line-highlighting",
    "text": "Chunks: code line-highlighting\n\nPodemos hacer que se enfaticen ciertas lineas de los chunks. Para ello has de poner ciertas opciones dentro de los chunks:\n\n\n\n#| code-line-numbers: \"3\"\n\n\nlibrary(ggplot2)\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", formula = \"y~x\")\n\n\n\n\n\n#| code-line-numbers: \"|4\"\n\n\nlibrary(ggplot2)\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", formula = \"y~x\")\n\n\n\n\n\n\n#| code-line-numbers: \"|3|5|\"\n\n\nlibrary(ggplot2)\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", formula = \"y~x\")\n\n\n\nDocumentación oficial aquí. Un buen post sobre el tema, con otras opciones de sintáxis."
  },
  {
    "objectID": "slides/04_revealjs.html#chunks-output-location",
    "href": "slides/04_revealjs.html#chunks-output-location",
    "title": "Slides con Quarto",
    "section": "Chunks: Output location",
    "text": "Chunks: Output location\n\nLa opción: #| output-location: nos ayuda a colocar el código y los resultados side-by-side. Tiene los siguientes valores: {column-fragment, column, fragment, slide}\n\n\n\nLa opción que más me gusta es: #| output-location: column-fragment, porque coloca el chunk y el resultado side-by-side y los separa por una pausa. Documentación oficial aquí. Mine Çetinkaya-Rundel lo explica aquí\n\n\n\n```{r}\n#| output-location: column-fragment\nlibrary(ggplot2)\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", formula = \"y~x\")\n```"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-tunear-con-themes-1",
    "href": "slides/04_revealjs.html#revealjs-tunear-con-themes-1",
    "title": "Slides con Quarto",
    "section": "Revealjs: tunear con themes",
    "text": "Revealjs: tunear con themes\n\nPodemos cambiar la apariencia de las slides usando los themes.\nListado de themes aquí.\n\n\n\nPara ello tenemos que incluir en el YAML el theme que queremos:\n\n---\ntitle: \"Presentation\"\nformat:\n  revealjs: \n    theme: dark\n---\n\n\n\n\n\n\nHay extensiones para tunear\n\n\n\nAdemás disponemos de muchos otros themes en extensiones en la web de Quarto y en Awesome Quarto\nPor ejemplo: los themes 4 estaciones, Inversa, Insper, … Revealjs Earth theme impresiona."
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-ejemplos-de-presentaciones",
    "href": "slides/04_revealjs.html#revealjs-ejemplos-de-presentaciones",
    "title": "Slides con Quarto",
    "section": "Revealjs: Ejemplos de presentaciones",
    "text": "Revealjs: Ejemplos de presentaciones\n\n\n\nSome good practices for research with R de Etienne Bacher, el repo aquí\nDebugging de Shannon Pileggi, el repo aquí\nThe Genesis of Experimentation de Emi Tanaka, el repo aquí\nggdensity: Improved density visualization in R de James Otto y David Kahle, el repo aquí\nExtending ggplot2 with custom Geoms and Stats de James Otto, el repo aquí\nQuarto/RMarkdown - What’s Different?, de TED Laderas. Vídeo\nAn Antarctic Tour of the Tidyverse de Silvia Canelon, el repo aquí\nHello Quarto de Mine Çetinkaya-Rundel y Julia Stewart Lowndes, el repo aquí, más cosas\nReproducible authoring with Quarto de Mine Çetinkaya-Rundel, el repo aquí       [veamos ,un poco, estas slides]\nWhat can I do with Quarto? de Nicola Rennie, su web aquí\nReproducible Publications w/ Python and Quarto de Thomas Mock\nImprovements in text preprocessing using textrecipes de Emil Hvitfeldt\nThe Happiest Notebooks on Earth de Allison Hill\nQuarto Presentations by Quarto team, el repo aquí. Documentación oficial aquí\nIntro to Quarto de Isabella Velásquez, el repo aquí\nUn buen post sobre Revealjs slides de Meghan Hall\nData Science Portfolio with Quarto de Deepsha Menghani, el repo aquí. Vídeo aquí\n05 - Presentations Making Slides with Code y 02 - Authoring Quarto de Thomas Mock. Slides que pertenecen al siguiente taller Get started with Quarto\nCreating your data science portfolio, de Nicola Rennie. Sus talks aquí, el repo aquí"
  },
  {
    "objectID": "slides/04_revealjs.html#tunear-con-css-ejemplo-1-fenced-divs-sacado-de-aquí",
    "href": "slides/04_revealjs.html#tunear-con-css-ejemplo-1-fenced-divs-sacado-de-aquí",
    "title": "Slides con Quarto",
    "section": "Tunear con CSS: ejemplo 1 (fenced divs), sacado de aquí",
    "text": "Tunear con CSS: ejemplo 1 (fenced divs), sacado de aquí\n\n1) Si incluyes este trozo de CSS, que define la clase “.big-text” en un archivo .css o .scss\n  .big-text {\n  font-size: 88px;\n   }\n\n\n2) y lo referencias en el yaml de las slides con\n     - theme: [default, assets/my_styles.scss]     o con\n\n\n     - css: assets/my_styles.css\n\n\n3) Entonces, puedes usar el siguiente fenced div con clase “.big-text”:\n::: {.big-text}\n    Un párrafo con el texto muy grande\n:::\n\n\n   Para conseguir que lo que escribas dentro del fenced div se vea muy grande, tal como ves abajo:\n\nUn párrafo con el texto muy grande"
  },
  {
    "objectID": "slides/04_revealjs.html#tunear-con-css-ejemplo-2-spans",
    "href": "slides/04_revealjs.html#tunear-con-css-ejemplo-2-spans",
    "title": "Slides con Quarto",
    "section": "Tunear con CSS: ejemplo 2 (spans)",
    "text": "Tunear con CSS: ejemplo 2 (spans)\n\nEjemplo 2 (sacado de aquí)\nPara tunear un elemento dentro de una frase tenemos que usar spans\n\n\n\n\nLa sintaxis es: [span]{.class}\n\n\n\n\n\nDe forma que,\n\nsi escribes esto: Esta mañana ha llovido [mucho]{.big-text}\n\n\n\n\n\nverás esto: Esta mañana ha llovido mucho"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-trucos-para-usar-durante-una-presentación",
    "href": "slides/04_revealjs.html#revealjs-trucos-para-usar-durante-una-presentación",
    "title": "Slides con Quarto",
    "section": "Revealjs: Trucos para usar durante una presentación",
    "text": "Revealjs: Trucos para usar durante una presentación\n\nPor ejemplo:\n\n\nTenemos el “hamburger menu” para movernos por las slides\n\n\n\n\nPodemos hacer ZOOM en cualquier elemento o trozo de las slides. Solo hay que mantener presionada la tecla ALTALT y clickar en el ratón. En Linux es la tecla CTRLCTRL\n\n\n\n\nOO: permite hacer una overview de las slides. Para moverte por las slides en modo overview “usa las flechitas”\n\n\n\n\nFF: slides a pantalla completa\n\n\n\n\nCTRL-SHIFT-FCTRL-SHIFT-F : permite buscar palabras dentro de las slides. Dando a ENTERENTER avanzas a la siguiente coincidencia. Además, Si lo haces mientras las slides están en overview te marcará todas las coincidencias"
  },
  {
    "objectID": "slides/04_revealjs.html#revealjs-extras",
    "href": "slides/04_revealjs.html#revealjs-extras",
    "title": "Slides con Quarto",
    "section": "Revealjs: EXTRAS",
    "text": "Revealjs: EXTRAS\nDocumentación aquí y aquí\n\nNavigation menu\nChalkboard\nMultiplex\nSpeaker view\nRevealjs Plugins. Por ejemplo fullscreen"
  },
  {
    "objectID": "slides/04_revealjs.html#beamer-slides-1",
    "href": "slides/04_revealjs.html#beamer-slides-1",
    "title": "Slides con Quarto",
    "section": "Beamer slides",
    "text": "Beamer slides\n\nBeamer es un formato de slides, basadas en Latex, muy popular en el mundo académico\n\n\n\nQuarto puede hacer Beamer slides. Sólo hay que usar los menús o este yaml:\n\n---\ntitle: \"My Presentation\"\nformat: beamer\n---\n\n\n\n\nLa apariencia visual de las slides vendrá determinada por el theme y el colortheme. Aquí y aquí tienes ayuda para elegirlos. Por ejemplo:\n\n---\ntitle: \"Presentation\"\nformat: \n  beamer: \n    aspectratio: 32\n    navigation: horizontal\n    theme: metropolis\n    colortheme: lily\n---"
  },
  {
    "objectID": "slides/04_revealjs.html#beamer-slides-documentación",
    "href": "slides/04_revealjs.html#beamer-slides-documentación",
    "title": "Slides con Quarto",
    "section": "Beamer slides (documentación)",
    "text": "Beamer slides (documentación)\n\n\n\nUser Guide oficial de Beamer\nDocumentación oficial Beamer de Quarto aquí\nOpciones de YAMl de Beamer en Quarto aquí\nBeamer en RMD\nBeamer en StackOverflow. Por ejemplo:\n\nNumeración de las slides como en Revealjs\nJustificar texto"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#estructura-del-taller",
    "href": "slides/05_primer_web_skim.html#estructura-del-taller",
    "title": "Webs/blogs con Quarto",
    "section": "Estructura del … “taller”",
    "text": "Estructura del … “taller”\n\n\nPrimeras ideas, visionado de blogs (✅)\nCreación de un blog básico: mi blog en 3 minutos (✅)\n\n\n\nTuneado básico del blog.\nConvirtiendo el blog en una web personal\n\n\n\nWorkflow: creando posts\nEscribiendo un post con Quarto (⚡ ⏳)\n\n\n\nTuneado: mejorando la web\n\n\n\n\nGestión y publicación de la web/blog"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#archivo-_quarto.yml",
    "href": "slides/05_primer_web_skim.html#archivo-_quarto.yml",
    "title": "Webs/blogs con Quarto",
    "section": "Archivo _quarto.yml",
    "text": "Archivo _quarto.yml\n\n\n\n\n\n\nContenido original de _quarto.yml\n\n\n\n\n\n\n\nAsí dejaremos el fichero _quarto.yml"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#section",
    "href": "slides/05_primer_web_skim.html#section",
    "title": "Webs/blogs con Quarto",
    "section": "",
    "text": "Tarea 2.1: Modificar el contenido de _quarto.yml\n\n\n\nSustituye el contenido original del fichero _quarto.yml por el contenido del siguiente chunk.\nPon un título que te guste a tu blog (línea 5 title: \"titulo-de-mi-blog\")\nPon tu usuario de Github y cuenta de Twitter (lineas 12 y 14: href:)\nPon tu email (línea 16: href:)\n\nproject:\n  type: website\n\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  navbar:\n    logo: \"profile.jpg\"\n    right:\n      - text: \"About me\"\n        href: about.qmd\n      - icon: github\n        href: https://github.com/&lt;tu-usuario-github&gt;\n      - icon: twitter\n        href: https://twitter.com/&lt;tu-usuario-twitter&gt;\n      - icon: envelope\n        url: \"mailto:&lt;tu-mail@uv.es&gt;\"\n    left: \n      - text: \"Docencia\"\n        href: docencia.qmd\n \nformat:\n  html:\n    theme: flatly  \n    css: styles.css\n    toc: true\n    highlight-style: a11y\n\n\n\nAdemás:\n\nlineas 17-19: añadimos la página/pestaña “Docencia” a la izquierda de la navbar, pero estamos referenciando una archivo que aún no existe, el archivo docencia.qmd\n\nlineas 21-26: modificamos el theme, ponemos TOC a los documentos, …, CSS,"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#archivo-index.qmd",
    "href": "slides/05_primer_web_skim.html#archivo-index.qmd",
    "title": "Webs/blogs con Quarto",
    "section": "Archivo index.qmd",
    "text": "Archivo index.qmd\n\n\n\n\n\n\nContenido original de index.qmd\n\n\n\n\n\n\n\nAsí dejaremos el fichero index.qmd\n\n\n\n\n\n\nDe momento, solo vamos a hacer cambios en la segunda linea: cambiaremos el título.\nFíjate que es el título del listado de posts (del blog), no de la página web.\nFijaros que index.qmd es un archivo especial: “sólo tiene yaml”. Es el que genera el listado de posts: es una “listing page”"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#archivo-about.qmd",
    "href": "slides/05_primer_web_skim.html#archivo-about.qmd",
    "title": "Webs/blogs con Quarto",
    "section": "Archivo about.qmd",
    "text": "Archivo about.qmd\n\n\n\n\n\n\nContenido original de about.qmd\n\n\n\n\n\n\n\nAsí dejaremos el fichero about.qmd\n\n\n\n\n\n\nSi en el yaml se activa la opción about: (linea 4), entonces puedes usar unas plantillas que Quarto tiene disponibles para crear About’s pages.\nComo puedes ver aquí hay 5 plantillas: jolla, trestles, solana, marquee y broadside.\nAquí tienes la documentación oficial sobre estas plantillas."
  },
  {
    "objectID": "slides/05_primer_web_skim.html#archivo-styles.css",
    "href": "slides/05_primer_web_skim.html#archivo-styles.css",
    "title": "Webs/blogs con Quarto",
    "section": "Archivo styles.css",
    "text": "Archivo styles.css\n\nPuedes cambiar la apariencia estética del blog usando los themes predefinidos en Quarto o puedes usar el archivo styles.css1\n\n\n\n\nTarea 2.7: Modificar styles.css\n\n\n\nSimplemente sustituye el contenido original del fichero styles.css por el contenido del siguiente chunk:\n\n/* css styles */\n\n\n/* justificar el texto */ \np, ul, ol {\n  text-align: justify; }       \n\n\n\n\nVeremos en el tutorial nº 6 que también podremos usar archivos .scss"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#práctica-tutorial-nº-2",
    "href": "slides/05_primer_web_skim.html#práctica-tutorial-nº-2",
    "title": "Webs/blogs con Quarto",
    "section": "Práctica (tutorial nº 2)",
    "text": "Práctica (tutorial nº 2)\nEn esta sección dedicaremos un tiempo a la práctica libre para que adaptes el blog a tus necesidades y gustos. Por ejemplo puedes probar:\n\n\nAñadir una nueva página a la web (_quarto.yml). Os doy una posibilidad en la siguiente slide\n\n\n\nModificar la apariencia del blog (realmente del listado de posts) jugando con las opciones que nos proporciona Quarto (index.qmd). Gracias YAML inteligence!!\n\n\n\nModificar la apariencia de la página About (about.qmd)"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#donde-están-los-posts-del-blog",
    "href": "slides/05_primer_web_skim.html#donde-están-los-posts-del-blog",
    "title": "Webs/blogs con Quarto",
    "section": "¿Donde están los posts del blog?",
    "text": "¿Donde están los posts del blog?\n\nLos ficheros .qmd que generan los posts están en la carpeta posts (de nuestro Qproject que genera el blog).\nCada post está en una carpeta diferente1:\n\n\n\n\n\n\n\n\n\n\n\n\n\nVeamos (en la siguiente slide) el contenido de ./posts/welcome/\n\nNo es necesario que los posts estén cada uno en una carpeta, pero puede ser una buena práctica."
  },
  {
    "objectID": "slides/05_primer_web_skim.html#contenido-de-cada-subcarpeta-de-.posts",
    "href": "slides/05_primer_web_skim.html#contenido-de-cada-subcarpeta-de-.posts",
    "title": "Webs/blogs con Quarto",
    "section": "Contenido de cada subcarpeta de ./posts/",
    "text": "Contenido de cada subcarpeta de ./posts/\n\n\nPor ejemplo de ./posts/welcome/\n\n\n\n\n\n\n\nContenido de la carpeta welcome que genera el post titulado “Welcome to my blog”\n\n\n\n\n\n\n\nContenido del archivo index.qmd"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#section-1",
    "href": "slides/05_primer_web_skim.html#section-1",
    "title": "Webs/blogs con Quarto",
    "section": "",
    "text": "Advertencia\n\n\n\nVoy a suponer que los asistentes al taller, y posibles lectores de estos tutoriales, conocen Rmarkdown\nEl paso de .Rmd a .qmd es sencillo.\nEn cualquier caso, aquí tienes unas FAQ’s para usuarios de .Rmd que se preguntan si pasarse a Quarto, y aquí unas slides sobre las diferencias entre .qmd y .Rmd.\nAquí y aquí slides sobre cómo convertir ficheros .Rmd a .qmd\nAquellos que no sepan qué es Rmarkdown pueden empezar por aquí o aquí.\n\n\n\n\n\n\n\n\nEn realidad la advertencia no aplica a los asistentes al “curso de intro a Quarto”\n\n\n\nLógicamente, a los asistentes al curso no os hace falta conocer Rmarkdown, porque ya estáis aprendiendo Quarto, la segunda generación de .Rmd\nYa vimos con las Slides 03: Aprendiendo a escribir en QMD cómo escribir con .qmd"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#ficheros-.qmd",
    "href": "slides/05_primer_web_skim.html#ficheros-.qmd",
    "title": "Webs/blogs con Quarto",
    "section": "Ficheros .qmd",
    "text": "Ficheros .qmd\n\nLos ficheros .qmd tienen 3 partes: YAML, texto y chunks de código.\n\n\n\n\n\n\n\n\n\n\n\n\n\nVeámoslas una a una"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#yaml-ideas-importantes",
    "href": "slides/05_primer_web_skim.html#yaml-ideas-importantes",
    "title": "Webs/blogs con Quarto",
    "section": "YAML: ideas importantes",
    "text": "YAML: ideas importantes\n\n\nEl encabezamiento o YAML sirve para fijar opciones y metadatos de nuestro documento.\n\n\n\nEl YAML será procesado varias veces durante el procesado del documento: es leído por Quarto, knitr y Pandoc e influirá en el output final.\n\n\n\nEl hecho de estar trabajando dentro de un Qproject nos da mucha versatilidad a la hora de especificar el YAML de nuestros documentos .qmd. Documentación oficial aquí"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#el-yaml-de-un-post-se-puede-especificar-en-3-niveles",
    "href": "slides/05_primer_web_skim.html#el-yaml-de-un-post-se-puede-especificar-en-3-niveles",
    "title": "Webs/blogs con Quarto",
    "section": "El yaml de un post se puede especificar en 3 niveles",
    "text": "El yaml de un post se puede especificar en 3 niveles\n\n\nNivel proyecto: todo Qproject tiene archivo _quarto.yml. Todo documento que se procese dentro del proyecto, heredará los metadatos definidos en _quarto.yml.\n\n\n\n\nNivel carpeta: si en una carpeta existe un documento _metadata.yml, los documentos de esa carpeta heredan sus metadatos. La carpeta ./posts/ de un blog suele tener un archivo _metadata.yml.\n\n\n\n\nNivel documento: en el yaml del propio documento .qmd\n\n\n\n\n\nSi hay conflictos prevalecen las opciones del nivel documento, luego nivel carpeta y finalmente nivel proyecto.\nDocumentación oficial de Quarto con las principales opciones que se pueden fijar en el YAML para documentos html: aquí y aquí"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#yaml-tal-como-lo-tenemos-ahora",
    "href": "slides/05_primer_web_skim.html#yaml-tal-como-lo-tenemos-ahora",
    "title": "Webs/blogs con Quarto",
    "section": "YAML: tal como lo tenemos ahora",
    "text": "YAML: tal como lo tenemos ahora\n\n1. nivel proyecto (_quarto.yml)2. nivel carpeta (_metadata.yml)3. nivel documento (index.qmd)\n\n\nAbajo el contenido del fichero _quarto.yml tal y como lo tenemos ahora en nuestro blog. Solo he añadido 3 comentarios para diferenciar entre secciones:\n\n\n\n\n\n\n\nAbajo el, contenido del fichero ./posts/_metadata.yml. Afectará a todos los ficheros .qmd que haya en la carpeta ./posts/"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#yaml-nivel-proyecto-opciones-en-_quarto.yml",
    "href": "slides/05_primer_web_skim.html#yaml-nivel-proyecto-opciones-en-_quarto.yml",
    "title": "Webs/blogs con Quarto",
    "section": "YAML: NIVEL PROYECTO (opciones en _quarto.yml)",
    "text": "YAML: NIVEL PROYECTO (opciones en _quarto.yml)\nEn _quarto.yml se suelen poner opciones referentes a 3 aspectos:\n\n1. Sobre el propio Qproject2. Estructura de la página web3. Formato de salida de los documentos\n\n\n\n# 1/ Opciones referentes al proyecto ----------------------------\nproject:\n  type: website\n  output-dir: docs    #- podemos cambiar la carpeta donde se redirige el output (.html)\n  # execute-dir: project    #- cambiar el render directory: https://quarto.org/docs/projects/code-execution.html#working-dir\n\n\n\nlinea 4: podemos elegir la carpeta de destino de nuestro blog\nlinea 5: podemos cambiar el render directory de los .qmd\n\n\nDocumentación oficial aquí.\n\n\n\n#- 2/ Opciones referentes a la estructura de la web -----------------\nwebsite:\n  title: \"Mi blog (aún en pruebas)\"\n  favicon: profile.jpg\n  #site-url: https://....\n  #repo-url: https://....\n  open-graph: true #-https://quarto.org/docs/websites/website-tools.html#twitter-cards\n  twitter-card:\n    creator: \"@tu-usuario-twitter\"\n    card-style: summary_large_image\n  navbar:\n    logo: \"profile.jpg\"\n    #background: primary    #- pink\n    right:\n      - text: \"About me\"\n        href: about.qmd\n      - icon: github\n        href: https://github.com/&lt;tu-usuario-github&gt;\n      - icon: twitter\n        href: https://twitter.com/&lt;tu-usuario-twitter&gt;\n      - icon: envelope\n        url: \"mailto:&lt;tu-mail@uv.es&gt;\"\n    left: \n      - icon: house-door\n        href: index.html\n      - text: \"Docencia\"\n        href: docencia.qmd\n  page-footer:\n    left: \"© 2022 Pedro J. Pérez\"\n    center: \"Hecho con [Quarto](https://quarto.org)\"\n    right:\n      - icon: github\n        href: https://github.com/&lt;tu-usuario-github&gt;\n      - icon: twitter\n        href: https://twitter.com/&lt;tu-usuario-twitter&gt;\n      - icon: envelope\n        url: \"mailto:&lt;tu-mail&gt;@uv.es\"\n\n\nComo ves, se añadirían elementos como:\n\nlineas 28 a 37: se añade un pie de página al blog\nlineas 24 y 25: Hemos añadido un elemento a la navbar concretamente el icono Home. La documentación oficial para elementos de navegación está aquí\nlinea 4: añadimos un favicon\nlineas 5 y 6: el url de la web y del repo en Github\nlineas 7-10: elementos de redes sociales. La documentación oficial para estos elementos esta aquí\n\n\n\n\n\n#- 3/ Opciones referentes al formato de salida  ---------------------\nformat:\n  html:\n    theme: flatly  \n    css: styles.css\n    toc: true\n    highlight-style: a11y\n\n\nEn un blog/web el formato de salida es siempre .html; sin embargo podemos especificar otras opciones como por ejemplo sí los documentos (o páginas de la web, o post del blog) tienen un índice flotante, etc… Documentación oficial aquí y aquí"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#un-ejemplo-completito-de-_quarto.yml",
    "href": "slides/05_primer_web_skim.html#un-ejemplo-completito-de-_quarto.yml",
    "title": "Webs/blogs con Quarto",
    "section": "Un ejemplo “completito” de _quarto.yml",
    "text": "Un ejemplo “completito” de _quarto.yml\nSi quieres ver un documento _quarto.yml completito, ve aquí. Pertenece a la web de Quarto.\n\n\n\n\n\n\nproject:\n  type: website\n  output-dir: _site\n  resources:\n    - \"/docs/download/_download.json\"\n    - \"/docs/download/_prerelease.json\"\n    - \"/_redirects\"\n\nwebsite:\n  title: \"Quarto\"\n  image: \"quarto.png\"\n  favicon: \"favicon.png\"\n  google-analytics: \"G-FV9Z7SDZ0M\"\n  open-graph: true\n  twitter-card: true\n  site-url: https://quarto.org\n  repo-url: https://github.com/quarto-dev/quarto-web\n  repo-actions: [edit, issue]\n  page-navigation: true\n  search:\n    algolia:\n      index-name: prod_QUARTO\n      application-id: ZPJB5I1QN7\n      search-only-api-key: 41be6c1e0a7fea4a51b107810facf577\n      analytics-events: true\n      show-logo: true\n  page-footer:\n    left: |\n      Proudly supported by\n      [![](https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-flat.svg){fig-alt=\"RStudio\" width=65px}](https://www.rstudio.com)\n    center:\n      - text: \"About\"\n        href: about.qmd\n      - text: \"FAQ\"\n        href: docs/faq/index.qmd\n      - text: \"License\"\n        href: license.qmd\n      - text: \"Trademark\"\n        href: trademark.qmd\n    right:\n      - icon: twitter\n        href: https://twitter.com/quarto_pub\n        aria-label: Quarto Twitter\n      - icon: github\n        href: https://github.com/quarto-dev/quarto-cli\n        aria-label: Quarto GitHub\n  navbar:\n    background: light\n    logo: quarto.png\n    logo-alt: \"Quarto logo.\"\n    title: false\n    collapse-below: lg\n    left:\n      - text: \"Overview\"\n        href: index.qmd\n      - text: \"Get Started\"\n        href: docs/get-started/index.qmd\n      - text: \"Guide\"\n        href: docs/guide/index.qmd\n      - text: Extensions\n        href: docs/extensions/index.qmd\n      - text: \"Reference\"\n        href: docs/reference/index.qmd\n      - text: \"Gallery\"\n        href: docs/gallery/index.qmd\n      - text: \"Blog\"\n        href: docs/blog/index.qmd\n      - text: \"Help\"\n        menu:\n          - text: \"Report a Bug\"\n            icon: \"bug\"\n            href: \"https://github.com/quarto-dev/quarto-cli/issues\"\n          - text: \"Ask a Question\"\n            icon: \"chat-right-text\"\n            href: \"https://github.com/quarto-dev/quarto-cli/discussions\"\n          - text: \"FAQ\"\n            icon: \"question-circle\"\n            href: docs/faq/index.qmd\n    right:\n      - icon: twitter\n        href: https://twitter.com/quarto_pub\n        aria-label: Quarto Twitter\n      - icon: github\n        href: https://github.com/quarto-dev/quarto-cli\n        aria-label: Quarto GitHub\n\n  sidebar:\n    - id: get-started\n      title: \"Get Started\"\n      style: \"floating\"\n      collapse-level: 2\n      align: left\n      contents:\n        - docs/get-started/index.qmd\n        - text: \"Tutorial: Hello, Quarto\"\n          href: docs/get-started/hello/\n        - text: \"Tutorial: Computations\"\n          href: docs/get-started/computations/\n        - text: \"Tutorial: Authoring\"\n          href: docs/get-started/authoring/\n\n    - id: guide\n      collapse-level: 1\n      contents:\n        - text: \"Guide\"\n          href: docs/guide/index.qmd\n        - section: \"Authoring\"\n          contents:\n            - docs/authoring/markdown-basics.qmd\n            - docs/authoring/figures.qmd\n            - docs/authoring/tables.qmd\n            - docs/authoring/diagrams.qmd\n            - docs/authoring/videos.qmd\n            - docs/authoring/callouts.qmd\n            - docs/authoring/article-layout.qmd\n            - section: \"Scholarly Writing\"\n              contents:\n                - docs/authoring/title-blocks.qmd\n                - docs/authoring/footnotes-and-citations.qmd\n                - docs/authoring/cross-references.qmd\n                - docs/authoring/create-citeable-articles.qmd\n                - docs/authoring/appendices.qmd\n        - section: \"Computations\"\n          contents:\n            - docs/computations/python.qmd\n            - docs/computations/r.qmd\n            - docs/computations/julia.qmd\n            - docs/computations/ojs.qmd\n            - docs/computations/execution-options.qmd\n            - docs/computations/parameters.qmd\n        - section: \"Tools\"\n          contents:\n            - docs/tools/jupyter-lab.qmd\n            - docs/tools/rstudio.qmd\n            - docs/tools/vscode.qmd\n            - docs/tools/text-editors.qmd\n            - section: \"Visual Editor\"\n              contents:\n                - text: Editor Basics\n                  href: docs/visual-editor/index.qmd\n                - docs/visual-editor/technical.qmd\n                - docs/visual-editor/content.qmd\n                - docs/visual-editor/options.qmd\n                - docs/visual-editor/markdown.qmd\n        - section: \"Documents\"\n          contents:\n            - section: \"HTML\"\n              contents:\n                - docs/output-formats/html-basics.qmd\n                - docs/output-formats/html-code.qmd\n                - docs/output-formats/html-themes.qmd\n                - docs/output-formats/html-publishing.qmd\n            - section: \"PDF\"\n              contents:\n                - docs/output-formats/pdf-basics.qmd\n                - docs/output-formats/pdf-engine.qmd\n            - section: \"MS Word\"\n              contents:\n                - docs/output-formats/ms-word.qmd\n                - docs/output-formats/ms-word-templates.qmd\n            - section: \"Markdown\"\n              contents:\n                - docs/output-formats/gfm.qmd\n                - docs/output-formats/hugo.qmd\n                - docs/output-formats/docusaurus.qmd\n            - docs/output-formats/all-formats.qmd\n        - section: \"Presentations\"\n          contents:\n            - text: \"Overview\"\n              href: docs/presentations/index.qmd\n            - section: docs/presentations/revealjs/index.qmd\n              contents:\n                - text: \"Reveal Basics\"\n                  href: docs/presentations/revealjs/index.qmd\n                - docs/presentations/revealjs/presenting.qmd\n                - docs/presentations/revealjs/advanced.qmd\n                - docs/presentations/revealjs/themes.qmd\n            - docs/presentations/powerpoint.qmd\n            - docs/presentations/beamer.qmd\n        - section: \"Websites\"\n          href: docs/websites/website-basics.qmd\n          contents:\n            - docs/websites/website-basics.qmd\n            - docs/websites/website-navigation.qmd\n            - docs/websites/website-blog.qmd\n            - docs/websites/website-search.qmd\n            - docs/websites/website-tools.qmd\n            - docs/websites/website-about.qmd\n            - section: \"Listing Pages\"\n              href: docs/websites/website-listings.qmd\n              contents:\n                - docs/websites/website-listings.qmd\n                - docs/websites/website-listings-custom.qmd\n        - section: \"Books\"\n          href: docs/books/book-basics.qmd\n          contents:\n            - docs/books/book-basics.qmd\n            - docs/books/book-structure.qmd\n            - docs/books/book-crossrefs.qmd\n            - text: \"Customizing Output\"\n              href: docs/books/book-output.qmd\n        - section: \"Interactivity\"\n          contents:\n            - text: \"Overview\"\n              href: docs/interactive/index.qmd\n            - section: docs/interactive/ojs/index.qmd\n              contents:\n                - text: \"Introduction\"\n                  href: docs/interactive/ojs/index.qmd\n                - docs/interactive/ojs/libraries.qmd\n                - docs/interactive/ojs/data-sources.qmd\n                - docs/interactive/ojs/ojs-cells.qmd\n                - docs/interactive/ojs/shiny.qmd\n                - docs/interactive/ojs/code-reuse.qmd\n                - section: \"Examples\"\n                  contents:\n                    - docs/interactive/ojs/examples/penguins.qmd\n                    - docs/interactive/ojs/examples/sunburst.qmd\n                    - docs/interactive/ojs/examples/arquero.qmd\n                    - docs/interactive/ojs/examples/population.qmd\n                    - docs/interactive/ojs/examples/noaa-co2.qmd\n                    - docs/interactive/ojs/examples/github.qmd\n                    - docs/interactive/ojs/examples/layout.qmd\n                    - section: \"Shiny\"\n                      contents:\n                        - text: \"K-Means\"\n                          href: https://jjallaire.shinyapps.io/kmeans-shiny-ojs/\n                        - text: \"Binning\"\n                          href: https://jjallaire.shinyapps.io/binning-shiny-ojs/\n                        - text: \"Data Binding\"\n                          href: https://jjallaire.shinyapps.io/data-shiny-ojs/\n                        - text: \"Covid Map\"\n                          href: https://jjallaire.shinyapps.io/covid19-bicartogram/\n            - section: docs/interactive/shiny/index.qmd\n              contents:\n                - text: \"Introduction\"\n                  href: docs/interactive/shiny/index.qmd\n                - docs/interactive/shiny/running.qmd\n                - docs/interactive/shiny/execution.qmd\n                - docs/interactive/shiny/resources.qmd\n                - section: \"Examples\"\n                  contents:\n                    - text: \"Old Faithful\"\n                      href: https://jjallaire.shinyapps.io/shiny-old-faithful/\n                    - text: \"K-Means\"\n                      href: https://jjallaire.shinyapps.io/shiny-k-means/\n                    - text: \"Diamonds\"\n                      href: https://jjallaire.shinyapps.io/shiny-diamonds/\n            - section: \"Widgets\"\n              contents:\n                - docs/interactive/widgets/jupyter.qmd\n                - docs/interactive/widgets/htmlwidgets.qmd\n            - docs/interactive/layout.qmd\n        - section: \"Publishing\"\n          contents:\n            - docs/publishing/index.qmd\n            - docs/publishing/quarto-pub.qmd\n            - docs/publishing/github-pages.qmd\n            - docs/publishing/rstudio-connect.qmd\n            - docs/publishing/netlify.qmd\n            - docs/publishing/other.qmd\n            - text: \"Publishing with CI\"\n              href: docs/publishing/ci.qmd\n        - section: \"Projects\"\n          contents:\n            - docs/projects/quarto-projects.qmd\n            - docs/projects/code-execution.qmd\n            - docs/projects/profiles.qmd\n            - docs/projects/environment.qmd\n            - docs/projects/scripts.qmd\n            - docs/projects/virtual-environments.qmd\n        - section: \"Advanced\"\n          contents:\n            - docs/authoring/includes.qmd\n            - docs/authoring/variables.qmd\n            - docs/output-formats/page-layout.qmd\n            - docs/authoring/language.qmd\n            - docs/authoring/conditional.qmd\n            - docs/extensions/nbfilter.qmd\n    - id: extensions\n      title: \"Extensions\"\n      contents:\n        - \"---\"\n        - section: docs/extensions/index.qmd\n          contents: \n            - text: \"Shortcodes & Filters\"\n              href: docs/extensions/listing-filters.qmd\n            - text: \"Journal Articles\"\n              href: docs/extensions/listing-journals.qmd\n            - text: \"Custom Formats\"\n              href: docs/extensions/listing-formats.qmd\n            - text: \"Revealjs Extensions\"\n              href: docs/extensions/listing-revealjs.qmd\n            - docs/extensions/managing.qmd\n        - \"---\"\n        - section: docs/extensions/creating.qmd\n          contents:\n            - text: \"Overview\"\n              href: docs/extensions/creating.qmd\n            - docs/extensions/lua.qmd\n            - docs/extensions/lua-api.qmd\n            - text: \"Distribution\"\n              href: docs/extensions/distributing.qmd\n            - \"---\"\n            - text: \"Shortcodes\"\n              href: docs/extensions/shortcodes.qmd\n            - text: \"Filters\"\n              href: docs/extensions/filters.qmd\n            - section: \"Journal Articles\"\n              href: docs/journals/formats.qmd\n              contents:\n                - docs/journals/formats.qmd\n                - docs/journals/templates.qmd\n                - docs/journals/authors.qmd\n            - docs/extensions/formats.qmd\n            - docs/extensions/revealjs.qmd\n            - docs/extensions/project-types.qmd\n            - docs/extensions/starter-templates.qmd\n\n    - id: reference\n      title: \"Reference\"\n      contents:\n        - text: \"Reference\"\n          href: docs/reference/index.qmd\n        - section: \"Formats\"\n          contents:\n            - text: \"HTML\"\n              href: docs/reference/formats/html.qmd\n            - text: \"PDF\"\n              href: docs/reference/formats/pdf.qmd\n            - text: \"MS Word\"\n              href: docs/reference/formats/docx.qmd\n            - text: \"OpenOffice\"\n              href: docs/reference/formats/odt.qmd\n            - text: \"ePub\"\n              href: docs/reference/formats/epub.qmd\n            - section: \"Presentations\"\n              contents:\n                - text: \"Revealjs\"\n                  href: docs/reference/formats/presentations/revealjs.qmd\n                - text: \"PowerPoint\"\n                  href: docs/reference/formats/presentations/pptx.qmd\n                - text: \"Beamer\"\n                  href: docs/reference/formats/presentations/beamer.qmd\n            - section: \"Markdown\"\n              contents:\n                - text: \"GitHub\"\n                  href: docs/reference/formats/markdown/gfm.qmd\n                - text: \"CommonMark\"\n                  href: docs/reference/formats/markdown/commonmark.qmd\n                - text: \"Markua\"\n                  href: docs/reference/formats/markdown/markua.qmd\n            - section: \"Wikis\"\n              contents:\n                - text: \"MediaWiki\"\n                  href: docs/reference/formats/wiki/mediawiki.qmd\n                - text: \"DokuWiki\"\n                  href: docs/reference/formats/wiki/dokuwiki.qmd\n                - text: \"ZimWiki\"\n                  href: docs/reference/formats/wiki/zimwiki.qmd\n                - text: \"Jira Wiki\"\n                  href: docs/reference/formats/wiki/jira.qmd\n                - text: \"XWiki\"\n                  href: docs/reference/formats/wiki/xwiki.qmd\n            - section: \"More Formats\"\n              contents:\n                - text: \"JATS\"\n                  href: docs/reference/formats/jats.qmd\n                - text: \"Jupyter\"\n                  href: docs/reference/formats/ipynb.qmd\n                - text: \"ConTeXt\"\n                  href: docs/reference/formats/context.qmd\n                - text: \"RTF\"\n                  href: docs/reference/formats/rtf.qmd\n                - text: \"reST\"\n                  href: docs/reference/formats/rst.qmd\n                - text: \"AsciiDoc\"\n                  href: docs/reference/formats/asciidoc.qmd\n                - text: \"Org-Mode\"\n                  href: docs/reference/formats/org.qmd\n                - text: \"Muse\"\n                  href: docs/reference/formats/muse.qmd\n                - text: \"GNU TexInfo\"\n                  href: docs/reference/formats/texinfo.qmd\n                - text: \"Groff Man Page\"\n                  href: docs/reference/formats/man.qmd\n                - text: \"Groff Manuscript\"\n                  href: docs/reference/formats/ms.qmd\n                - text: \"Haddock markup\"\n                  href: docs/reference/formats/haddock.qmd\n                - text: \"OPML\"\n                  href: docs/reference/formats/opml.qmd\n                - text: \"Textile\"\n                  href: docs/reference/formats/textile.qmd\n                - text: \"DocBook\"\n                  href: docs/reference/formats/docbook.qmd\n                - text: \"InDesign\"\n                  href: docs/reference/formats/icml.qmd\n                - text: \"TEI Simple\"\n                  href: docs/reference/formats/tei.qmd\n                - text: \"FictionBook\"\n                  href: docs/reference/formats/fb2.qmd\n        - section: \"Code Cells\"\n          contents:\n            - text: \"Jupyter\"\n              href: docs/reference/cells/cells-jupyter.qmd\n            - text: \"Knitr\"\n              href: docs/reference/cells/cells-knitr.qmd\n            - text: \"Observable\"\n              href: docs/reference/cells/cells-ojs.qmd\n        - section: \"Projects\"\n          contents:\n            - text: \"Options\"\n              href: docs/reference/projects/options.qmd\n            - text: \"Websites\"\n              href: docs/reference/projects/websites.qmd\n            - text: \"Books\"\n              href: docs/reference/projects/books.qmd\n        - section: \"More\"\n          contents:\n            - text: \"Dates\"\n              href: docs/reference/dates.qmd\n            - text: \"Globs\"\n              href: docs/reference/globs.qmd\n            - text: \"Citations\"\n              href: docs/reference/metadata/citation.qmd\n\nbibliography: references.bib\n\nformat:\n  html:\n    toc: true\n    theme:\n      light: [cosmo, theme.scss]\n    code-copy: true\n    code-overflow: wrap\n    css: styles.css\n    include-after-body: js.html\n\nfilters:\n  - filters/tools-tabset.lua\n\n\nfreeze: true\n\neditor: visual\n\nprofile:\n  group: \n    - [rc, prerelease]"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#layout-general",
    "href": "slides/05_primer_web_skim.html#layout-general",
    "title": "Webs/blogs con Quarto",
    "section": "Layout   (“general”)",
    "text": "Layout   (“general”)\n\nAdemás de yaml, texto y chunk, para escribir con Quarto conviene conocer la estructura o layout de las páginas web que generamos con Quarto. Documentación aquí y aquí.\n\n\n\nNuestra páginas web tienen 2 zonas si la miramos en horizontal: la sidebar y la zona reservada para el artículo. Puedes verlo aquí\n\nA su vez, la zona del artículo se divide en 2: body y margin.\n\n\n\n\n\nA partir de la versión 1.3 de Quarto, se puede controlar estos componentes del layout. Puedes verlo aquí\n\n\n\n\nAdemás, el layout puede venir afectado por la opción page-layout: full que tiene 3 opciones: article, full y custom"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#layouts-para-secciones-específicas",
    "href": "slides/05_primer_web_skim.html#layouts-para-secciones-específicas",
    "title": "Webs/blogs con Quarto",
    "section": "Layout’s   (“para secciones específicas”)",
    "text": "Layout’s   (“para secciones específicas”)\n\n⚠️ Importante!!\n\n\nUsando fenced-divs se puede hacer que alguna sección de nuestra página ocupe un espacio mayor al habitual; es decir, mayor al espacio habitualmente reservado para el “body”.\n\n\n\nDe esta forma podemos hacer que, por ejemplo, una imagen1 ocupe más espacio del habitual, más espacio del reservado al body, o incluso desplazarlo al “margin”.\n\n\n\n\n\nVeamos las posibilidades que tenemos de layout con este post del blog del curso\n\n\n\nO un párrafo de texto, en realidad cualquier elemento de nuestros documentos"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#imágenes",
    "href": "slides/05_primer_web_skim.html#imágenes",
    "title": "Webs/blogs con Quarto",
    "section": "Imágenes",
    "text": "Imágenes\n\nConocemos ya la sintaxis básica para insertar imágenes ![](&lt;ruta-a-imagen&gt;); ahora veremos posibilidades más avanzadas\nVeamos como insertar imágenes con este post del blog del curso"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#extensiones",
    "href": "slides/05_primer_web_skim.html#extensiones",
    "title": "Webs/blogs con Quarto",
    "section": "Extensiones",
    "text": "Extensiones\n\nUna de las novedades de Quarto es la posibilidad de usar extensiones. Las extensiones se escriben en lenguaje Lua.\nPara ver como instalar y usar extensiones vamos a ir, otra vez, a otro de los post del blog del curso: concretamente aquí"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#shortcodes",
    "href": "slides/05_primer_web_skim.html#shortcodes",
    "title": "Webs/blogs con Quarto",
    "section": "Shortcodes",
    "text": "Shortcodes\n\nUn shortcode es un código (una etiqueta, un elemento) que podemos insertar para añadir algún tipo de contenido sin tener que escribirlo directamente.\nSon muy útiles para insertar contenido que se repite\nPodemos verlo en este post del blog del curso o en la documentación oficial"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#faltan-2-elementos",
    "href": "slides/05_primer_web_skim.html#faltan-2-elementos",
    "title": "Webs/blogs con Quarto",
    "section": "Faltan 2 elementos",
    "text": "Faltan 2 elementos\n\n\nCallout blocks: documentación aquí\n\n\n\nDivs y spans: documentación aquí"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#intro",
    "href": "slides/05_primer_web_skim.html#intro",
    "title": "Webs/blogs con Quarto",
    "section": "Intro",
    "text": "Intro\n\nQuarto utiliza el framework Bootstrap 5 para generar sus documentos .html.\nAdemás, incorpora 25 themes del Bootswatch project que le dan a nuestro blog/web una apariencia profesional y cuidada.\n\n\n\n\nCreo que es mejor comenzar con un blog sencillo usando las plantillas, o themes, que nos ofrece Quarto pero, si queremos modificar la apariencia de nuestro blog, podemos hacerlo de 3 formas:\n\n\n\n           1. Utilizando las opciones disponibles en Quarto para el yaml\n           2. Utilizando CSS\n           3. Utilizando SASS"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#documentación-oficial",
    "href": "slides/05_primer_web_skim.html#documentación-oficial",
    "title": "Webs/blogs con Quarto",
    "section": "Documentación oficial",
    "text": "Documentación oficial\n(sobre opciones disponibles en los YAML’s)\n\n\nReferentes al proyecto: aquí\nReferentes a la estructura de la web: aquí y aquí\nReferentes a la estética: aquí y aquí\nReferentes a las Listing Pages: aquí\nReferentes a las About Pages: aquí"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#algunas-opciones-de-yaml-lang",
    "href": "slides/05_primer_web_skim.html#algunas-opciones-de-yaml-lang",
    "title": "Webs/blogs con Quarto",
    "section": "Algunas opciones de YAML: lang",
    "text": "Algunas opciones de YAML: lang\n\nSi te has fijado, los metadatos de los documentos aparecen en inglés.\nPor ejemplo, pone “Author” en lugar de “Autor” o “Autora”.\n\n\n\nHagamos algunos cambios\n\nSi quisiéramos cambiar específicamente la opción de autor, tendríamos que poner en el YAML:\n\n\nlanguage: \n  title-block-author-single: \"Autora\"\n\n\nPodemos cambiar todas las opciones especificando en el YAML lang: es.\nLa documentación oficial está aquí y aquí todos los elementos que se pueden modificar. Y aquí los ficheros específicos para diferentes idiomas. Aquí el documento para el castellano.\n\n\n\nSi quisieras usar tu propio documento tendrías que poner en el YAML: language: custom.yml (lógicamente el fichero custom.yml tendría que existir y estar en la ruta correcta).\n¿Probamos a hacerlo?"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#otras-opciones-para-tunear-desde-el-yaml",
    "href": "slides/05_primer_web_skim.html#otras-opciones-para-tunear-desde-el-yaml",
    "title": "Webs/blogs con Quarto",
    "section": "Otras opciones para tunear desde el YAML",
    "text": "Otras opciones para tunear desde el YAML\n\nTOC: es importante tenerlo a nuestro gusto. Aquí tienes las opciones que puedes ajustar con opciones en el yaml\nChunks: aquí tienes las opciones que puedes ajustar desde el YAML\nResizing de los thumbnails. Un gist para hacerlo.\nAlgunas opciones de tuneado que puedes implementar desde el YAML. Prueba a poner estas opciones en el archivo _quarto.yml. Nuestro blog empeorará bastante. Más opciones aquí.\n\n\nfontcolor: green          #- color del texto\nlinkcolor: purple         #- color de los enlaces\nmonobackgroundcolor: red  #- color de los cuadros de resultados de evaluar código\nfontsize: 0.6em           #- tamaño del texto (más pequeño de lo normal: 1)\nlinestretch: 2.3          #- tamaño entre las lineas (1.6 es lo \"normal\")"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#utilizando-css",
    "href": "slides/05_primer_web_skim.html#utilizando-css",
    "title": "Webs/blogs con Quarto",
    "section": "2. Utilizando CSS",
    "text": "2. Utilizando CSS\n\n\nLa apariencia visual del blog puede cambiarse utilizando CSS.\nVeamos un ejemplo con el siguiente post"
  },
  {
    "objectID": "slides/05_primer_web_skim.html#utilizando-sass",
    "href": "slides/05_primer_web_skim.html#utilizando-sass",
    "title": "Webs/blogs con Quarto",
    "section": "3. Utilizando SASS",
    "text": "3. Utilizando SASS\n\n\nLa documentación oficial aquí\nAquí la documentación oficial de Quarto sobre los Bootswatch Sass Theme Files.\nBootstrap define unas 1.400 variables con las que controlar fuentes, colores, etc … . Puedes verlas aquí\nAquí están los ficheros .scss de los 25 built-in Bootswatch themes.\n\n\n\nOtras referencias, por ejemplo: Customizing Quarto Websites: Make your website stand out using SASS o este video\nUna pequeña práctica en el tutorial nº6 del taller “Mi primer blog con Quarto”."
  },
  {
    "objectID": "slides/imagenes/tt_01/ejemplo_2.html",
    "href": "slides/imagenes/tt_01/ejemplo_2.html",
    "title": "Documentos Rmarkdown (.Rmd)",
    "section": "",
    "text": "Código# se pueden poner comentarios\n# de la forma habitual\naa &lt;- c(1, 4, 9, 16, 25)\nsqrt(aa)\n\n[1] 1 2 3 4 5\n\n\n\nCódigo2 + 2\n\n\n\nCódigo2 + 2"
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html",
    "href": "blog_02/08_extras_de_Quarto.html",
    "title": "EXTRAS de Quarto",
    "section": "",
    "text": "Quarto manuscript projects provide a framework for writing and publishing scholarly articles.\n\nDocumentación oficial aquí. Un ejemplo\nUnas slides de Mine. Permite usar Binder\nUnas slides de JJ Allaire hablando sobre el proyecto aquí\nCharla de Mine aquí, y el post aquí\n\n\n\n\n\n\n\nEn Making Pretty PDFs with Quarto Nicola Rennie explica cómo crear una extensión de Quarto para una plantilla de un pretty-pdf\n\n\n\n\n\n\ncomo storytelling: https://mastodon.social/@benschneider/111354305395601257\ncomo un storyteller: https://github.com/andrewpbray/gg-close-read\n\n\n\n\n\nYo usaba Flipbook en Xaringan slides. Aquí hay un port de flipbook a Revealjs. Ya no es tan-tan necesario pero igual lo uso para teach ggplot2\n\n\n\n\n\nUn post de 2024 sobre creación de word’s\n\n\n\n\n\nPara convertir un Google Doc en un Quarto book puedes usar el pkg quartificate"
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html#quarto-manuscripts",
    "href": "blog_02/08_extras_de_Quarto.html#quarto-manuscripts",
    "title": "EXTRAS de Quarto",
    "section": "",
    "text": "Quarto manuscript projects provide a framework for writing and publishing scholarly articles.\n\nDocumentación oficial aquí. Un ejemplo\nUnas slides de Mine. Permite usar Binder\nUnas slides de JJ Allaire hablando sobre el proyecto aquí\nCharla de Mine aquí, y el post aquí"
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html#pdfs",
    "href": "blog_02/08_extras_de_Quarto.html#pdfs",
    "title": "EXTRAS de Quarto",
    "section": "",
    "text": "En Making Pretty PDFs with Quarto Nicola Rennie explica cómo crear una extensión de Quarto para una plantilla de un pretty-pdf"
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html#like-storyteller",
    "href": "blog_02/08_extras_de_Quarto.html#like-storyteller",
    "title": "EXTRAS de Quarto",
    "section": "",
    "text": "como storytelling: https://mastodon.social/@benschneider/111354305395601257\ncomo un storyteller: https://github.com/andrewpbray/gg-close-read"
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html#flipbook",
    "href": "blog_02/08_extras_de_Quarto.html#flipbook",
    "title": "EXTRAS de Quarto",
    "section": "",
    "text": "Yo usaba Flipbook en Xaringan slides. Aquí hay un port de flipbook a Revealjs. Ya no es tan-tan necesario pero igual lo uso para teach ggplot2"
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html#word",
    "href": "blog_02/08_extras_de_Quarto.html#word",
    "title": "EXTRAS de Quarto",
    "section": "",
    "text": "Un post de 2024 sobre creación de word’s"
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html#google-docs",
    "href": "blog_02/08_extras_de_Quarto.html#google-docs",
    "title": "EXTRAS de Quarto",
    "section": "",
    "text": "Para convertir un Google Doc en un Quarto book puedes usar el pkg quartificate"
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html#quarto-assign",
    "href": "blog_02/08_extras_de_Quarto.html#quarto-assign",
    "title": "EXTRAS de Quarto",
    "section": "2.1 quarto-assign",
    "text": "2.1 quarto-assign\n\nEs una extensión de Quarto que permite generar problemas y sus soluciones en un único .qmd. Está aquí"
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html#chatgpt",
    "href": "blog_02/08_extras_de_Quarto.html#chatgpt",
    "title": "EXTRAS de Quarto",
    "section": "3.1 ChatGPT",
    "text": "3.1 ChatGPT\n\nchatgpt-from-r: https://www.sumsar.net/blog/call-chatgpt-from-r/"
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html#publicaciones",
    "href": "blog_02/08_extras_de_Quarto.html#publicaciones",
    "title": "EXTRAS de Quarto",
    "section": "3.2 Publicaciones",
    "text": "3.2 Publicaciones\n\nEl paquete Rcademy permite buscar y pasar a df tus publicaciones y hace bastantes más cosas\n\ndevtools::install_github(\"ropenscilabs/Rcademy\")\nlibrary(Rcademy)\nmypubs_bib &lt;- read_bib(\"mypubs.bib\")\nmypubs_pubmed &lt;- read_pubmed(\"Rob Hyndman\")\nmypubs_scholar &lt;- read_scholar(\"PXaWcW4AAAAJ\")     #- ok\nmypubs_orcid &lt;- read_orcid(\"0000-0001-9375-6330\")  #- ok\n\nEl paquete pubmedr busca en PubMed\n\nmed_cannabis &lt;- pubmedr::pmed_search_pubmed(search_term = \n\"medical marijuana\", fields = c('TIAB','MH'))\n\nScholia: is a service that creates visual scholarly profiles for topics, people, organizations, species, chemicals, etc using bibliographic and other information in Wikidata https://scholia.toolforge.org/\nZenodo: un repositorio de acceso abierto donde quienes investigan depositan artículos, datos, software, informes, etc. Puede venir bien al buscar info para trabajos universitarios 😉 https://zenodo.org/ desarrollado bajo el programa europeo OpenAIRE y operado por CERN . Permite a cualquier artefacto digital relacionado con la investigación. Para cada envío, se acuña un identificador de objeto digital persistente (DOI), lo que hace que los elementos almacenados se puedan citar fácilmente."
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html#truletes",
    "href": "blog_02/08_extras_de_Quarto.html#truletes",
    "title": "EXTRAS de Quarto",
    "section": "3.3 TRULETES",
    "text": "3.3 TRULETES\nSon trucos q no los voy a utilizar nunca pero quiero guardarlos\n\n@andrewheiss: Regular reminder that @tjmahr’s trick of storing model results as tab-completable lists (by feeding data frames to split()) is ingenious and will forever change how you use inline chunks with https://www.tjmahr.com/lists-knitr-secret-weapon/\nbuscar archivos que tengan draft: true : grep -rl \"draft: true\": https://isaac-flath.tech/til/quartodrafts\nHmisc::rendHTML(): https://fosstodon.org/@smach/110006219843294743\nMostrar las rows de una tabla poco a poco: https://fosstodon.org/@yabellini/110097048443787861\nel ejemplo redefinitivo: https://rd.thecoatlessprofessor.com/webR-quarto-demos/webr-quarto-html-demo.html"
  },
  {
    "objectID": "blog_02/08_extras_de_Quarto.html#biblio",
    "href": "blog_02/08_extras_de_Quarto.html#biblio",
    "title": "EXTRAS de Quarto",
    "section": "3.4 “Biblio”",
    "text": "3.4 “Biblio”\n\nMás trucos (complicaetes y algunos rarunos para mi) de .Rmd de Elio Campitelli: https://mastodon.social/@eliocamp/110209569783331181"
  },
  {
    "objectID": "blog_02/02_trucos_revealjs.html",
    "href": "blog_02/02_trucos_revealjs.html",
    "title": "Trucos: Reveal.js",
    "section": "",
    "text": "Que un texto ocupe toda la slide, pero centrado verticalmente; para ello, has de combinar r-fit-text con the center class en el título de la slide.\n## {.center}\n\n::: r-fit-text\nThis fits perfectly!\n:::\n\n\n\n\n\npuedes rotarlo con : style=\"rotate: -10deg;\"\n\n[My textito]{.absolute left=\"50%\" top=\"20%\" style=\"rotate: -10deg;\"}\n\n\n\n\n\nLo vi aquí. Lo utilizan para resaltar texto que pones encima de una foto\nPuedes rotarlo poniendo rotate: -10deg; dentro de style = \" ....\"\n\n::: {.absolute left=\"15%\" top=\"5%\" style=\"font-size:1.8em; padding: 0.75em 0.7em; background-color: rgba(44, 0, 142, .4);\"}\nFirst we take Manhattan, \n\nthen we take Berlin\n:::"
  },
  {
    "objectID": "blog_02/02_trucos_revealjs.html#footnotes",
    "href": "blog_02/02_trucos_revealjs.html#footnotes",
    "title": "Trucos: Reveal.js",
    "section": "Notas",
    "text": "Notas\n\n\nLo vi en este repo, concretamente en el fichero index.qmd↩︎"
  },
  {
    "objectID": "blog_02/01_trucos_quarto.html",
    "href": "blog_02/01_trucos_quarto.html",
    "title": "Trucos: Quarto",
    "section": "",
    "text": "En este post voy recopilando Trucos de Quarto en general. Hay una página especifica para trucos de Revealjs slides y otra para webs/blogs"
  },
  {
    "objectID": "blog_02/01_trucos_quarto.html#quarto-1.4-enero-2024",
    "href": "blog_02/01_trucos_quarto.html#quarto-1.4-enero-2024",
    "title": "Trucos: Quarto",
    "section": "1.1 Quarto 1.4 (enero 2024)",
    "text": "1.1 Quarto 1.4 (enero 2024)\nAlgunos enlaces interesantes sobre Quarto 1.4:\n\nQuarto 1.4 release. Algunas novedades son: Dashboards, Typst, cross-references, manuscripts, Binder with Quarto, Lightbox Figures\nQuarto 1.4 complete release notes\nQuarto 1.4 pre-procesa las tablas, si no quieres que lo haga entonces aquí explican que hay que poner html-table-processing: none en el YAML"
  },
  {
    "objectID": "blog_02/01_trucos_quarto.html#yaml",
    "href": "blog_02/01_trucos_quarto.html#yaml",
    "title": "Trucos: Quarto",
    "section": "2.1 Yaml",
    "text": "2.1 Yaml\n\n\n2.1.1 Varios autores\n\n¿Cómo añadir múltiples autores y afiliaciones con Quarto? Pues la verdad es que Quarto 1.4 lo hace super-fácil. Puedes verlo aquí\nAquí tienes un ejemplo con multiples autores y que se exporta a MS word\n\n\n\n\n2.1.2 Varios themes\n\nPuedes tener varios themes en el _quarto.yml. Por ejemplo puedes poner un theme light y otro dark. También se puede usar un theme para HTML y otro para Revealjs. Por ejemplo:\n\nformat:\n  revealjs:\n    theme:  theme.scss\n  html:\n     theme:\n        light: theme\n        dark: [default, cosmos,darl-theme.scss]\n\n\n\n2.1.3 Varios formatos\n\nSe puede hacer que un mismo source document genere varios outputs\n\n---\ntitle: \"My Report\"         \nformat: \n  html: default\n  epub: default\n  docx: default                                                         \n---\n\nHay que hacer el render desde la Terminal con:\n\nquarto render my-report.qmd\n\n\n\n2.1.4 Code in the yaml\n\nPuedes correr código R en el YAML: https://twitter.com/sharon000/status/1557060949613445120, también en las opciones de los chunks.\nPor ejemplo: #| fig-cap: !expr glue::glue(\"The mean was {mean(airquality$Temp) |&gt; round()}\").\nOtro ejemplo: #| fig-cap: !expr 'paste(\"Air\", \"Quality\") aquí"
  },
  {
    "objectID": "blog_02/01_trucos_quarto.html#texto",
    "href": "blog_02/01_trucos_quarto.html#texto",
    "title": "Trucos: Quarto",
    "section": "2.2 Texto",
    "text": "2.2 Texto\n\n2.2.1 Tamaño texto con :::\n\n\nSi escribes esto:\n::: {style=\"font-size: 2.5em\"}\nFirst we take ...\n:::\n\n\n\nVeras esto:\n\nFirst we take …"
  },
  {
    "objectID": "blog_02/01_trucos_quarto.html#body",
    "href": "blog_02/01_trucos_quarto.html#body",
    "title": "Trucos: Quarto",
    "section": "2.3 Body",
    "text": "2.3 Body\n\n\n2.3.1 Color en un trozo del documento\n\n\nSi escribes esto:\n:::{style=\"color:#9A4665;\"}\nEsto se verá en rojito\n:::\n\n\n\nVerás esto:\n\nEsto se verá en rojito\n\n\n\n\n\n\n2.3.2 Alinear texto de una columna\n\nFunciona tanto en html como en revealjs.\nHay que poner: style=\"text-align:left;\" . Para alinear imágenes es: fig-align=\"center\"\nEsto de abajo no me acaba de funcionar la alineación del texto, no acabo de descubrir porque. Puede que sea porque aplico css o porque para que se pueda ver el código y el resultado, he de anidar y “hackear” las marcas :::; pero no lo tengo claro, ya lo descubriré; pero a ti, si pegas el código en tus documentos, sí te funcionará.\n\n\nSi escribes esto:Verás esto\n\n\n:::: {.columns}\n::: {.column width=\"50%\" style=\"text-align:left;\"}\nPrimera columna (**left aligned**)\n:::\n\n::: {.column width=\"50%\" style=\"text-align:right;\"}\nSegunda columna (**right aligned**)\n:::\n::::\n\n\n\n\nPrimera columna (left aligned)\n\nSegunda columna (right aligned)\n\n\n\n\n\n\n\n\n2.3.3 Conditional content\n\nEs posible que quieras que algúna parte de un documento sólo se vea en un formato concreto. Por ejemplo, que una imagen sólo se vea en HTML y no en PDF.\nDocumentación oficial aquí.\nSe hace uso de .content-visible and .content-hidden classes. Por ejemplo:\n\n::: {.content-visible when-format=\"html\"}\n![](my_image.gif)\n:::\n\nTambién se puede aplicar a contenido in-line:\n\nPara contenido inline has de: [Will only appear in pdf. (inline)]{.content-visible when-format=\"pdf\"}\n\n\n\n2.3.4 Incluir toots, etc… en callouts\n\nSe pueden incluir: toots, gists, tweets, videos etc… Es fácil con la extensión collapse-social-embeds. En realidad es una “mejora” de la extensión social-embeds\nPor ejemplo, para incluir en un callout el siguiente gist https://gist.github.com/tarleb/852f6ae98764bea56aeeac979f3c17be hay que:\n\n\n\n\n::: {.gist user=tarleb gist_id=852f6ae98764bea56aeeac979f3c17be }\n:::\n\n\n\n\n\n\n\n\n\n\nGithub gist by tarleb"
  },
  {
    "objectID": "blog_02/01_trucos_quarto.html#chunks",
    "href": "blog_02/01_trucos_quarto.html#chunks",
    "title": "Trucos: Quarto",
    "section": "2.4 Chunks",
    "text": "2.4 Chunks\n\n2.4.1 Folding chunks no ejecutables\n\nPuedes hacerlo con &lt;details&gt;\n\n\n\n\nSi escribes esto:\n\n&lt;details&gt;\n&lt;summary&gt;Mi (foldable) chunk no-ejecutable&lt;/summary&gt;\n``r\nprint(2 +2)\n``\n&lt;/details&gt;\n\n\n\n\nVerás esto:\n\n\n\nMi (foldable) chunk no-ejecutable\n\nprint(2 +2)"
  },
  {
    "objectID": "blog_02/01_trucos_quarto.html#captions",
    "href": "blog_02/01_trucos_quarto.html#captions",
    "title": "Trucos: Quarto",
    "section": "2.5 Captions",
    "text": "2.5 Captions\n\n2.5.1 Code en captions\n\nPuedes correr código R en el YAML: https://twitter.com/sharon000/status/1557060949613445120, pero también en las opciones de los chunks.\nPor ejemplo: #| fig-cap: !expr glue::glue(\"The mean was {mean(airquality$Temp) |&gt; round()}\").\nOtro ejemplo: #| fig-cap: !expr 'paste(\"Air\", \"Quality\") aquí\n\n\n\n\n2.5.2 Latex en captions\nPara poner ecuaciones Latex en las captions de las figures, tablas etc … Aquí lo explican. Se pone así:\n#| fig-cap: \"This is a caption at $\\\\alpha =$ .05.\""
  },
  {
    "objectID": "blog_02/01_trucos_quarto.html#extensiones-1",
    "href": "blog_02/01_trucos_quarto.html#extensiones-1",
    "title": "Trucos: Quarto",
    "section": "3.1 Extensiones",
    "text": "3.1 Extensiones\n\nnow: extensión de Garrick Aden-Buie que permite insertar (y formatear) la fecha de creación y de actualización de los .qmd’s. En este post explica su uso\n\n\n\nembedio: permite insertar different file types into Quarto HTML documents. Los archivos pueden ser: archivos de audio, pdf’s y revealjs slides."
  },
  {
    "objectID": "blog_02/01_trucos_quarto.html#paquetes",
    "href": "blog_02/01_trucos_quarto.html#paquetes",
    "title": "Trucos: Quarto",
    "section": "3.2 Paquetes",
    "text": "3.2 Paquetes\n\nquartostamp: no es una extensión, es un paquete que contiene RStudio addings para insertar divs, callouts etc… Para mi es un poco ptse, PERO en este post les encanta.\nquartools: es un paquete de que permite la creación de “quarto-compliant markdown” vía R function calls. As quartools generates quarto-compliant markdown, and not HTML tags, the content will work on any quarto output format. Sí, pero para mi también ptse."
  },
  {
    "objectID": "blog_02/07_trucos_Rmarkdown.html",
    "href": "blog_02/07_trucos_Rmarkdown.html",
    "title": "Trucos: Rmarkdown",
    "section": "",
    "text": "1 Rmarkdown\n\n\n1.0.1 Ver todas las opciones de los chunks\n\nSale de este post de Danielle Navarro\n\n\nCódigo#- salen las opciones por defecto\noptions &lt;- knitr::opts_chunk$get()\n\n\n\n\n1.0.2 Ejecutar .R en chunks\nLa explicación aquí\n{r, file = \"some-file.R\"}\nEl archivo some-file.R ha de estar en la misma carpeta que el .qmd\n\n\n1.0.3 convertir Rmd chunks a qmd\n\nPara convertir Rmd chunks a qmd:\n\nknitr::convert_chunk_header(\"document.qmd\", output = identity)\n\n\n1.0.4 Compilar .tex\n\nCompilar .tex a pdf desde RStudio: tools::texi2pdf()\n\n\n\n\n1.0.5 CHILD\n\ntruco knitr::knitr_child() para generar distintas tablas y títulos en .qmd programáticamente: https://fosstodon.org/@MickaelCanouil/109919710663908424\n\n\n\n\n1.0.6 Inline code\n\nExplican bien lo de scaping back-ticks: https://www.markdownguide.org/basic-syntax/#escaping-backticks. Estos otros no lo hacen tan bien\ninline literal code: ` r 2+2` `abc` `` `abc` ``\nescribir esto: `` `abc` `` para que se muestre esto: `abc`\n\n\n\n1.0.7 Meta-Markdown\n\nAutomatizar la creación de una bullet list: aquí\nPasar un enlace à la md, a enlace en html. aquí hilo de Shanon\n\n\n\n1.0.8 Convertir Inline footnotes\nConvertir Inline footnotes to Regular footnotes in Markdown: https://yihui.org/en/2023/02/markdown-footnotes/\n\n\n\n\n2 ZZ. Biblio\n\nWriting knitr hooks, de danielle Navarro.\nGenerating dynamic contents in R Markdown and Quarto: volvio a salir al ver este toot\n\n\n\nReutilizarCC BY 4.0"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Pedro J. Pérez",
    "section": "",
    "text": "Mi nombre es Pedro J. Pérez. Soy profesor del departamento de Análisis Económico de la Universitat de València. Aquí puedes ver mi página web en la UV. Me gusta aprender y trastear con R; vamos, que aún soy un entusiasta de R. Me divierto!!\nPodemos decir que tengo “bastante” experiencia con R porque lo utilizo en mi docencia e investigación; de hecho, imparto una asignatura en el grado de Economía que es una introducción a R, aquí puedes ver su web. También imparto un curso de introducción a R en el SFPIE, aquí puedes ver la web de una de sus ediciones.\n¿Y cuanta experiencia tienes sobre Quarto? Bueno, ya voy teniendo bastante experiencia: Quarto apareció en junio de 2022, y en noviembre ya estaba yo impartiendo el taller Mi primer blog con Quarto en las XII Jornadas de Usuarios de R. No es que sea muy bloguero, mas bien soy un creador y liquidador de blogs. Aquí, puedes ver un listado no exhaustivo de los blogs que he liquidado, alguno de ellos hecho con Quarto.\nEn junio de 2023 impartí la primera edición de este curso. Puedes ver su web aquí. Su web es realmente parecida a la de esta edición. 😀"
  },
  {
    "objectID": "blog_02/06_trucos_workflow.html",
    "href": "blog_02/06_trucos_workflow.html",
    "title": "Trucos: workflow",
    "section": "",
    "text": "Cuando haces el Render de un QMD ocurre lo siguiente: se abre un background job, donde primero, knitr ejecuta los chunks y crea un nuevo documento .md que ya incluye el código y su output; ese fichero .md es procesado por pandoc que crea el output final.\n\n\n\n\n\nSe puede hacer el render de un .qmd de varias formas:\n\n#- desde la Terminal\nquarto render document.qmd  # default is html\nquarto render document.qmd --to pdf\nquarto render document.qmd --to docx\n#- desde la Consola\nquarto::quarto_render(\"document.qmd\") # defaults to html\nquarto::quarto_render(\"document.qmd\", output_format = \"pdf\")\n\n\n\n\n\nTambién se puede hacer el render con opciones, p.ej:\n\nquarto render document.qmd --to html -M code-fold:true                  \nquarto render document.qmd --to html -M code-fold:true -P alpha:0.2 -P ratio:0.3     \n\n\n\n\n\nPara crear epub en Quarto bastaría con hacer en la Terminal:\n\nquarto render my_file.qmd --to epub\n\nAún así, Bruno Rodrigues y Sam Parmar nos cuentan algunos truquillo sobre como hacer render de un Quarto book a epub, o a pdf.\n\n\n\n\n\n\nPara hacer el render desde la Terminal con parámetros:\n quarto render annual_report.qmd -P year:2024\nEn parametrised reports, cuando haces el render, me gustaría que los archivos de salida se guardasen en otro directorio, pero se ve que esto no es fácil-fácil, al menos aún. En este toot explican que como no encontraron la solución, así que lo que hace es hacer el render en la misma carpeta donde está el script, pero luego mueve los archivos que se han generado. para moverlos usa\n\nfile.copy(full_path_source, full_path_destination)\n\n\n\n\n\nSi quieres ejecutar un R script desde la Terminal:\n\nRscript -e \"rmarkdown::render('document.Rmd')\"\n\n\n\n\n\nPara pasar un documento Word a .md utilizando Pandoc. Lo vi en este toot\n\npandoc -f docx -t markdown foo.docx -o foo.markdown\n\n\nPara pasar un documento Word a .md desde R:\n\nrmarkdown::pandoc_convert(\"input.docx\", to = \"md\")\n\n\n\n\n\nCómo hacer el render rápidamente (ptse): https://github.com/quarto-dev/quarto-cli/discussions/6173\nTruco para q se haga el render solo en partes; https://fosstodon.org/@mccarthymg/111889746218019391. De Rennie."
  },
  {
    "objectID": "blog_02/06_trucos_workflow.html#render",
    "href": "blog_02/06_trucos_workflow.html#render",
    "title": "Trucos: workflow",
    "section": "",
    "text": "Cuando haces el Render de un QMD ocurre lo siguiente: se abre un background job, donde primero, knitr ejecuta los chunks y crea un nuevo documento .md que ya incluye el código y su output; ese fichero .md es procesado por pandoc que crea el output final.\n\n\n\n\n\nSe puede hacer el render de un .qmd de varias formas:\n\n#- desde la Terminal\nquarto render document.qmd  # default is html\nquarto render document.qmd --to pdf\nquarto render document.qmd --to docx\n#- desde la Consola\nquarto::quarto_render(\"document.qmd\") # defaults to html\nquarto::quarto_render(\"document.qmd\", output_format = \"pdf\")\n\n\n\n\n\nTambién se puede hacer el render con opciones, p.ej:\n\nquarto render document.qmd --to html -M code-fold:true                  \nquarto render document.qmd --to html -M code-fold:true -P alpha:0.2 -P ratio:0.3     \n\n\n\n\n\nPara crear epub en Quarto bastaría con hacer en la Terminal:\n\nquarto render my_file.qmd --to epub\n\nAún así, Bruno Rodrigues y Sam Parmar nos cuentan algunos truquillo sobre como hacer render de un Quarto book a epub, o a pdf.\n\n\n\n\n\n\nPara hacer el render desde la Terminal con parámetros:\n quarto render annual_report.qmd -P year:2024\nEn parametrised reports, cuando haces el render, me gustaría que los archivos de salida se guardasen en otro directorio, pero se ve que esto no es fácil-fácil, al menos aún. En este toot explican que como no encontraron la solución, así que lo que hace es hacer el render en la misma carpeta donde está el script, pero luego mueve los archivos que se han generado. para moverlos usa\n\nfile.copy(full_path_source, full_path_destination)\n\n\n\n\n\nSi quieres ejecutar un R script desde la Terminal:\n\nRscript -e \"rmarkdown::render('document.Rmd')\"\n\n\n\n\n\nPara pasar un documento Word a .md utilizando Pandoc. Lo vi en este toot\n\npandoc -f docx -t markdown foo.docx -o foo.markdown\n\n\nPara pasar un documento Word a .md desde R:\n\nrmarkdown::pandoc_convert(\"input.docx\", to = \"md\")\n\n\n\n\n\nCómo hacer el render rápidamente (ptse): https://github.com/quarto-dev/quarto-cli/discussions/6173\nTruco para q se haga el render solo en partes; https://fosstodon.org/@mccarthymg/111889746218019391. De Rennie."
  },
  {
    "objectID": "blog_02/06_trucos_workflow.html#instalación",
    "href": "blog_02/06_trucos_workflow.html#instalación",
    "title": "Trucos: workflow",
    "section": "2 Instalación",
    "text": "2 Instalación\n\nprework de T. Mock: In order to create PDFs you will need to install a recent distribution of LaTeX. We recommend the use of TinyTeX (which is based on TexLive):\n\nquarto install tool tinytext\nquarto install tool chromium"
  },
  {
    "objectID": "blog_02/03_trucos_webs.html",
    "href": "blog_02/03_trucos_webs.html",
    "title": "Trucos: Webs (blogs y books) con Quarto",
    "section": "",
    "text": "A beginner’s guide to building a simple website with Quarto & Netlify de Jade Ryan.\nVideo de @ggnot sobre cómo publicar una web en Github aquí. Hace el render en Github con Github Actions\n\n\n\n\n\n\nUn listado de web’s confeccionado por QMDclub\nWeb muy chula de Jade Ryan aquí. Tiene un post sobre crear una web\nUn post sobre cómo crear una web para un portfolio. Lo que hace es tunear un poco más una listing page. Pero es que además, su web es muy chula y él es un psicólogo con cursos etc… por ejemplo este de DS\nOtra web. La landing page tiene varias secciones donde muestra los 3 últimos post etc…\nLuke Pembleton web. El repo [https://github.com/lpembleton/lpembleton.blog]\nJim Gadner web. El repo\nElya Kaye web template para hacer una web para publicar Advent of Code solutions. Essentially, each year is a listing page, and each day is a post. El toot. El repo\nWeb super-chula de una revista,Real World DS. El repo. Una charla en post::config(2023) donde explican la creación\nWeb super-chula, pero no está el repo en Github: hace cosas de Wikidata y bibliometría y CC en ggplot2."
  },
  {
    "objectID": "blog_02/03_trucos_webs.html#biblio",
    "href": "blog_02/03_trucos_webs.html#biblio",
    "title": "Trucos: Webs (blogs y books) con Quarto",
    "section": "",
    "text": "A beginner’s guide to building a simple website with Quarto & Netlify de Jade Ryan.\nVideo de @ggnot sobre cómo publicar una web en Github aquí. Hace el render en Github con Github Actions"
  },
  {
    "objectID": "blog_02/03_trucos_webs.html#ejemplos-de-webs",
    "href": "blog_02/03_trucos_webs.html#ejemplos-de-webs",
    "title": "Trucos: Webs (blogs y books) con Quarto",
    "section": "",
    "text": "Un listado de web’s confeccionado por QMDclub\nWeb muy chula de Jade Ryan aquí. Tiene un post sobre crear una web\nUn post sobre cómo crear una web para un portfolio. Lo que hace es tunear un poco más una listing page. Pero es que además, su web es muy chula y él es un psicólogo con cursos etc… por ejemplo este de DS\nOtra web. La landing page tiene varias secciones donde muestra los 3 últimos post etc…\nLuke Pembleton web. El repo [https://github.com/lpembleton/lpembleton.blog]\nJim Gadner web. El repo\nElya Kaye web template para hacer una web para publicar Advent of Code solutions. Essentially, each year is a listing page, and each day is a post. El toot. El repo\nWeb super-chula de una revista,Real World DS. El repo. Una charla en post::config(2023) donde explican la creación\nWeb super-chula, pero no está el repo en Github: hace cosas de Wikidata y bibliometría y CC en ggplot2."
  },
  {
    "objectID": "blog_02/04_trucos_css.html",
    "href": "blog_02/04_trucos_css.html",
    "title": "Trucos: CSS y SCSS",
    "section": "",
    "text": "Para incorporar CSS en un documento .qmd se han de hacer dos cosas:\n\ncrear un documento .css , y\nreferenciarlo en el yaml del .qmd.\n\nVeámos cómo referenciar el archivo css en el yaml en 3 situaciones:\n\n\n\nSi el fichero .css estuviese en la misma carpeta que el .qmd, entonces el yaml del documento .qmd sería algo como:\n\n---\ntitle: \"Mi super-título\"\nformat: html\ncss: my_styles.css\n---\n\n\n\nSi el fichero .css que quieres referenciar estuviese en una subcarpeta llamada assets dentro de la carpeta donde está el .qmd, entonces, el yaml del documento .qmd quedaría como:\n\n---\ntitle: \"Mi super-título\"\nformat: html\ncss: asets/my_styles.css\n---\n\n\n\n\n\nSi el fichero .css que quieres referenciar estuviese en la carpeta assets, en la raiz del Qproject, entonces, el yaml del documento .qmd quedaría como:\n\n---\ntitle: \"Mi super-título\"\nformat: html\ncss: \"`r here::here('assets', 'ember.scss')`\"\n---\n\n\n\n\n\n\nEsta perfectamente explicado aquí\n\n\n\n\nEn el .qmd tendrías que incluir lo siguiente:\n\n::: rotate-img\n![](my_imagen.jpg){.absolute height=300}\n:::\n\n\n\nEl fichero my_styles.css debería contener:\n\n.rotate-img img {\n  transform: rotate(40deg);\n}\n\n\n\n\nTambién se puede rotar una imagen sin utilizar .css. Se haría utilizando un fenced div , concretamente así:\n\n:::{.class .absolute top=\"35%\" left=\"10%\" width=\"350px\" style=\"transform: rotate(-15deg);\"}\n![](my_imagen.jpg)\n:::"
  },
  {
    "objectID": "blog_02/04_trucos_css.html#biblio",
    "href": "blog_02/04_trucos_css.html#biblio",
    "title": "Trucos: CSS y SCSS",
    "section": "2.1 Biblio",
    "text": "2.1 Biblio\n\nStyling and Templating Quarto Documents son unas slides, con video y repo sobre, evidentemente, styling qmd`s. Tiene varios ejemplos sobre colores, fuentes y además, sobre como hacer una template.\nAquí tienes las variables SASS de revealjs y sus valores por defectos, y aquí las de html Bootstrap. En html theming tienes los 25 themes from the Bootswatch project.\nUna template vacia q usa Emil Hvitfeldt para sus presentaciones. Esta vacía pero tiene como meter JS en Revelajs y tiene los events de Reveals y en la web de Silvia Canelon lo usa."
  },
  {
    "objectID": "blog_02/04_trucos_css.html#trucos",
    "href": "blog_02/04_trucos_css.html#trucos",
    "title": "Trucos: CSS y SCSS",
    "section": "2.2 Trucos",
    "text": "2.2 Trucos\n\n2.2.1 Cajas flex\nEste scss crea una clase para un contenedor de columnas flexibles, donde cada columna es una caja con borde rosita, esquinas redondeadas y sombra.\n\n\n// my Estilo para las COLUMNAS con CAJAS (flex)\n// Variables de color\n$xxcol-bg: #f0f8ff;      // color de fondo de la caja\n$xxcol-border: #e75480;  // color del borde (rosa elegante)\n\n// Estilo para las columnas con cajas\n.xx-columnas-cajas {\n  display: flex;\n  gap: 1em;\n\n  .columna {\n    flex: 1;\n    background: $xxcol-bg;\n    border: 2px solid $xxcol-border;\n    border-radius: 10px;\n    padding: 1em;\n    box-shadow: 0 2px 8px rgba(0,0,0,0.07);\n  }\n}\n\n\nPara usar este estilo en tu documento .qmd tendrías que:\n::: {.xx-columnas-cajas}\n::: {.columna}\n:::\n::: {.columna}\n:::\n:::\nEl resultado seria más o menos lo que estas viendo ahora:\n\n\n\n\n\n2.2.2 Cambiar color links\n\nAquí hay un archivo .scss de Mine. Pone en el yaml: linkcolor: “#866fa3”1 y luego lo referencia en el archivo .scss para hacer que los links se hagan más tenues y se subrayen cuando estás sobre ellos2.\n\n$hover-color: lighten($link-color, 40%);\n\na{\n  color: $link-color;\n  text-decoration: none;\n  \n  &:hover{\n    color: $hover-color;\n    border-bottom: 1px solid $hover-color;\n  }\n  \n}\n\n\n\n2.2.3 Tunear los call-outs\n\nEn este video @ggnot explica cómo crear CUSTOM Callout Boxes in Quarto. Tiene un repositorio con un ejemplo. Hace falta definir un archivo .scss.\n\n\n\n\nEl documento .qmd sería así:\n\n---\ntitle: \"Custom Callouts\"\nauthor: \"Melissa Van Bussel\"\nformat:\n  html:\n    theme: custom.scss\n---\n\n:::::{.solutionbox}\n::::{.solutionbox-header}\n:::{.solutionbox-icon}\n:::\nThis is my test solution\n::::\n:::{.solutionbox-body}\nAnd some content inside of it\n:::\n:::::\n\n\nEl fichero custom.scss sería así:\n\n/*-- scss:defaults --*/\n\n// replicate the CSS for a callout box with a custom title, icon, and default appearance\n\n.solutionbox {\n  margin-top: 1em;\n  margin-bottom: 1em;  \n  border-radius: .25rem;\n  border-left: solid #acacac .3rem;\n  border-right: solid 0.5px silver;\n  border-top: solid 0.5px silver;\n  border-bottom: solid 0.5px silver;\n  border-left-color: #9834eb !important;\n}\n\n.solutionbox-icon {\n  height: 0.9rem;\n  width: 0.9rem;\n  display: inline-block;\n  content: \"\";\n  background-repeat: no-repeat;\n  background-size: 0.9rem 0.9rem;\n  margin-top: .5rem;\n  padding-right: 1.25rem;\n  background-image: url('imagenes/flor.jpg');\n}\n\n.solutionbox-header {\n  //margin-top: 0.5em;\n  margin-bottom: 0.5em;\n  border-bottom: none;\n  font-weight: 600;\n  opacity: 85%;\n  font-size: 0.9rem;\n  padding-left: 0.5em;\n  padding-right: 0.5em;\n  display: flex;\n  background-color: #f5e8ff;\n  height: 2em;\n  overflow: hidden;\n}\n\n.solutionbox-header p {\n  padding-top: 0.2em;\n}\n\n.solutionbox-body {\n  font-size: 0.9rem;\n  font-weight: 400;\n  padding-left: 0.5em;\n  padding-right: 0.5em;\n}\n\n.solutionbox-body &gt; :last-child {\n  padding-bottom: 0.5rem;\n  margin-bottom: 0;\n}\n\n\n\n\n\n2.2.4 Colores\n\nEn estas slides de Emil Hvitfeldt se explica cómo cambiar los colores de un tema. Se hace con un archivo .scss y se referencia en el yaml del .qmd. Los H1 son el mismo color que H2 pero mas oscuros. El código es:\n\n/*-- scss:defaults --*/\n$theme-black: #4c4c4c;\n$theme-white: white;\n$theme-teal: #50847B;\n$theme-blue: #76AADB;\n\n$body-bg: $theme-white;\n$body-color: $theme-black;\n$link-color: $theme-teal;\n$code-color: $theme-teal;\n\n/*-- scss:rules --*/\nh1 {\n  color: darken($theme-blue, 50%);\n}\n\nh2, h3, h4 {\n  color: $theme-blue;\n}\n\n\n\n2.2.5 Fuentes\n\nEn estas slides de Emil Hvitfeldt se explica cómo cambiar las fuentes de un tema.\n\n\n\n\n2.2.6 TOC\n\nEn la web de Silvia Canelon, concretamente en este post. El fichero scss está aquí\n\n// Table of contents\n$toc-color:                   $link-color;\n$toc-active-border:           $toc-color;\n$toc-inactive-border:         lighten($toc-color, 50%);"
  },
  {
    "objectID": "blog_02/04_trucos_css.html#footnotes",
    "href": "blog_02/04_trucos_css.html#footnotes",
    "title": "Trucos: CSS y SCSS",
    "section": "Notas",
    "text": "Notas\n\n\nEs el color “Glossy Grape”↩︎\nPara mi gusto se atenúan demasiado, igual en lugar de un 40% hay que poner otro %↩︎"
  },
  {
    "objectID": "blog_02/05_trucos_html.html",
    "href": "blog_02/05_trucos_html.html",
    "title": "Trucos: html",
    "section": "",
    "text": "Para que los enlaces se abran en pestaña nueva has de poner {target=\"_blank\"}\n\n\n\n\n\nPara añadir (en un documento .qmd) un iframe que contenga una web, se puede hacer de varias formas:\n\ncon knitr::include_url()\n\n```{r}\n#| echo: true\nknitr::include_url({\"https://quarto.org/docs/guide/\"})\n```\n\n\ncon &lt;iframe&gt;: La página que se incrusta se especifica mediante el atributo src del elemento iframe. Por ejemplo, este fragmento creará un marco de 500 píxeles de ancho y 300 píxeles de alto donde se situará una página web. Dos ejemplos:\n\n&lt;iframe src=\"https://quarto.org/\" title=\"https://quarto.org/\" width=\"960\" height=\"500\" data-external=\"1\"&gt;&lt;/iframe&gt;\n\n&lt;iframe src=\"https://www.uv.es/\" loading=\"lazy\" style=\"width: 90%; height: 100px; border: 0px none;\"&gt;&lt;/iframe&gt;\n\n\n\n\n\nLógicamente se puede hacer con css\n\n&lt;style&gt; div.pink { background-color:pink; border-radius: 5px; padding: 20px; height: 100px; width: 50%;} &lt;/style&gt; &lt;div class = \"pink\"&gt;\nCuadro rápido de texto\n&lt;/div&gt;\n\n\nCuadro rápido de texto"
  },
  {
    "objectID": "blog_02/05_trucos_html.html#trucos",
    "href": "blog_02/05_trucos_html.html#trucos",
    "title": "Trucos: html",
    "section": "",
    "text": "Para que los enlaces se abran en pestaña nueva has de poner {target=\"_blank\"}\n\n\n\n\n\nPara añadir (en un documento .qmd) un iframe que contenga una web, se puede hacer de varias formas:\n\ncon knitr::include_url()\n\n```{r}\n#| echo: true\nknitr::include_url({\"https://quarto.org/docs/guide/\"})\n```\n\n\ncon &lt;iframe&gt;: La página que se incrusta se especifica mediante el atributo src del elemento iframe. Por ejemplo, este fragmento creará un marco de 500 píxeles de ancho y 300 píxeles de alto donde se situará una página web. Dos ejemplos:\n\n&lt;iframe src=\"https://quarto.org/\" title=\"https://quarto.org/\" width=\"960\" height=\"500\" data-external=\"1\"&gt;&lt;/iframe&gt;\n\n&lt;iframe src=\"https://www.uv.es/\" loading=\"lazy\" style=\"width: 90%; height: 100px; border: 0px none;\"&gt;&lt;/iframe&gt;\n\n\n\n\n\nLógicamente se puede hacer con css\n\n&lt;style&gt; div.pink { background-color:pink; border-radius: 5px; padding: 20px; height: 100px; width: 50%;} &lt;/style&gt; &lt;div class = \"pink\"&gt;\nCuadro rápido de texto\n&lt;/div&gt;\n\n\nCuadro rápido de texto"
  },
  {
    "objectID": "slides/imagenes/tt_01/ejemplo_1.html",
    "href": "slides/imagenes/tt_01/ejemplo_1.html",
    "title": "Mi documento",
    "section": "",
    "text": "Este es un documento Rmarkdown. Para saber más sobre Rmd : http://rmarkdown.rstudio.com.\n\nCódigosummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n\nEl trozo de arriba es un chunk de código\nAl hacer clic en el botón Knitr, se ejecutará el código y se generará un documento que incluirá tanto el texto, como el código (o chunks) y la evaluación de este.\nCon esto acabamos el informe"
  },
  {
    "objectID": "slides/imagenes/tt_01/ejemplo_1.html#introducción-a-rmd",
    "href": "slides/imagenes/tt_01/ejemplo_1.html#introducción-a-rmd",
    "title": "Mi documento",
    "section": "",
    "text": "Este es un documento Rmarkdown. Para saber más sobre Rmd : http://rmarkdown.rstudio.com.\n\nCódigosummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n\nEl trozo de arriba es un chunk de código\nAl hacer clic en el botón Knitr, se ejecutará el código y se generará un documento que incluirá tanto el texto, como el código (o chunks) y la evaluación de este.\nCon esto acabamos el informe"
  },
  {
    "objectID": "slides/imagenes/tt_01/ejemplo_1.html#including-plots",
    "href": "slides/imagenes/tt_01/ejemplo_1.html#including-plots",
    "title": "Mi documento",
    "section": "Including Plots",
    "text": "Including Plots\nYou can also embed plots, for example:\n\n\n\n\n\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot."
  },
  {
    "objectID": "slides/01_presentacion.html#qué-haremos-en-el-curso",
    "href": "slides/01_presentacion.html#qué-haremos-en-el-curso",
    "title": "Presentación del curso",
    "section": "¿Qué haremos en el curso?",
    "text": "¿Qué haremos en el curso?\n\n\nAprender a usar “el entorno R” (❗) para escribir documentos que espero sean útiles para nuestras labores docentes, investigadoras y de gestión.\n\n\n\n\nDistintos tipos de documentos: informes, tutoriales, transparencias, páginas web, blogs, …\n\n\n\n\nEstos documentos serán reproducibles (❗)\n\n\n¿Documentos reproducibles?\n\n\n\nSí, generaremos directamente el documento final sin copiar ni pegar nada, sino usando código. 💬\n\n\nExplicar un poco q es reproducible. P.ej: habitualmente escribís en Word pero las tablas y gráficos en Excel … aquí no, aquí todo en un mismo workflow. Esto tiene ventajas que luego explicaré\n\n\n\n\nPara ello, hemos de aprender a escribir en QMD (Quarto Markdown) (❗❗)"
  },
  {
    "objectID": "slides/01_presentacion.html#forma-de-trabajar-con-el-entorno-r",
    "href": "slides/01_presentacion.html#forma-de-trabajar-con-el-entorno-r",
    "title": "Presentación del curso",
    "section": "Forma de trabajar con el “entorno R”",
    "text": "Forma de trabajar con el “entorno R”\n\nR es un entorno (y un lenguaje de programación) para hacer estadística\n\n\n\nPodemos pensar que un análisis con datos tiene varias etapas.\n\n\n\n\n\n\n\n\n\nEn el curso nos centramos en la última etapa etapa: la presentación de los resultados. 💬\n\n\nExplicar que : 1) para sacarle todo el provecho a QMD hay q saber R, pero q también tiene beneficios si no sabes R. Tb que es una inversión, que QMD es una parte integral del workflow con R."
  },
  {
    "objectID": "slides/01_presentacion.html#qué-tipo-de-documentos-veremos",
    "href": "slides/01_presentacion.html#qué-tipo-de-documentos-veremos",
    "title": "Presentación del curso",
    "section": "¿Qué tipo de documentos veremos?",
    "text": "¿Qué tipo de documentos veremos?\n\nPrincipalmente informes/tutoriales, transparencias, páginas web y blogs, …\n\n\n\n… pero, Con Quarto se pueden generar documentos de muchos tipos (artículos académicos, libros, tesis, cartas, cuadros de mando, etc … etc …) y formatos (html, pdf, epub, docx, beamer, pptx, etc … etc …).\n\n\n\n\nPara verlo puedes visitar la Quarto gallery\n\n\n\n\nAlgunos ejemplos:\n\n\n\nTutoriales: por ejemplo este o este\nSlides: por ejemplo estas o estas\nPáginas web: por ejemplo esta, esta o esta\nBlogs: por ejemplo este o este"
  },
  {
    "objectID": "slides/01_presentacion.html#calendario-1",
    "href": "slides/01_presentacion.html#calendario-1",
    "title": "Presentación del curso",
    "section": "Calendario",
    "text": "Calendario\n\n\n\n\n\n\n\n\n\nDía\nTópico\n\n\n\n\n\n8 de julio (martes)\nPresentación\nPrimeros pasos\nAprendiendo a escribir en QMD\n\n(con slides 01)\n(con slides 02)\n(con slides 03)\n\n\n\n9 de julio (miércoles)\nSlides con Quarto\n\n(con slides 04)\n\n\n\n10 de julio (jueves)\nMi primer web/blog\n\n(con slides 05)\n\n\n\n16 de julio (miércoles)\nMás cosas con Quarto ❗\n\n(con slides 06)"
  },
  {
    "objectID": "slides/01_presentacion.html#sobre-mi-pedro-j.-pérez",
    "href": "slides/01_presentacion.html#sobre-mi-pedro-j.-pérez",
    "title": "Presentación del curso",
    "section": "Sobre mi (Pedro J. Pérez)",
    "text": "Sobre mi (Pedro J. Pérez)\n\nProfesor en la UV (departamento de Análisis Económico) y entusiasta de R. En mi web en la UV puedes ver algunos de mis cursos y blogs\n\n\n\nPor ejemplo, estos cursos:\n\nEconometría\nIntro a la Ciencia de datos con R (tenéis que ver los trabajos de los estudiantes)\nCurso de Introducción a R (en el SFPIE).\n\n\n\n\n\nNo soy bloguero, pero he impartido el taller Mi primer blog con Quarto y he creado y cerrado algunos blogs:\n\n2015, R & flowers , con Jekyll\n2018, R & flowers V, con Hugo y blogdown\n2020, R & flowers (o casi), con radix\n2021, pedro.j.perez blog’s, con Distill\n2022, R & flowers, con Quarto\n\n\n\n\nMi blog actual: 2024, R & flowers, con Quarto"
  },
  {
    "objectID": "slides/zz_sobre-mi.html#sobre-mi",
    "href": "slides/zz_sobre-mi.html#sobre-mi",
    "title": "Intro to Quarto (SFPIE, 2025)",
    "section": "Sobre mi",
    "text": "Sobre mi\n\n\nProfesor en la UV: Econometría e Intro a la Ciencia de datos con R\nEntusiasta de R\n\n\n\nNo soy “bloguero”, más bien soy creador y liquidador de blogs:\n\n2015, R & flowers , con Jekyll\n2018, R & flowers V, con Hugo y blogdown\n2020, R & flowers (o casi), con radix\n2021, pedro.j.perez blog’s, con Distill\n2022, R & flowers, con Quarto"
  },
  {
    "objectID": "slides/02_primeros_pasos.html#documentos-reproducibles",
    "href": "slides/02_primeros_pasos.html#documentos-reproducibles",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "Documentos ¿reproducibles?",
    "text": "Documentos ¿reproducibles?\n\nTodos tenemos que hacer documentos con algún contenido estadístico: informes o transparencias o ….\nAl usar Quarto y R, nuestros informes serán Reproducibles!!\n\n\n\n¿Cómo haremos estos documentos reproducibles?\n\n\n\n\nVisualmente haremos:"
  },
  {
    "objectID": "slides/02_primeros_pasos.html#investigación-reproducible",
    "href": "slides/02_primeros_pasos.html#investigación-reproducible",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "Investigación reproducible",
    "text": "Investigación reproducible\nEs un tema de creciente interés, por ejemplo aquí y aquí.\n\n\n\nReproducibility is the minimum standard in research quality. When with the same data and analysis we obtain the same results and we are able to check the results of others. – Why open science is just good science in a digital era.\n\n\n\n\n\nA core principle of good science is that results should be repeatable and reproducible by others. Unfortunately the misuse of data analysis, leading to unreliable results, is a known issue. – Tidyverse blog"
  },
  {
    "objectID": "slides/02_primeros_pasos.html#ventajas-de-la-investigación-reproducible",
    "href": "slides/02_primeros_pasos.html#ventajas-de-la-investigación-reproducible",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "Ventajas de la investigación reproducible",
    "text": "Ventajas de la investigación reproducible\n\n\n\n\n\nCredibilidad de los resultados\nFacilidad de replicar\nDetección de errores\nFacilita la colaboración\n\n\nEn estas slides puedes ver Some good practices for research with R.\n💬\n\n\nEjemplos de mala praxis: aquí y el error de Reinhart and Rogoff\nRetraction Watch\n\n\n\n\n\n\n\n\n\ncreo que todos estamos de acuerdo en que así es como se debe de hacer la ciencia. OK, pero es que en el día a día tb tiene ventajas"
  },
  {
    "objectID": "slides/02_primeros_pasos.html#ventajas-de-los-documentos-reproducibles",
    "href": "slides/02_primeros_pasos.html#ventajas-de-los-documentos-reproducibles",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "Ventajas de los documentos reproducibles",
    "text": "Ventajas de los documentos reproducibles\n\nUn documento reproducible provee a los usuarios todo lo necesario para reproducir (y confirmar) los resultados de este.\n\n\n\nLos mismos que la investigación reproducible:   credibilidad de los resultados,   facilidad de replicar,   detección de errores,   facilita la colaboración⁉️\n\n\n\n\nUn documento fuente puede generar documentos de varios tipos (tutoriales, slides, …)\n\n\n\n\nInformes periódicos (aquí una buena justificación)\nInformes parametrizados\n\n\n\n\nFacilidad de generación de páginas web (🤔)1\n\n\n\n\nGPT-4 y amigos generan webs fácilmente 🙀 🙀. Por ejemplo aquí, aquí y …"
  },
  {
    "objectID": "slides/02_primeros_pasos.html#documentos-reproducibles-más-ventajas",
    "href": "slides/02_primeros_pasos.html#documentos-reproducibles-más-ventajas",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "Documentos reproducibles: más ventajas",
    "text": "Documentos reproducibles: más ventajas\n\n\nSi incluyes código, se acaba el corta y pega para gráficos, tablas de resultados, etc…\n\n\n\n\nSi los datos cambian o si detectas un error en los datos o en otro elemento, no hay necesidad de rehacerlo todo\n\n\n\n\nGestión de las referencias bibliográficas\n\n\n\n\nGestión de las referencias a cuadros y gráficos\n\n\n\n\nForma sencilla ( 🤔 ) de cambiar el formato visual de tus documentos\n\n\n\n\nElementos interactivos. Por ejemplo aquí\n\n\n\n\nLos documentos .qmd son documentos de texto: control de versiones\n\n\n\n\nAhorras tiempo 🤔 🤔 🤔"
  },
  {
    "objectID": "slides/02_primeros_pasos.html#entorno-r-qué-son-quartorstudior",
    "href": "slides/02_primeros_pasos.html#entorno-r-qué-son-quartorstudior",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "Entorno R: ¿qué son Quarto/RStudio/R?",
    "text": "Entorno R: ¿qué son Quarto/RStudio/R?\n\n\n\nSon 3 programas de ordenador\n\nR es un lenguaje de programación y un entorno para hacer análisis estadísticos (y muchas más cosas)\nRStudio es un IDE (para usar R, y Quarto, de manera más eficiente y cómoda)\nQuarto es el que realmente hará los documentos, webs etc …\n\n\n\n\n\n\n\n\n⚠️ Importante!! sólo interactuaremos con RStudio\n\n\nNo “veremos” a R ni a Quarto.\nDaremos ordenes a R y Quarto a través de RStudio\nLa User Guide de RStudio\n\n\n[Más info aquí]"
  },
  {
    "objectID": "slides/02_primeros_pasos.html#instalación",
    "href": "slides/02_primeros_pasos.html#instalación",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "Instalación",
    "text": "Instalación\n\nTenemos que instalar los 3 programas.\n\n\n\nEn este orden:\n\nR: https://cran.r-project.org/\nRStudio: https://posit.co/download/rstudio-desktop/\nQuarto: https://quarto.org/docs/download/\n\n\n\n\nEn los 3 casos has de (lógicamente) utilizar el instalador adecuado para tu sistema operativo"
  },
  {
    "objectID": "slides/02_primeros_pasos.html#formas-de-dar-ordenes-a-r-usando-rstudio",
    "href": "slides/02_primeros_pasos.html#formas-de-dar-ordenes-a-r-usando-rstudio",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "2 formas de dar ordenes a R (usando RStudio)",
    "text": "2 formas de dar ordenes a R (usando RStudio)\n\nCon la ConsolaCon scripts ( o ficheros .R)\n\n\nAl abrir RStudio vemos (al ppio) 3 paneles\n\nLa Consola es el panel de la izquierda\nEl símbolo &gt; en la consola se llama prompt\n\n\n\n\n\n\n\n\n\n\n\nPara dar una orden a R (desde la consola) solo tienes que escribir la orden (p.ej. 2 + 2) y pulsar Enter\nInconveniente: hay que escribir y ejecutar las instrucciones una a una\n\n\n\n\n\nTarea 2.1: Dar ordenes a R (a través de RStudio) desde la Consola\n\n\nDesde la Consola de RStudio haz que R haga las siguientes operaciones:\n\n2 + 2\nsqrt(9)\n\n\n\n\n\n\n\n\n\nUn “script” no es más que un fichero (con extensión .R) que contiene instrucciones o código R\nPodemos crear un fichero .R siguiendo esta ruta de menús: File &gt; New file &gt; R Script.\nSe abrirá un cuarto panel en RStudio, justo encima de la Consola\nUna vez has creado el fichero, escribes la instrucción y pulsas las teclas CONTROL + Enter\nEn un script sólo se pueden escribir 2 cosas:\n\nComentarios (si la linea comienza por el símbolo #)\nCódigo R (todas las lineas que no empiezan por #)\n\n\n\n\n\nTarea 2.2: Dar ordenes a R con scripts\n\n\nCrea un script (o fichero .R) para que R haga las siguientes operaciones:\n\n\n# operaciones básicas con R\n2 + 2    \n2 - 2    \n2 * 2    \n2 / 2 \n\n# raíz cuadrada\nsqrt(9)"
  },
  {
    "objectID": "slides/02_primeros_pasos.html#qué-es-un-qproject",
    "href": "slides/02_primeros_pasos.html#qué-es-un-qproject",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "¿Qué es un Qproject?",
    "text": "¿Qué es un Qproject?\n\nEs simplemente una carpeta donde tendremos los “materiales” que necesitemos para uno de nuestros proyectos\n\n\n\nPero usarlos tiene ventajas. Puedes ver algunas en este post de Jenny Bryan\nPara nosotros, una ventaja importante consiste en que podremos usar rutas relativas\n\n\n\n\n\nEn realidad trabajar Con Qprojects tiene muchas más ventajas. Las iremos viendo."
  },
  {
    "objectID": "slides/02_primeros_pasos.html#cómo-se-crea-un-qproject",
    "href": "slides/02_primeros_pasos.html#cómo-se-crea-un-qproject",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "¿Cómo se crea un Qproject?",
    "text": "¿Cómo se crea un Qproject?\n\nEn RStudio has de seguir la siguiente ruta de menús: File &gt; New Project &gt; New Directory &gt; Quarto Project , y ponerle un nombre a la carpeta del Qproject.\n\n\n\n\n\nTarea 2.3: Creación de un Qproject\n\n\n\nSimplemente tienes que crear un Qproject que se llame “my_primer_qproject”\nMejor si creas el Qproject en el Escritorio\nMira cuantos archivos hay en la carpeta del proyecto"
  },
  {
    "objectID": "slides/02_primeros_pasos.html#dos-cosillas-sobre-los-qprojects",
    "href": "slides/02_primeros_pasos.html#dos-cosillas-sobre-los-qprojects",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "Dos cosillas sobre los Qprojects",
    "text": "Dos cosillas sobre los Qprojects\n\n\n\n¿Cómo abrirlos?\n\nSiempre desde el fichero con icono azulito y extensión .Rproj\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n¿Cómo saber si realmente estás dentro de un proyecto?\n\nEn la esquina superior-izquierda de tu RStudio verás el icono azulito junto al nombre de tu proyecto"
  },
  {
    "objectID": "slides/02_primeros_pasos.html#vamos-a-jugar-un-rato-con-rstudio",
    "href": "slides/02_primeros_pasos.html#vamos-a-jugar-un-rato-con-rstudio",
    "title": "Primeros pasos con R/RStudio y Quarto",
    "section": "Vamos a jugar un rato con RStudio",
    "text": "Vamos a jugar un rato con RStudio\n\n\n\nNos servirá para familiarizarnos con :\n\nla interfaz de Rstudio\nlos conceptos de documento fuente (.qmd) y documento final (.html, .pdf, etc…)\n\n\n\n\n… y empezar a entender la sintaxis de “Quarto Markdown”"
  },
  {
    "objectID": "slides/06_mas_cosas.html#con-quarto-se-pueden-hacer-muuuuchas-más-cosas",
    "href": "slides/06_mas_cosas.html#con-quarto-se-pueden-hacer-muuuuchas-más-cosas",
    "title": "Más cosas con Quarto",
    "section": "Con Quarto se pueden hacer muu🙀uuchas más cosas!!!",
    "text": "Con Quarto se pueden hacer muu🙀uuchas más cosas!!!\n\n\nVeamos algunas de ellas"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#qué-es-quarto-1",
    "href": "slides/03_aprendiendo_Qmd.html#qué-es-quarto-1",
    "title": "Aprendiendo a escribir en QMD",
    "section": "¿Qué es Quarto?",
    "text": "¿Qué es Quarto?\n\n\nUn nuevo sistema de publicación científica y técnica de código abierto basado en Pandoc\n\n\n\n\nQuarto no es un paquete, es un programa independiente, un CLI\n\n\n\n\nPermite incorporar texto y código para producir documentos (reproducibles) en múltiples formatos\n\n\n\n\nEs … la “segunda generación de Rmarkdown”\n\n\n\n\nMuy parecido a Rmarkdown, pero … no requiere R. Soporta lenguajes como Phyton, Julia y Observable.\nQuarto utiliza Knitr para ejecutar el código R; así que es capaz de procesar también los ficheros .Rmd sin modificarlos"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#section",
    "href": "slides/03_aprendiendo_Qmd.html#section",
    "title": "Aprendiendo a escribir en QMD",
    "section": "",
    "text": "Extensión: Ventajas de Quarto sobre RMD\n\n\n\nProyecto en desarrollo activo … mientras que Rmarkdown it’s not going away pero …\nQuarto unifica funcionalidades de varios paquetes del entorno Rmd como xaringan, bookdown, blogdown , …\nPor ejemplo: Cross references, Call-outs, Advanced Layout (tb para imágenes), Extensiones, Interactividad, YAML inteligence, Quarto Pub, Divs, Spans\nPara ver si estas ventajas merecen la pena para ti puedes leer a Occasional Divergences, Nick Tierney, Alison Hill, Danielle Navarro, Jumping Rivers o esta pregunta de Stack Overflow."
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#section-1",
    "href": "slides/03_aprendiendo_Qmd.html#section-1",
    "title": "Aprendiendo a escribir en QMD",
    "section": "",
    "text": "Extensión: ¿Qué es Rmarkdown? ¿Para qué sirve?\n\n\n\nEl predecesor de Quarto\nUn “entorno” para hacer informes/publicaciones/transparencias REPRODUCIBLES con R.\n\n\nIs an authoring framework for data science, combining your code, its results, and your prose. R Markdown documents are fully reproducible and support dozens of output formats, like PDFs, Word files, slideshows, and more.\n\n\nCon Rmd se pueden generar multitud de outputs. Por ejemplo, visita está galería o este listado\n\n\nUna oda a Rmarkdown\n\nHow Rmarkdown changed my life: charla de Rob Hyndman sobre su proceso hasta llegar a usar Rmarkdown para hacer sus documentos científicos y webs."
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#para-poder-practicar-lo-que-vayamos-aprendiendo",
    "href": "slides/03_aprendiendo_Qmd.html#para-poder-practicar-lo-que-vayamos-aprendiendo",
    "title": "Aprendiendo a escribir en QMD",
    "section": "Para poder practicar lo que vayamos aprendiendo …",
    "text": "Para poder practicar lo que vayamos aprendiendo …\n\n\n\n\nTarea 3.0: Vamos a crear un nuevo Qproject\n\n\n\nCierra RStudio\nCrea un nuevo Qproject llamado “my_qproject”\nBorra el archivo my_qproject.qmd\nCrea un archivo .qmd\nProcésalo y llámalo prueba_01.qmd"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#los-documentos-.qmd-tienen-3-4-partes",
    "href": "slides/03_aprendiendo_Qmd.html#los-documentos-.qmd-tienen-3-4-partes",
    "title": "Aprendiendo a escribir en QMD",
    "section": "Los documentos .qmd tienen 3-4 partes",
    "text": "Los documentos .qmd tienen 3-4 partes\n\nEncabezamiento (yaml header)\n\nTrozos de código R (R chunks)\n\nTexto (escrito en Markdown) …\n… y todo lo demás: imágenes, links, ecuaciones, etc …\n\n\n\nUn ejemplo\n\n\nsource code (escrito en QMD)\n\n\n\n\n\n\n\n\n\n\noutput"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#ii-chunks-los-chunks-pueden-tener-opciones.",
    "href": "slides/03_aprendiendo_Qmd.html#ii-chunks-los-chunks-pueden-tener-opciones.",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(II) Chunks: los chunks pueden tener opciones.",
    "text": "(II) Chunks: los chunks pueden tener opciones.\n\nPor ejemplo:\n\n\n\n\n\nLas principales opciones son:\n\n\n\n\nOpción\n(valor por defecto)\n¿Que hace?\n\n\n\n\necho\ntrue\nIncluye el código en el documento final\n\n\neval\ntrue\nEvalúa el código\n\n\nwarning\ntrue\nIncluye los avisos en el documento final\n\n\nmessage\ntrue\nIncluye los mensajes"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#ii-chunks-los-chunks-pueden-tener-opciones.-1",
    "href": "slides/03_aprendiendo_Qmd.html#ii-chunks-los-chunks-pueden-tener-opciones.-1",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(II) Chunks: los chunks pueden tener opciones.",
    "text": "(II) Chunks: los chunks pueden tener opciones.\n\n\n\nExtensión: hay más opciones para los chunks\n\n\n\n\n\n\n\n\n\n\nOpción\n(valor por defecto)\n¿Que hace?\n\n\n\n\noutput\ntrue\nIncluye el resultado de la evaluación del código\n\n\nerror\nfalse\nSi pones true, se mostrarán los errores (!!!!)\n\n\ninclude\ntrue\n\n\n\nlabel\n\nSi quieres poner label al chunk\n\n\n\n\n\nPuedes ver todas las opciones aquí 🙀"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#section-2",
    "href": "slides/03_aprendiendo_Qmd.html#section-2",
    "title": "Aprendiendo a escribir en QMD",
    "section": "",
    "text": "Extensión: más detalles sobre las opciones de los chunks\n\n\n\n\ninclude: si en un chunk pones  #| include: false , el código de ese chunk se ejecutará pero no se mostrará nada, ni el código, ni el resultado, ni mensajes, ni errores. Esta opción es útil, por ejemplo, para cargar los paquetes de R.\n\n\n\n #| label: setup : si un chunk se llama setup, este chunk se ejecutará siempre que ejecutes otro chunk del mismo documento. Esta opción suele usarse para cargar los paquetes necesarios para un análisis, de formas que estos siempre estén disponibles cuando ejecutes otro chunk. Esto puede ser una buena práctica."
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#section-3",
    "href": "slides/03_aprendiendo_Qmd.html#section-3",
    "title": "Aprendiendo a escribir en QMD",
    "section": "",
    "text": "Extensión: dos detalles más sobre opciones de los chunks\n\n\n\n\n #| output: asis : permite generar raw-markdown. Un ejemplo aquí\n\n\n\necho: además de los típicos true y false, ahora incorpora nuevos valores, como  #| echo: fenced , que facilita mostrar las marcas de los chunks en el documento final, o la opción  #| echo: […]  que permite mostrar sólo algunas de las lineas de código del chunk. Documentación aquí y aquí."
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#ii-chunks-opciones-de-los-chunks-en-el-yaml",
    "href": "slides/03_aprendiendo_Qmd.html#ii-chunks-opciones-de-los-chunks-en-el-yaml",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(II) Chunks: opciones de los chunks en el YAML",
    "text": "(II) Chunks: opciones de los chunks en el YAML\n\nEn el YAML, podemos fijar los valores por defecto de las opciones de los chunks\n\n\n\nSe han de poner anidadas dentro de execute:\n\n\n\n\nPor ejemplo:\n\n\n.Qmd (chunk options en el chunk)\n\n\n\n\n\n\n.Qmd (chunk options en el yaml)"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#ii-chunks-más-opciones-de-knitr",
    "href": "slides/03_aprendiendo_Qmd.html#ii-chunks-más-opciones-de-knitr",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(II) Chunks: Más opciones de knitr",
    "text": "(II) Chunks: Más opciones de knitr\n\nSi usamos knitr para ejecutar los chunks, entonces podemos usar todas las opciones nativas de knitr, como: collapse, fig.width, comment, etc … Más información aquí. Un ejemplo:\n\n\n\nSi quieres ver todas las opciones disponibles para los chunks en knitr tendrás que ir a la página web de knitr, a la cheat sheet sobre Rmarkdown, o a la Reference Guide"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#section-4",
    "href": "slides/03_aprendiendo_Qmd.html#section-4",
    "title": "Aprendiendo a escribir en QMD",
    "section": "",
    "text": "Extensión: Mi chunk de setup en RMD\n\n\n```{r chunk-setup, include = FALSE}\nknitr::opts_chunk$set(echo = TRUE, eval = TRUE, message = FALSE, warning = FALSE,\n                      #results = \"hold\",\n                      cache = FALSE, cache.path = \"/caches/\", comment = \"#&gt;\",\n                      #fig.width = 7, #fig.height= 7,\n                      #out.width = 7, out.height = 7,\n                      collapse = TRUE,  fig.show = \"hold\",\n                      fig.asp = 7/9, out.width = \"60%\", fig.align = \"center\")\n\noptions(scipen = 999) #- para quitar la notación científica\n```\n\n\n\n\n\nLas opciones del chunk de setup, en el YAML quedarían como:\n\n---\ntitle: \"My Document\"\nexecute:\n  echo: true\nknitr:\n  opts_chunk: \n    results: \"hold\"\n    collapse: true\n    comment: \"#&gt;\" \n    fig.asp: 7/9, \n    out.width: \"60%\"\n    fig.align: \"center\"\n    fig.show: \"hold\"\n    R.options:\n      scipen: 999  #- para quitar la notación científica\n---"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#ii-chunks-otras-opciones-de-quarto-para-los-chunks",
    "href": "slides/03_aprendiendo_Qmd.html#ii-chunks-otras-opciones-de-quarto-para-los-chunks",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(II) Chunks: otras opciones de Quarto para los chunks",
    "text": "(II) Chunks: otras opciones de Quarto para los chunks\nAhora, en Quarto, hay más opciones para los chunks. Documentación oficial aquí. Por ejemplo:\n\n\n\nHacer folding code con #| code-fold: true\n\nPuedes combinarlo con #| code-summary: \"Para ver el código, pincha\"\n\n\n\n\n\n\nSi el código es muy largo, puedes usar #| code-overflow: wrap (o scroll)\n\n\n\n\n\nPuedes hacer que se muestren los números de linea con #| code-line-numbers: true\n\n\n\nTodas estas opciones también pueden ir en el YAML."
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#ii-chunks-code-annotation",
    "href": "slides/03_aprendiendo_Qmd.html#ii-chunks-code-annotation",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(II) Chunks: Code annotation",
    "text": "(II) Chunks: Code annotation\n\nDesde Quarto 1.3 podemos incluir en los chunks line-based annotations. Documentación aquí. Por ejemplo:\n\n\n\n\nEl código:\n\n```r\nlibrary(tidyverse)\nlibrary(palmerpenguins)\npenguins |&gt;                                      # &lt;1&gt;\n  mutate(                                        # &lt;2&gt;\n    bill_ratio = bill_depth_mm / bill_length_mm, # &lt;2&gt;\n    bill_area  = bill_depth_mm * bill_length_mm  # &lt;2&gt;\n  )                                              # &lt;2&gt;\n```\n1. Take `penguins`, and then,\n2. add new columns for the bill ratio and bill area.\n (*) (faltan las {} en el chunk)\n\n\nEl resultado:\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n1penguins |&gt;\n2  mutate(\n    bill_ratio = bill_depth_mm / bill_length_mm,\n    bill_area  = bill_depth_mm * bill_length_mm\n  )\n\n\n1\n\nTake penguins, and then,\n\n2\n\nadd new columns for the bill ratio and bill area."
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#ii-código-inline-code",
    "href": "slides/03_aprendiendo_Qmd.html#ii-código-inline-code",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(II) Código: inline code",
    "text": "(II) Código: inline code\n\nLa mayoría del código suele ir en los chunks, pero a veces necesitamos inline code ; es decir, código R dentro de nuestro texto.\n\n\n\nPor ejemplo\n\nSi quiero describir un conjunto de datos puedo hacerlo escribiendo: “El data.frame iris tiene 150 filas y 5 variables”\nPero es mejor hacerlo con inline code. Para ello tienes que poner el código R dentro de estas marcas: `r `\nHabría que escribirlo así:\n\nEl data.frame iris tiene  `r nrow(iris)` filas y  `r ncol(iris)` variables.\n\n\n\n\nDocumentación oficial de Quarto aquí. (No hay mucho más)"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#ii-chunks-bloques-de-código-no-ejecutables",
    "href": "slides/03_aprendiendo_Qmd.html#ii-chunks-bloques-de-código-no-ejecutables",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(II) Chunks: bloques de código no ejecutables",
    "text": "(II) Chunks: bloques de código no ejecutables\n\nHemos visto que podemos incluir código R en nuestro .qmd.\nEl código R normalmente es ejecutado por el paquete knitr. Para ello hay que usar estas marcas:\n\n```{r}\n2 + 2\n```\n\n\n\nPero, además, como estamos usando Markdown, podemos incorporar en nuestro .qmd bloques de código no ejecutables.\nSe usan las mismas marcas  ``` , pero sin las llaves:\n\n```r\n2 + 2\n```\n\n\nPandoc soporta syntax highlighting para cerca de 140 different languages. si no estuviese el lenguaje que necesitas, usa el default language.\nDocumentación oficial aquí.\n\n\n\n\n\nTarea 3.6: bloques de código no ejecutable\n\n\n\nUtiliza el archivo prueba_01.qmd para incorporar:\n\nun bloque de código R no ejecutable\nun bloque de código Phyton no ejecutable"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#section-5",
    "href": "slides/03_aprendiendo_Qmd.html#section-5",
    "title": "Aprendiendo a escribir en QMD",
    "section": "",
    "text": "Extensión: diferencias entre Quarto y Rmd\n\n\n\nNo hace falta chunk inicial: con Quarto se pueden poner las opciones de los chunks en el YAML\nEn ficheros .qmd, las opciones de los chunks se pueden especificar globalmente en el YAML y a nivel individual en cada uno de los chunks.\nEn los chunks individuales ahora se se utiliza la sintaxis YAML (key: value) en lineas dentro del chunk que empiezan con #|. Por ejemplo:\n\n\n\n\n\n\n\nUn ejemplo (diferencias .qmd vs. .Rmd):\n\n\n\n.qmd\n\n\n\n\n\n\n.Rmd"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#section-6",
    "href": "slides/03_aprendiendo_Qmd.html#section-6",
    "title": "Aprendiendo a escribir en QMD",
    "section": "",
    "text": "Extensión: convertir de Rmarkdown a Quarto\n\n\nEsta perfectamente bien explicado por Thomas Mock aquí y aquí pero, por si alguna vez desaparecen sus slides, lo replicaré aquí.\n\n\nLa mayoría de las veces, Quarto puede procesar los ficheros .Rmd, pero si quieres convertirlos a .qmd\n\nCambia la extensión del fichero de .Rmd a .qmd\nCambia la sintaxis del yaml:\n\nen lugar de output: html_document ahora es format: html\n\nPuedes convertir los chunks de código a la sintáxis actual con:\n\nknitr::convert_chunk_header(\"doc.qmd\", output = identity)"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iii-texto-qué-narices-es-esto-de-markdown",
    "href": "slides/03_aprendiendo_Qmd.html#iii-texto-qué-narices-es-esto-de-markdown",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(III) Texto: ¿qué narices es esto de Markdown?",
    "text": "(III) Texto: ¿qué narices es esto de Markdown?\n\n\nEs un lenguaje de marcas diseñado para escribir fácilmente para la web y que también sea fácilmente legible.\n\n\n\n\nMarkdown es un lenguaje estoico para escribir (para la web)\n\n\n\n\nMarkdown fue creado por John Grueber y Aaron Swartz en 2004. Para saber más sobre Aaron Swartz puedes ver este documental.\nSe creó con el objetivo de crear un formato de texto fácil de escribir y leer y que se convirtiera fácilmente en .html\n\nMarkdown is a text-to-HTML conversion tool for web writers.\n\n\n\n\n\nLa ventaja de escribir en Markdown es que es un lenguaje muy fácil de aprender y que, como está basado en un formato de texto plano, es y será compatible con la mayoría de plataformas.\n\n\n\n\nEn este otro tutorial de Markdown, se puede leer lo siguiente:\n\n\nMarkdown is a way to write for the web. It’s written in what nerds like to call “plaintext”. Plaintext is just the regular alphabet, with a few familiar symbols. Unlike cumbersome word processing applications, text written in Markdown can be easily shared between computers, mobile phones, and people. It’s quickly becoming the writing standard for academics, scientists, writers, and many more. Websites like GitHub and reddit use Markdown to style their comments."
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iii-texto-ideas-básicas-otra-vez",
    "href": "slides/03_aprendiendo_Qmd.html#iii-texto-ideas-básicas-otra-vez",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(III) Texto: ideas básicas (otra vez)",
    "text": "(III) Texto: ideas básicas (otra vez)\n\nEn los documentos .qmd, “todo” lo que no es el yaml o un chunk, es texto.\nEn Quarto el texto se escribe en Markdown\nComo Quarto se basa en pandoc, se usa “Pandoc`s markdown”, una versión revisada y extendida de la propuesta original de Grueber\n\n\n\nTienes una fantástica guía de Markdown aquí, y aquí una cheatsheet."
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iii-texto-dando-formato-al-texto",
    "href": "slides/03_aprendiendo_Qmd.html#iii-texto-dando-formato-al-texto",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(III) Texto: Dando formato al texto",
    "text": "(III) Texto: Dando formato al texto\n\n\nSintaxis básica de markdown\n\n\n\n\n\n\n\n\nSi escribes esto:\nSe verá esto:\n\n\n\n\ntexto normal\ntexto normal\n\n\ntexto en **negrita**\ntexto en negrita\n\n\ntexto en *cursiva*\ntexto en cursiva\n\n\nun superíndice^2^\nun superíndice2\n\n\nun subíndice~2~\nun subíndice2\n\n\npalabras ~~tachadas~~\npalabras tachadas\n\n\n`verbatim code`\nverbatim code\n\n\n&gt; un blockquote\n\nun blockquote"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iii-texto-dando-formato-al-texto-1",
    "href": "slides/03_aprendiendo_Qmd.html#iii-texto-dando-formato-al-texto-1",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(III) Texto: Dando formato al texto",
    "text": "(III) Texto: Dando formato al texto\n\nMás posibilidades:\n\n\n\n\n\n\n\n\nSi escribes esto:\nSe verá esto:\n\n\n\n\n[texto subrayado]{.underline}\ntexto subrayado\n\n\n&lt;mark&gt;texto destacado&lt;/mark&gt;\ntexto destacado\n\n\n[En versalita]{.smallcaps}\nEn versalita\n\n\nel emoji :joy:\nel emoji 😂\n\n\n&gt; :warning: **Cuidado!!** no\n\n⚠️ Cuidado!! no\n\n\n\n\n\n\n\n\n\n(**) Los emojis mejor desde el editor visual o copiándolos, por ejemplo, desde aquí o desde la Emojipedia"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iii-texto-notas-al-píe",
    "href": "slides/03_aprendiendo_Qmd.html#iii-texto-notas-al-píe",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(III) Texto: Notas al píe",
    "text": "(III) Texto: Notas al píe\nHay 2 sintaxis: inline y no-inline. En las 2 se usa la marca ^[]\n\n\n\nIn-line: se llama in-line porque el contenido de la nota al pie se entremezcla con el contenido principal del texto. El contenido de la nota al pie se pone dentro de los corchetes. Esta es la sintaxis que yo uso. Abajo tienes un ejemplo:\n\nQuiero incluir una nota al pie en esta frase, concretamente aquí^[Este es el contenido de la nota al pie, \nComo ves el contenido de la nota al pie va dentro de los corchetes], para poder explicar algo con más detalle.\n\n\n\n\nNo-inline: el contenido de la nota al pie no va dentro del corchete sino en una linea aparte. Abajo tienes un ejemplo:\n\nAquí voy a poner otra nota al píe [^1] , y otra más aquí[^b]\n\n[^1]: Esta otra sintaxis me gusta menos. Pero igual es más clara\n\n[^b]: No sufras por la numerácion. lo hará Pandoc!!\n\n\n\n\nDocumentación oficial aquí"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iii-texto-títulos",
    "href": "slides/03_aprendiendo_Qmd.html#iii-texto-títulos",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(III) Texto: Títulos",
    "text": "(III) Texto: Títulos\n\n\n\n\n\n\n\n\n\nMarkdown:\nSe verá esto:\n\n\n\n\n# Header 1\nHeader 1\n\n\n## Header 2\nHeader 2\n\n\n### Header 3\nHeader 3\n\n\n#### Header 4\nHeader 4\n\n\n##### Header 5\nHeader 5\n\n\n###### Header 6\nHeader 6"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iii-texto-creando-listas",
    "href": "slides/03_aprendiendo_Qmd.html#iii-texto-creando-listas",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(III) Texto: Creando listas",
    "text": "(III) Texto: Creando listas\n\n\nEn las listas es crucial la indentación (2 espacios). Documentación aquí, aquí y aquí"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iii-texto-creando-listas-1",
    "href": "slides/03_aprendiendo_Qmd.html#iii-texto-creando-listas-1",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(III) Texto: Creando listas",
    "text": "(III) Texto: Creando listas\n\n\n\nLista ordenada\n\n1. First item\n2. Second item\n3. Third item  \n    3.1. Indented item  \n    3.2. Indented item  \n4. Fourth item \n\n\nLista no ordenada\n\n- First item\n- Second item\n- Third item\n    - Indented item\n    - Indented item\n- Fourth item \n\n\n\nAquí puedes ver muchos más ejemplos."
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iii-texto-párrafos",
    "href": "slides/03_aprendiendo_Qmd.html#iii-texto-párrafos",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(III) Texto: Párrafos",
    "text": "(III) Texto: Párrafos\n\n\nPara crear un nuevo párrafo has de dejar una (o más) lineas en blanco\n\n\n\n\nPara crear más espacio entre párrafos; es decir, añadir una linea en blanco extra, podemos usar uno o varios: &lt;br&gt; o &lt;br&gt;&lt;br&gt;\n\n\n\n\nDentro de un párrafo\n\nSi dentro de un párrafo necesitas que una frase empiece en otra linea entonces, has de dejar 2 (o más) espacios al final; en inglés esto se conoce como un “hard line break”\n\n\n\n\n\nExtensión: más formas de crear “hard line breaks”\n\n\n\nEl “hard line break” también se puede hacer con &lt;br&gt;\nEl “hard line break” también se puede hacer con \"\\\" seguido de nueva linea.\nEn una tabla, \\ es la única forma de crear un salto de línea, ya que se ignoran los espacios finales en las celdas."
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iii-texto-lineas-espacios",
    "href": "slides/03_aprendiendo_Qmd.html#iii-texto-lineas-espacios",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(III) Texto: Lineas, espacios, …",
    "text": "(III) Texto: Lineas, espacios, …\n\n\nSi en una linea de texto hay 2 espacios o más, estos se reducen a un espacio.\n\n\n\n\n\n\nExtensión: ¿cómo dejar más espacio entre palabras?\n\n\n\nPor lo tanto, si quieres separar palabras con más de un espacio, tendrás que usar lo que en html se conoce como “entities”: &ensp;(2 espacios) y &emsp;(4 espacios).\nOtra forma sería con la etiqueta &lt;pre&gt;.\n\n&lt;pre&gt;\nHola             amigos   !!!!\n&lt;/pre\n\n\n\n\n\n\n\n\n\nExtensión: un detalle que a veces es útil\n\n\n\nLos espacios al principio de las lineas que empiezan con | se mantienen (🤓)\n\n\n\n\n\n\n\n\n\n\nExtensión: “non-breaking spaces”\n\n\n\nLos “non-breaking spaces” se utilizan para asegurarte de que las palabras que están a los lados del non-breaking-space no se separen en lineas diferentes.\nEn markdown, puedes insertar un “non-breaking-space” con CRTL + SPACE. Documentación oficial para Quarto aquí\nUn non-breaking space, también conocido como espacio duro, es un carácter especial utilizado en tipografía y maquetación de textos para indicar un espacio que no debe ser separado en líneas diferentes. . Son útiles en casos donde se quiere mantener unidas palabras o elementos que deben permanecer juntos visualmente, por ejemplo en números de teléfono, siglas, fechas, etc …\nEn HTML, se representa con el código &nbsp; o &#160;"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-hyper-links",
    "href": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-hyper-links",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(IV) Más elementos: hyper-links",
    "text": "(IV) Más elementos: hyper-links\n\n\n\n\n Si escribes esto:\nAl procesarse se verá esto:\n\n\n\n\n&lt;https://quarto.org&gt;\nhttps://quarto.org\n\n\n [Web de Quarto](https://quarto.org)\nWeb de Quarto\n\n\n\n\n\n\n\n\n\n\n\n\nExtensión: Cómo hacer que los links se abran en nueva página. Documentación oficial aquí\n\n\nSi quieres que la página enlazada se abra en otra pestaña del navegador puedes:\n\nAñadir {target=\"_blank\"}, con lo que nuestros enlaces quedarían como:\n\n[Web de Quarto](https://quarto.org){target=\"_blank\"}\n\n\nEspecificarlo en el YAML con link-external-newwindow: true\n\n\n\nA partir de la versión 1.3 de Quarto también se permite con los enlaces internos de una web; es decir, con los enlaces que figuran en el fichero _quarto.yml. Puedes leerlo aquí. Solo hay que especificar en el fichero _quarto.yml la opción target: _blank. Por ejemplo:\n\nwebsite:\nnavebar:\n  right:\n    - text: \"Materiales\"\n      href: materiales.qmd        \n    - text: \"Blog\"\n      href: blog.qmd  \n      target: _blank"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-links-internos",
    "href": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-links-internos",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(IV) Más elementos: links-internos",
    "text": "(IV) Más elementos: links-internos\n\nEn un documento .qmd puede haber links a secciones del propio documento. Por ejemplo, podemos poner un “internal link” a una sección creada con ## Mis conclusiones con: [Link a Mis conclusiones](#mis-conclusiones)\n\nDocumentación oficial para las anchor-sections aquí y documentación de Pandoc aquí\n\n\n\n\nSi lo que queremos es poner un link a otra página (de la propia web o blog) tendremos que hacerlo por ejemplo con:\n\n[link a una página en la misma carpeta](otra-pagina.qmd)\n\n[link a una página que está en una subcarpeta](sub-carpeta/otra-pagina.qmd)\n\n[página en una subcarpeta si mi página está en otra subcarpeta](../otra-sub-carpeta/otra-pagina.qmd)\n\n\nSi además quieres que el link se abra en otra pestaña, ya sabes que puedes añadir {target=\"_blank\"}"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-imágenes",
    "href": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-imágenes",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(IV) Más elementos: Imágenes",
    "text": "(IV) Más elementos: Imágenes\n\nDocumentación oficial aquí\n\n![](imagenes/imagen_ababol.jpg){fig-align=\"left\" width=\"12%\"}\n\n\n\n\n\n![](./imagenes/imagen_ababol.jpg){ fig-align=\"right\" width=\"20%\"}\n\n\n\n\n\n\nPuedes ver como hacer composiciones de imágenes en el blog, concretamente aquí, además de cuestiones como el tamaño y aspecto de las imágenes."
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-imágenes-generadas-con-código",
    "href": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-imágenes-generadas-con-código",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(IV) Más elementos: Imágenes generadas con código",
    "text": "(IV) Más elementos: Imágenes generadas con código\n\nDocumentación para fijar el tamaño aquí\n\n\n\n```{r}\n#| label: fig-penguins-01\n#| fig-cap: Gráfico con datos de pingüinos\n#| fig-width: 7\n#| fig-asp: 0.618\n#| output-location: column-fragment\n#| code-line-numbers: \"2|3|4-5|6|7\"\nlibrary(tidyverse)\nlibrary(palmerpenguins)\npp &lt;- ggplot(penguins,aes(\n    x = bill_length_mm, y = bill_depth_mm,\n    color = species, shape = species)) +  \n  geom_point() +\n  theme_minimal() +\n  labs(x = \"Bill length (mm)\", y = \"Bill depth (mm)\")\n\npp\n```\n\n\n\n\n\n\n\n\nFigura 1: Gráfico con datos de pingüinos"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-tablas-con-markdown",
    "href": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-tablas-con-markdown",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(IV) Más elementos: Tablas con Markdown",
    "text": "(IV) Más elementos: Tablas con Markdown\n\nDocumentación oficial de Quarto para tablas (creadas con sintaxis Markdown) aquí\n\n\n\n\n\nSi escribes esto:\n\n| Default | Left | Right | Center |\n|---------|:-----|------:|:------:|\n| 12      | 12   |    12 |   12   |\n| 123     | 123  |   123 |  123   |\n| 1       | 1    |     1 |   1    |\n\n: Título de la tabla\n\n\n\nGenerará lo siguiente:\n\nTítulo de la tabla\n\n\nDefault\nLeft\nRight\nCenter\n\n\n\n\n12\n12\n12\n12\n\n\n123\n123\n123\n123\n\n\n1\n1\n1\n1\n\n\n\n\n\n\n\n\nComo ves no es fácil-fácil generar tablas con Mardown pero, puedes usar un generador de tablas, por ejemplo este o este. También se puede usar el editor visual de Rstudio"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-tablas-con-r",
    "href": "slides/03_aprendiendo_Qmd.html#iv-más-elementos-tablas-con-r",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(IV) Más elementos: Tablas con R",
    "text": "(IV) Más elementos: Tablas con R\n\nR tiene muchos paquetes para hacer tablas.\nPor ejemplo:   knitr::kable(df), o  gt::gt(df), o   DT::datatable(df) …\n\n\n\nUn ejemplo sencillo:\n\n\nhead(iris) |&gt;  gt::gt()\n\n\n\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n\n\n\n\n\n\n\nSi te interesa el tema de las tablas puedes visitar esto o esto o esto"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#iii-más-elementos-ecuaciones",
    "href": "slides/03_aprendiendo_Qmd.html#iii-más-elementos-ecuaciones",
    "title": "Aprendiendo a escribir en QMD",
    "section": "(III) Más elementos: Ecuaciones",
    "text": "(III) Más elementos: Ecuaciones\n\nMarkdown admite ecuaciones escritas en Latex:\n\nsi van entre un $ serán ecuaciones inline\n$$ para ecuaciones independientes.\n\n\n\n\n\n\n\n\n\n\nMarkdown Syntax\nOutput\n\n\n\n\necuación inline: $E = mc^{2}$\necuación inline: \\(E=mc^{2}\\)\n\n\necuación independiente:\n\n$$E = mc^{2}$$\necuación independiente:\n\\[E = mc^{2}\\]\n\n\n\n\n\n\nTienes editores online de ecuaciones en Latex aquí y aquí. Puedes ver algunos ejemplos de ecuaciones escritas en Latex aquí\nAdemás, podemos reusar el código Latex de ecuaciones en la web (si se ha usado MathJax). Por ejemplo aquí"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#editor-visual-en-rstudio",
    "href": "slides/03_aprendiendo_Qmd.html#editor-visual-en-rstudio",
    "title": "Aprendiendo a escribir en QMD",
    "section": "Editor Visual en RStudio",
    "text": "Editor Visual en RStudio\n\nDesde 2020, concretamente desde la versión v.1.4, RStudio dispone de un editor visual\nEl editor visual facilita la inserción de los elementos que hemos ido viendo durante el curso. Documentación oficial aquí y aquí\n\n\n\n\n\nHasta ahora hemos trabajado en nuestros QMD en formato “Source”, pero podemos cambiar el modo de edición a “Visual”, solo hay que seleccionar la pestaña adecuada:"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#editor-visual-modo-de-edición",
    "href": "slides/03_aprendiendo_Qmd.html#editor-visual-modo-de-edición",
    "title": "Aprendiendo a escribir en QMD",
    "section": "Editor Visual: Modo de edición",
    "text": "Editor Visual: Modo de edición\n\nEdición en modo Visual:En modo Source:"
  },
  {
    "objectID": "slides/03_aprendiendo_Qmd.html#editor-visual-barra-de-herramientas",
    "href": "slides/03_aprendiendo_Qmd.html#editor-visual-barra-de-herramientas",
    "title": "Aprendiendo a escribir en QMD",
    "section": "Editor Visual: Barra de herramientas",
    "text": "Editor Visual: Barra de herramientas\nLa barra de herramientas del editor visual facilita el acceso a la mayoría de elementos que podemos insertar en nuestros documentos QMD:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEsto facilita la entrada a los documentos QMD\nEn algunos casos como imágenes y ciertas tablas, solo hay que arrastrar (o copiar y pegar) el contenido y aparecerá en nuestro documento fuente con la sintaxis adecuada.\nAlgunas referencias: Exploring RStudio’s Visual Markdown Editor, RStudio: el Nuevo Editor Visual"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bienvenidos al curso!!!",
    "section": "",
    "text": "Bienvenidos a la web del curso “Creación de documentos reproducibles y webs con R y Quarto” del SFPIE, Universitat de València, edición de 2025. Un título más amable del curso podría ser “Escribiendo con R y Quarto”.\n\nEn el curso usaremos Quarto y R a través de RStudio. En Info tienes las instrucciones de instalación de los 3 programas.\n\n\nLos detalles sobre el curso (horario, aula, …) están en Info.\nLos materiales que usaremos en clase están en Materiales.\nPuedes encontrar recursos adicionales en Blog y Truquillos\n\n\nNos vemos pronto en el Aula 0.1 del SFPIE (Centro de Formación y Calidad Manuel Sanchis Guarner, Campus de Tarongers)"
  },
  {
    "objectID": "info.html",
    "href": "info.html",
    "title": "Intro to Quarto (SFPIE, 2025)",
    "section": "",
    "text": "El curso es una introducción a Quarto, un nuevo sistema para generar publicaciones (libros, transparencias, blogs, webs, etc…) científicas y técnicas. Puedes ver ejemplos en esta Gallery.\nForma parte de la oferta del SFPIE de la Universitat de València. La ficha oficial del curso está aquí.\nEn el curso usaremos R, y fundamentalmente Quarto, a través del IDE RStudio.\nSe recomienda tener instaladas versiones recientes de los 3 programas. Tienes instrucciones de instalación más abajo\nEl aula del curso no tiene ordenadores, así que es necesario acudir al curso con tu propio ordenador. Además, es conveniente que traigas un ratón: piensa que buena parte de los errores que cometeremos se deberán a la precisión en copy-paste. Evitémoslo!!\nLos materiales que usaremos están en Materiales."
  },
  {
    "objectID": "info.html#información-sobre-el-curso",
    "href": "info.html#información-sobre-el-curso",
    "title": "Intro to Quarto (SFPIE, 2025)",
    "section": "",
    "text": "El curso es una introducción a Quarto, un nuevo sistema para generar publicaciones (libros, transparencias, blogs, webs, etc…) científicas y técnicas. Puedes ver ejemplos en esta Gallery.\nForma parte de la oferta del SFPIE de la Universitat de València. La ficha oficial del curso está aquí.\nEn el curso usaremos R, y fundamentalmente Quarto, a través del IDE RStudio.\nSe recomienda tener instaladas versiones recientes de los 3 programas. Tienes instrucciones de instalación más abajo\nEl aula del curso no tiene ordenadores, así que es necesario acudir al curso con tu propio ordenador. Además, es conveniente que traigas un ratón: piensa que buena parte de los errores que cometeremos se deberán a la precisión en copy-paste. Evitémoslo!!\nLos materiales que usaremos están en Materiales."
  },
  {
    "objectID": "info.html#horario-y-aula",
    "href": "info.html#horario-y-aula",
    "title": "Intro to Quarto (SFPIE, 2025)",
    "section": "Horario y aula",
    "text": "Horario y aula\n\n\n\n\n\n\n\n\n\n\n\n\n\nDía\nHora\nLugar\n\n\n\n8 de julio (martes)\n10:00 a 14:00\nAula 0.1 (SFPIE, Campus Tarongers)\n\n\n9 de julio (miércoles)\n10:00 a 14:00\nAula 0.1 (SFPIE, Campus Tarongers)\n\n\n10 de julio (jueves)\n10:00 a 14:00\nAula 0.1 (SFPIE, Campus Tarongers)\n\n\n16 de julio (miércoles)\n10:00 a 13:00\nAula 0.1 (SFPIE, Campus Tarongers)\n\n\n\n\nLas clases se desarrollarán en el Campus de Tarongers, concretamente en el aula 0.1 del SFPIE (Servicio de Formación Permanente e Innovación Educativa) de la Universitat de València.\nEl SFPIE está en el edificio “Centro de Formación y Calidad Manuel Sanchis Guarner” que está en la C/ Serpis, 29, 46022 València. Tienes un mapa de Google aquí, y aquí la web del centro."
  },
  {
    "objectID": "info.html#programas-instalación",
    "href": "info.html#programas-instalación",
    "title": "Intro to Quarto (SFPIE, 2025)",
    "section": "Programas (instalación)",
    "text": "Programas (instalación)\n\n\n\n\n\n\nInstalación de R, RStudio y Quarto\n\n\n\n\n\n\nEn el curso usaremos 3 programas: R, RStudio y Quarto, así que tenemos que instalarlos\n\nHas de instalar los programas en este orden:\n\nR: https://cran.r-project.org/\nRStudio: https://posit.co/download/rstudio-desktop/\nQuarto: https://quarto.org/docs/download/\n\n\nSolamente has de descargar las versiones de los instaladores adecuadas para tu sistema operativo\n\n\n\n\n\n\n\n\n\n\n\nInstalación de paquetes\n\n\n\n\n\n\nEn el curso también usaremos algunos paquetes de R, así que habrá que instalarlos\nLos paquetes se han de instalar una vez hayas instalado los 3 programas (R, RStudio y Quarto)\nOs ayudaré a instalar los paquetes en clase, así que no os preocupéis por ellos ahora\n\n\n\n\n\n\n\n\n\n\n¿Cómo instalar los paquetes?\n\n\n\n\n\nRecuerda que os enseñaré a instalar los paquetes en clase, pero si quieres ir adelantando trabajo, aquí tienes las instrucciones:\n\n\nAlgunos paquetes se han de compilar por lo que hay que tener las herramientas necesarias, así que:\n\nSi usas Windows instalaremos Rtools. Aquí puedes descargarte el instalador adecuado. Durante el proceso de instalación asegúrate de marcar la casilla que pone “add Rtools to the system PATH”.\nSi tienes un Mac, tendrás que instalar the Xcode Command Line Tools. Lo normal es que lo tengas ya instalado, si no fuese el caso, aquí te explican como hacerlo. Además, como nos cuentan aquí, si tienes un Mac, es conveniente instalar XQuartz, para ello sólo tienes que buscar el instalador en https://www.xquartz.org/\n\n\nFinalmente, para instalar los paquetes que usaremos durante el curso tendremos que ejecutar las siguientes instrucciones:\n\n\nCódigo para instalar los paquetes#- instalación de paquetes ---------------------------------\n\ninstall.packages(\"pak\")\n\npak::pak(c(\"tidyverse\", \"ggtext\",  \"curl\", \"irlba\", \"widyr\", \"markdown\", \"gt\", \"maps\", \"mapproj\", \"DT\", \"reactable\"))\n\npak::pak(c(\"showtext\", \"glue\",  \"plotly\", \"fs\", \"countrycode\", \"here\", \"quarto\"))\n\npak::pak(c(\"webexercises\"))\n\npak::pak(c(\"perezp44/pjpv.curso.R.2022\"))\n\n\n\n\n\n\n\n\n\n\n\nMás cosas sobre instalación R\n\n\n\n\n\nLo que hay en esta sección no tienes porqué ejecutarlo, es sólo para tenerlo a mano por si nos hiciese falta durante el curso\n\nPara chequear qué versiones del software tienes instaladas, podemos usar en la TERMINAL el siguiente código:\n\nR --version         #- 4.5\nrstudio --version   #- 2025.06\nquarto --version    #- 1.7\n\nPara chequear si tu sistema está preparado to build packages:\n\ndevtools::has_devel()    #- Your system is ready to build packages!\n\nPara instalar tinytext & friends, desde la TERMINAL:\n\nquarto install tool tinytext\nquarto install tinytex --update-path\nquarto install tool chromium\n\nPara editar preferencias de RStudio\n\nusethis::edit_rstudio_prefs()\nusethis::use_blank_slate()"
  },
  {
    "objectID": "blog/20_referencias-bibliograficas.html",
    "href": "blog/20_referencias-bibliograficas.html",
    "title": "Referencias bibliográficas",
    "section": "",
    "text": "Gestionar y poner en el formato adecuado las referencias bibliográficas no es muy divertido; una forma de hacerlo es a mano. No problem, pero creo que es más sensato gestionarlas con un gestor bibliográfico. Por supuesto que esto tiene un coste de entrada pero no es demasiado alto y el hacerlo facilita después, la gestión de estas. Entre los beneficios que tiene gestionar las referencias con un gestor están: tener las referencias organizadas y a mano para poder reusarlas, evitar errores de la transcripción a mano o por copia y pega, facilita la organización y clasificación de las citas en categorías y, principalmente, posibilita la generación de listados bibliográficos con un simple clic en diversos formatos (APA, Chicago etc …)\nHay muchos gestores bibliográficos. Los más usados son Mendeley y Zotero, aunque últimamente oigo hablar mucho de CiteDrive.\nNo soy un power user de gestores bibliográficos pero uso cada vez más Zotero. Zotero es un gestor bibliográfico de código abierto que cuenta con extensiones para los principales navegadores (Firefox, Vivaldi, Chrome, Safari, Opera, …) que permiten guardar referencias, ya sean estas artículos, libros, páginas web, libros electrónicos, imágenes, audio, vídeo digital etc … con un solo clic. Una vez añadida una referencia, se pueden añadir, notas, etiquetas y relacionarla con otras referencias; además, las referencias se pueden organizar en colecciones. Ilya Kashnitsky tiene aquí un fantástico post donde explica las ventajas de Zotero y cómo usarlo.\nEl caso es que los gestores bibliográficos, ademas de ayudarnos a gestionar nuestras referencias bibliográficas, nos permiten exportar y generar listados de referencias en distintos formatos. Veamos cómo hacerlo en el entorno Quarto."
  },
  {
    "objectID": "blog/20_referencias-bibliograficas.html#intro",
    "href": "blog/20_referencias-bibliograficas.html#intro",
    "title": "Referencias bibliográficas",
    "section": "",
    "text": "Gestionar y poner en el formato adecuado las referencias bibliográficas no es muy divertido; una forma de hacerlo es a mano. No problem, pero creo que es más sensato gestionarlas con un gestor bibliográfico. Por supuesto que esto tiene un coste de entrada pero no es demasiado alto y el hacerlo facilita después, la gestión de estas. Entre los beneficios que tiene gestionar las referencias con un gestor están: tener las referencias organizadas y a mano para poder reusarlas, evitar errores de la transcripción a mano o por copia y pega, facilita la organización y clasificación de las citas en categorías y, principalmente, posibilita la generación de listados bibliográficos con un simple clic en diversos formatos (APA, Chicago etc …)\nHay muchos gestores bibliográficos. Los más usados son Mendeley y Zotero, aunque últimamente oigo hablar mucho de CiteDrive.\nNo soy un power user de gestores bibliográficos pero uso cada vez más Zotero. Zotero es un gestor bibliográfico de código abierto que cuenta con extensiones para los principales navegadores (Firefox, Vivaldi, Chrome, Safari, Opera, …) que permiten guardar referencias, ya sean estas artículos, libros, páginas web, libros electrónicos, imágenes, audio, vídeo digital etc … con un solo clic. Una vez añadida una referencia, se pueden añadir, notas, etiquetas y relacionarla con otras referencias; además, las referencias se pueden organizar en colecciones. Ilya Kashnitsky tiene aquí un fantástico post donde explica las ventajas de Zotero y cómo usarlo.\nEl caso es que los gestores bibliográficos, ademas de ayudarnos a gestionar nuestras referencias bibliográficas, nos permiten exportar y generar listados de referencias en distintos formatos. Veamos cómo hacerlo en el entorno Quarto."
  },
  {
    "objectID": "blog/20_referencias-bibliograficas.html#cómo-gestionar-las-referencias-en-quarto",
    "href": "blog/20_referencias-bibliograficas.html#cómo-gestionar-las-referencias-en-quarto",
    "title": "Referencias bibliográficas",
    "section": "2 ¿Cómo gestionar las referencias en Quarto?",
    "text": "2 ¿Cómo gestionar las referencias en Quarto?\nUna vez tenemos las referencias en Zotero, o en otro gestor bibliográfico, podemos crear una colección con las referencias que usaremos en un proyecto. A partir de ahí se puede fácilmente crear listados con las referencias en múltiples formatos, incluido BibTeX que es el que usa Latex y el que usaremos con Quarto1.\nPara generar nuestro listado de referencias con Quarto tenemos que:\n\nTener las referencias en Zotero, mejor en una colección\ngenerar un fichero .bib con los metadatos de las referencias\nIncluir la ruta al archivo .bib en el yaml de nuestro documento .qmd\nPor defecto Quarto generará el listado de referencias en formato Chicago Manual of style 17th ed. Si quieres usar otro formato tendrás que incluir en el yaml de nuestro documento .qmd la ruta al fichero.csl con el estilo que queramos dar al listado de referencias.\n\n\n2.1 Introducir la referencias\n\nCon Zotero\nLo primero es tener las referencias en un gestor bibliográfico, por ejemplo Zotero. No explicaré en detalle este paso pero puedes ver la documentación oficial, por ejemplo esta Quick Start Guide.\nTienes que instalar Zotero y luego una extensión para tu navegador favorito, de esta forma puedes añadir una referencia a tu base de datos con un solo clic: solo tendrás que ir a la pagina web donde este el articulo/vídeo/libro o lo que sea, y pinchar con el botón derecho del ratón y seleccionar Zotero Connector &gt; Guardar a Zotero &gt; Save to Zotero (Embedded metadata). Puedes ver un ejemplo en la imagen siguiente:\n\n\n\n\n\n\nGráfico 1: Guardando una referencia con Zotero Connector\n\n\n\n\n\nDesde RStudio\nTambién podemos añadir referencias directamente desde RStudio. Para ello tenemos que usar el “editor visual” de RStudio. Aquí lo explica Mine Çetinkaya-Rundel para el caso de que tengamos el DOI de la referencia. Simplemente hay que:\n\nActivar el editor visual &gt; Insert &gt; Citation … &gt; From DOI (en el menú de la izquierda) &gt; Pegar el DOI y pinchar en Search &gt; una vez ha encontrado la referencia, solo queda pinchar en Insert\n\nCon esta secuencia se generará un fichero .bib ,si es que no hay uno ya asociado al documento .qmd. Si ya hubiese un documento .bib, se añadiría la referencia a este.\n\n\n\n2.2 Creación del fichero .bib\nPara generar las citas y bibliografía necesitaremos un archivo .bib que contenga los metadatos de las referencias que queremos introducir en nuestro archivo .qmd. Este archivo .bib se puede generar de muchas maneras, por ejemplo a mano copiando y pegando, o con Zotero, o desde RStudio, o … Veamos como se hace desde Zotero. Como puedes ver en la imagen de bajo tengo distintas colecciones en Zotero, selecciono la carpeta/colección que quiero exportar con el botón derecho del ratón y pincho en “exportar”. Solo queda seleccionar el formato de exportación. Puedes elegir “better BibTex” o “Bibtext”, los dos funcionarán. Se nos creará un fichero .bib con los metadatos de las referencias bibliográficas que vamos a usar.\n\n\n\n\n\n\n\n\n\nGráfico 2: Exportando una colección de referencias\n\n\n\n\n\n\n\n\n\n\n\nGráfico 3: Exportando a formato Bibtex\n\n\n\n\n\n\n\nCreando el fichero .bib desde Zotero\n\n\n\nEl fichero .bib contendrá un listado con los metadatos de nuestras referencias; algo como:\n@article{rodríguez-sanchez2016,\n    title = {Ciencia reproducible: ¿qué, por qué, cómo?},\n    author = {{Rodríguez-Sanchez}, Francisco and {Pérez-Luque}, {Antonio Jesús} and Bartomeus, Ignasi and Varela, Sara},\n    year = {2016},\n    month = {08},\n    date = {2016-08-22},\n    journal = {Ecosistemas},\n    pages = {83--92},\n    volume = {25},\n    number = {2},\n    doi = {10.7818/ecos.2016.25-2.11},\n    url = {http://dx.doi.org/10.7818/ECOS.2016.25-2.11}\n}\n\n@article{wickham2010a,\n    title = {Graphics for Statistics and Data Analysis with{\\emph{R}}},\n    author = {Wickham, Hadley and Grolemund, Garrett},\n    year = {2010},\n    date = {2010},\n    journal = {Journal of Statistical Software},\n    volume = {36},\n    number = {Book Review 3},\n    doi = {10.18637/jss.v036.b03},\n    url = {http://dx.doi.org/10.18637/jss.v036.b03},\n    langid = {en}\n}\n\n\n2.3 Referencia el fichero bib` en el yaml\nUna vez tenemos el fichero .bib con los datos de nuestras referencias, tenemos que referenciarlo en el yaml de nuestro documento .qmd; concretamente así:\n---\ntitle: \"Mi Documento\"\nbibliography: my_references.bib\n---\nEn este caso el fichero .bib y el fichero .qmd estarían en la misma carpeta. Si el fichero .bib estuviese en una subcarpeta, tendríamos que especificar la ruta, quedando el yaml como:\n---\ntitle: \"Mi Documento\"\nbibliography: my_subcarpeta/my_references.bib\n---\n\n\n2.4 Estilo de las referencias\nYa he dicho que por defecto Zotero (y Pandoc) usan el Chicago Manual of Style pero podemos cambiar el estilo usando un archivo .csly referenciando en nuestro yaml:\n---\ntitle: \"Mi Documento\"\nbibliography: my_references.bib\ncsl: bib_files/apa_7.csl\n---\nPodemos descargar ficheros .csl con multitud de formatos para nuestras citas del repositorio de Zotero, aquí . CSL significa Citation Style Language. BibTex es limitado para poder almacenar adecuadamente determinadas referencias, por ejemplo no puede diferenciar entre por ejemplo magazine/newspaper articles and journal articles, por eso finalmente se creó CSL como un lenguaje de estilo de citas más versátil. CSL permite la creación de estilos de citación personalizados para adaptarse a las necesidades y normas de estilo de cada disciplina académica."
  },
  {
    "objectID": "blog/20_referencias-bibliograficas.html#inclusión-de-las-referencias",
    "href": "blog/20_referencias-bibliograficas.html#inclusión-de-las-referencias",
    "title": "Referencias bibliográficas",
    "section": "3 Inclusión de las referencias",
    "text": "3 Inclusión de las referencias\nEn la sección anterior hemos dispuesto todo para poder incluir en nuestros documentos .qmd las referencias bibliográficas usando ficheros .bib. Sí, pero aún no las hemos incluido, ¿cómo lo hacemos? Sin hacer nada, si el yaml incluye un fichero .bib, se incluirá automáticamente un apartado al final con las referencias del fichero que hayamos citado en nuestro .qmd. También podemos incluir explícitamente ese apartado así:\n### Referencias {.unnumbered}\n\n::: {#refs}\n:::\nSi quisiéramos incluir todas las referencias presentes en el fichero .bib, incluso aunque no las hayamos citado en el texto, tendríamos que incluir en nuestro yaml lo siguiente:\n---\nnocite: |\n  @*\n---"
  },
  {
    "objectID": "blog/20_referencias-bibliograficas.html#inclusión-de-citas",
    "href": "blog/20_referencias-bibliograficas.html#inclusión-de-citas",
    "title": "Referencias bibliográficas",
    "section": "4 Inclusión de citas",
    "text": "4 Inclusión de citas\nGeneralmente en el texto de un artículo se citan los artículos que figuran en el apartado de referencias.\nTenemos ya un fichero .bib con las referencias, ¿cómo incluimos citas a ellos en nuestro fichero .qmd? Podemos seguir escribiendo y gestionando estas citas a mano, pero si queremos hacerlo “automáticamente”2 tenemos que saber cómo hacerlo.\nImagina que tenemos un fichero llamado my_references.bib con 2 referencias, por ejemplo:\n@article{rodríguez-sanchez2016,\n    title = {Ciencia reproducible: ¿qué, por qué, cómo?},\n    author = {{Rodríguez-Sanchez}, Francisco and {Pérez-Luque}, {Antonio Jesús} and Bartomeus, Ignasi and Varela, Sara},\n    year = {2016},\n    month = {08},\n    date = {2016-08-22},\n    journal = {Ecosistemas},\n    pages = {83--92},\n    volume = {25},\n    number = {2},\n    doi = {10.7818/ecos.2016.25-2.11},\n    url = {http://dx.doi.org/10.7818/ECOS.2016.25-2.11}\n}\n\n@article{wickham2010a,\n    title = {Graphics for Statistics and Data Analysis with{\\emph{R}}},\n    author = {Wickham, Hadley and Grolemund, Garrett},\n    year = {2010},\n    date = {2010},\n    journal = {Journal of Statistical Software},\n    volume = {36},\n    number = {Book Review 3},\n    doi = {10.18637/jss.v036.b03},\n    url = {http://dx.doi.org/10.18637/jss.v036.b03},\n    langid = {en}\n}\nFíjate que cada referencia tiene una clave que es lo que tendremos que usar para generar citas referentes a ellos; en concreto las claves están en la primera linea de cada referencia; concretamente son: rodríguez-sanchez2016 y wickham2010a\n\nSintaxís para las citas\nEn realidad Quarto, utiliza Pandoc, otro programa, para procesar archivos BibTeX y convertirlos al formato de lenguaje de estilo de citas (CSL) estándar, que luego usará para formatear referencias en formato Chicago, APA, MLA o lo que sea3.\nQuarto usa el mismo estándar que Pandoc para las citas; de forma que las citas van entre corchetes y separadas por punto y coma (;), etc …\nPor tanto, una vez tenemos el fichero .bib y lo hemos referenciado en nuestro yaml, podemos generar citas de la siguiente manera:\n\nSi quieres escribir citas como estas:Has de escribir esto:\n\n\n\n“Un estudio científico es reproducible si …” (Rodríguez-Sanchez et al., 2016, p. 84)\nR es un lenguaje de programación … (véase Rodríguez-Sanchez et al., 2016, p. 84; y Wickham & Grolemund, 2010, Capítulo 1)\nR es al menos tan bueno como Phyton ( Wickham & Grolemund (2010); Rodríguez-Sanchez et al. (2016))\nSegún Rodríguez-Sanchez et al. (2016), pp. 84, un estudio científico es reproducible si …\nWickham & Grolemund (2010) dicen que ….\nWickham & Grolemund (2010, p. 33) dicen que …\nWickham dice que R es un lenguaje funcional (2010)\n\n\n\n\n- \"Un estudio científico es reproducible si ...\" [@rodríguez-sanchez2016, pp. 84]\n\n- R es un lenguaje de programación ... [véase @rodríguez-sanchez2016, pp. 84; y  @wickham2010a, cap. 1]\n\n- R es al menos tan bueno como Phyton ( @wickham2010a; @rodríguez-sanchez2016)\n\n- Según @rodríguez-sanchez2016, pp. 84, un estudio científico es reproducible si ...\n\n\n- @wickham2010a dicen que ....\n\n- @wickham2010a [p. 33] dicen que ...\n\n- Wickham dice que R es un lenguaje funcional  [-@wickham2010a]\n\n\n\n\n\nLa documentación oficial de Quarto para citas y bibliografías está aquí. La documentación de Pandoc para las citas está aquí."
  },
  {
    "objectID": "blog/20_referencias-bibliograficas.html#más-cosas",
    "href": "blog/20_referencias-bibliograficas.html#más-cosas",
    "title": "Referencias bibliográficas",
    "section": "5 Más cosas",
    "text": "5 Más cosas\n\nUsing Zotero for citations in Quarto and R Markdown documents es un post que me ayudo; además, lleva a esto de editor visual de RStudio, al archivo de CSL’s y al paquete rbbt, que conecta R con el conector Better Bibtex for Zotero.\nA veces se necesita controlar/tunear más cómo y qué incluir de las referencias bibliográficas en el texto; para ello puedes usar citetools. Lo vi aquí\n¿Se pueden poner varias bibliografías en un sólo documento? Andrew Heiss lo preguntó aquí y cuando halló la solución, escribió un post explicándolo; pero resulta que en mayo de 2024 se creó un Pandoc filter precisamente para generar bibliografías diferentes para cada capítulo o para cada top-level section. Puedes verlo aquí"
  },
  {
    "objectID": "blog/20_referencias-bibliograficas.html#referencias",
    "href": "blog/20_referencias-bibliograficas.html#referencias",
    "title": "Referencias bibliográficas",
    "section": "Referencias",
    "text": "Referencias\n\n\nAndrew Heiss (🐘 @andrew@fediscience.org) en Twitter. (2023). En Twitter. https://twitter.com/andrewheiss/status/1612466959534428161\n\n\nBetter bibliography management with Overleaf, CiteDrive, and BibTeX/BibLaTeX — about 3.0 and an updated guide. (s. f.). Recuperado 6 de febrero de 2023, de https://www.overleaf.com/blog/better-bibliography-management-with-overleaf-citedrive-and-bibtex-biblatex\n\n\nÇetinkaya-Rundel, M. (2022). A Quarto tip a day - Citations. https://mine-cetinkaya-rundel.github.io/quarto-tip-a-day/posts/24-citations/\n\n\nCiteDrive. (2022). Bibliography Management in R Markdown with CiteDrive and RStudio. En Medium. https://citedrive.medium.com/bibliography-management-in-r-markdown-with-citedrive-and-rstudio-2585699dd619\n\n\nHeiss, A. (s. f.). How to migrate from BibDesk to Zotero for pandoc-based writing  Andrew Heiss. Recuperado 14 de enero de 2023, de https://www.andrewheiss.com/blog/2023/01/08/bibdesk-to-zotero-pandoc/\n\n\nKashnitsky, I. (2019). Zotero hacks: unlimited synced storage and its smooth use with rmarkdown  Ilya Kashnitsky. https://ikashnitsky.github.io/2019/zotero/\n\n\nMaurya, H. (2022). 3 Ways to install Zotero on Ubuntu 22.04 or 20.04 LTS. En Linux Shout. https://www.how2shout.com/linux/how-to-install-zotero-on-ubuntu-22-04-or-20-04-lts/\n\n\nPrint References/Reading List/Bibliography in Your Syllabus (With Some Style) in R Markdown and {stevemisc}. (s. f.). En Steven V. Miller. Recuperado 6 de febrero de 2023, de http://svmiller.com/blog/2022/01/print-references-reading-list-syllabus-r-markdown-stevemisc/\n\n\nQuarto - Citations & Footnotes. (s. f.). Recuperado 6 de febrero de 2023, de https://quarto.org/docs/authoring/footnotes-and-citations.html\n\n\nQuarto - Technical Writing. (s. f.). Recuperado 14 de enero de 2023, de https://quarto.org/docs/visual-editor/technical.html#citations\n\n\nquick start guide [Zotero Documentation]. (s. f.). Recuperado 14 de enero de 2023, de https://www.zotero.org/support/quick_start_guide\n\n\nR Markdown TUTORIAL  A powerful tool for LEARNING R (IN 45 MINUTES) - YouTube. (s. f.). Recuperado 14 de enero de 2023, de https://www.youtube.com/watch?v=K418swtFnik\n\n\nRiederer, E., Christophe Dervieux. (s. f.). 4.5 Bibliographies and citations  R Markdown Cookbook. Recuperado 6 de febrero de 2023, de https://bookdown.org/yihui/rmarkdown-cookbook/bibliography.html\n\n\nRodríguez-Sanchez, F., Pérez-Luque, A. J., Bartomeus, I., & Varela, S. (2016). Ciencia reproducible: ¿qué, por qué, cómo? Ecosistemas, 25(2), 83-92. https://doi.org/10.7818/ecos.2016.25-2.11\n\n\nUsing CiteDrive to keep bibliography and references in sync with Quarto® in RStudio. (s. f.). Recuperado 6 de febrero de 2023, de https://www.youtube.com/watch?v=eukDLQV-EMs\n\n\nWickham, H., & Grolemund, G. (2010). Graphics for Statistics and Data Analysis withR. Journal of Statistical Software, 36(Book Review 3). https://doi.org/10.18637/jss.v036.b03"
  },
  {
    "objectID": "blog/20_referencias-bibliograficas.html#footnotes",
    "href": "blog/20_referencias-bibliograficas.html#footnotes",
    "title": "Referencias bibliográficas",
    "section": "Notas",
    "text": "Notas\n\n\n BibTex, que fue creado para usar con Latex, utiliza ficheros .bib que es una forma conveniente para almacenar bibliografía en texto plano.↩︎\nEn realidad las citas hay que escribirlas a mano, pero si las incluyes con la sintaxis adecuada, hará que cada cita tenga un enlace a la referencia↩︎\nBibTex fue creado para usar con Latex, utiliza ficheros .bib que es una forma conveniente para almacenar bibliografía en texto plano, pero BibTex es limitado para poder almacenar adecuadamente determinadas referencias, por ejemplo no puede diferenciar entre por ejemplo magazine/newspaper articles and journal articles. Zotero usa el estándar CSL que también usa Pandoc.↩︎"
  },
  {
    "objectID": "blog/76_iconos.html",
    "href": "blog/76_iconos.html",
    "title": "Iconos en Quarto",
    "section": "",
    "text": "A todos nos gusta que nuestros documentos sean atractivos y expresivos, así que vamos a ver cómo podemos insertar emojis e iconos en nuestros documentos QMD."
  },
  {
    "objectID": "blog/76_iconos.html#intro",
    "href": "blog/76_iconos.html#intro",
    "title": "Iconos en Quarto",
    "section": "",
    "text": "A todos nos gusta que nuestros documentos sean atractivos y expresivos, así que vamos a ver cómo podemos insertar emojis e iconos en nuestros documentos QMD."
  },
  {
    "objectID": "blog/76_iconos.html#emojis",
    "href": "blog/76_iconos.html#emojis",
    "title": "Iconos en Quarto",
    "section": "\n2 Emojis",
    "text": "2 Emojis\nLos emojis son una forma sencilla de añadir expresividad a nuestros documentos. Quarto logicamente permite usar emojis. Veamos cómo:\n\nPara mi, la forma más sencilla de incoporar emojis en nuestros .qmd’s es buscar el emoji que quieras en emojipedia, o casi mejor aquí, para después copiarlo y pegarlo en tu documento. E\nTambién es muy fácil insertar emojis usando el editor visual de RStudio. Puedes verlo aquí\nTambién se pueden usar emojis usando está sintaxis: por ejemplo, si en tu qmd escribes :smile: se convertirá en 😄 :star-struck:, si escribes :rocket: se convertirá en 🚀 , etc… Para ello, antes hay que activar los emojis, poniendo en el yaml del .qmd lo siguiente: from: markdown+emoji\nQuizás es un poco más lioso, pero también puedes usar el paquete emoji que cuando lo probé en 2024 tenía 4.702 emojis. Para insertar un emoji en el texto de tu .qmd has de escribir `r emoji::emoji(“star-struck”)` para ver este emoji: 🤩.\n\nOtro ejemplo de uso del paquete emoji:\n\nCódigoemoji::emojis |&gt; \n  dplyr::select(1:3) |&gt; \n  dplyr::slice_sample(n = 10) |&gt; gt::gt()  \n\n\n\n\n\nemoji\nname\ngroup\n\n\n\n💏🏼\nkiss: medium-light skin tone\nPeople & Body\n\n\n👰🏾‍♂️\nman with veil: medium-dark skin tone\nPeople & Body\n\n\n🏝️\ndesert island\nTravel & Places\n\n\n👮🏼‍♀️\nwoman police officer: medium-light skin tone\nPeople & Body\n\n\n🧑🏽‍❤️‍🧑🏼\ncouple with heart: person, person, medium skin tone, medium-light skin tone\nPeople & Body\n\n\n🚣🏽‍♂️\nman rowing boat: medium skin tone\nPeople & Body\n\n\n©\ncopyright\nSymbols\n\n\n♑\nCapricorn\nSymbols\n\n\n🚵🏿\nperson mountain biking: dark skin tone\nPeople & Body\n\n\n🖖🏾\nvulcan salute: medium-dark skin tone\nPeople & Body"
  },
  {
    "objectID": "blog/76_iconos.html#iconos",
    "href": "blog/76_iconos.html#iconos",
    "title": "Iconos en Quarto",
    "section": "\n3 Iconos",
    "text": "3 Iconos\nHay varias extensiones de Quarto para insertar íconos en nuestros documentos. Richard Ianone, en este repo da ejemplo de cómo utilizar varios de ellos: fontawesome, material-icons, bsicons, academicons, lordicon e iconify. Pero no dice como instalarlas\nAlgunas de ellas son:\nAcademicons\nAcademicons contiene iconos relacionados con la academia que no están incluidos en otros paquetes de iconos.\nLa extensión schocastics/academicons permite usar academicons (v1.9.4). Solo puede usarse en documentos HTML.\nPara instalarla (dentro de un proyecto):\nquarto install extension schochastics/academicons\nPara usar los iconos:\n\n\nSi escribes:\n{{&lt; ai google-scholar &gt;}}\n{{&lt; ai google-scholar size=2xl &gt;}}\n{{&lt; ai google-scholar size=2xl color=red &gt;}}\n\n\nObtendrás:\n\n\n\n\n\n\nIconify\nIconify contiene una colección de más de 50.000 iconos de diferentes fuentes. Puedes ver los iconos disponibles aquí.\nPara usar Iconify en Quarto, puedes instalar la extensión mcanouil/quarto-iconify. Aquí tienes el repo con ejemplos e instrucciones de instalación.\nquarto add mcanouil/quarto-iconify\nUna vez instalada la extensión, puedes usarlos a través del siguiente shortcode: {{&lt; iconify &lt;icon-name&gt; &gt;}}. Por ejemplo, si escribes {{&lt; iconify exploding-head &gt;}} obtendrás el siguiente icono: .\nLa API de Iconify nos permite personalizar los iconos con diferentes tamaños, rotaciones, colores, etc. Ahora mismo, la extensión mcanouil/quarto-iconify soporta las siguientes opciones: width, height, title, label (i.e., aria-label), flip, and rotate\n\n\n\n\n\n\nShortcode\nIcon\n\n\n\n{{&lt; iconify exploding-head &gt;}}\n\n\n\n{{&lt; iconify exploding-head size=2xl &gt;}}\n\n\n\n{{&lt; iconify exploding-head size=5x rotate=180deg &gt;}}\n\n\n\n{{&lt; iconify exploding-head size=Huge &gt;}}\n\n\n\n{{&lt; iconify fluent-emoji-high-contrast 1st-place-medal &gt;}}\n\n\n\n{{&lt; iconify twemoji 1st-place-medal &gt;}}\n\n\n\n{{&lt; iconify line-md loading-alt-loop &gt;}}\n\n\n\n{{&lt; iconify fa6-brands apple width=50px height=10px rotate=90deg flip=vertical &gt;}}\n\n\n\nLordicon\nLordicon contiene una colección de más de 18.000 iconos animados, más de 3.000 de ellos libres. Puedes ver los iconos disponibles aquí.\nPara usar iconos de Lordicon en Quarto, puedes instalar la extensión jmgirard/lordicon. Aquí tienes el repo con ejemplos e instrucciones de instalación.\nquarto add jmgirard/lordicon\nPara usar los iconos:\n\n\nSi escribes:\n{{&lt; li wlpxtupd &gt;}}\n{{&lt; li wxnxiano &gt;}}\n{{&lt; li wxnxiano trigger=hover &gt;}}\n\n\nObtendrás:\n\n\n\n\n\n\nWeather Icons\nWeather Icons contiene una colección de 222 iconos sobre el tiempo.\nPara usarlos en Quarto, puedes instalar la extensión andrie/quarto-weather-icons. Aquí tienes el repo con ejemplos e instrucciones de instalación.\nFont Awesome\nFont Awesome contiene una colección de más de 30.000 iconos de diferentes fuentes.\nPara usarlos en Quarto, puedes instalar la extensión quarto-ext/fontawesome. Aquí tienes el repo con ejemplos e instrucciones de instalación.\nLos iconos pueden usarse en HTML (via Font Awesome 6 Free) and PDF (via the fontawesome5 LaTeX package).\nMaterial-icons\nMaterial-icons contiene una colección de iconos procedentes de Google Fonts\nPara usarlos en Quarto, puedes instalar la extensión shafayetShafee/material-icons. Aquí tienes el repo con ejemplos e instrucciones de instalación.\nBootstrap Icons\nBootstrap Icons los iconos de Bootstrap\nPara usarlos en Quarto, puedes instalar la extensión shafayetShafee/bsicons. Aquí tienes el repo con ejemplos e instrucciones de instalación."
  },
  {
    "objectID": "blog/30_informes-parametrizados.html",
    "href": "blog/30_informes-parametrizados.html",
    "title": "Informes parametrizados",
    "section": "",
    "text": "Evidentemente Quarto sirve para hacer informes, perfecto!! Hasta ahora, con un fichero .qmd hemos hecho un único informe, pero imagina que tienes que hacer un puñado de informes, todos muy parecidos pero que difieren en algunos aspectos; por ejemplo, puedes necesitar hacer un informe para cada mes o cada año, o un informe para cada cliente/estudiante/etc …, o un informe con distintos datasets o que difieran en algunos supuestos.\nEn el contexto de Quarto a esta situación de la conoce como “Render parametrised reports”, y nos permitirá generar de forma “automática” un puñado de informes personalizados para cada grupo o situación. Vamos a ello. Aquí la documentación oficial."
  },
  {
    "objectID": "blog/30_informes-parametrizados.html#intro",
    "href": "blog/30_informes-parametrizados.html#intro",
    "title": "Informes parametrizados",
    "section": "\n1 Intro",
    "text": "1 Intro\nLos informes parametrizados permiten modificar/personalizar el informe según los valores de determinados parámetros. Se trata de que en el momento de procesar (render) nuestro fichero .qmd se puedan pasar diferentes valores de ciertos parámetros de forma que se creen versiones diferentes de “un mismo” informe. Por ejemplo, los informes parametrizados pueden usarse para proporcionar a los estudiantes de un curso un informe con sus notas o crear un informe para cada cliente o zona."
  },
  {
    "objectID": "blog/30_informes-parametrizados.html#cómo-lo-hacemos",
    "href": "blog/30_informes-parametrizados.html#cómo-lo-hacemos",
    "title": "Informes parametrizados",
    "section": "\n2 ¿Cómo lo hacemos?",
    "text": "2 ¿Cómo lo hacemos?\nBásicamente, solo hay que hacer dos cosas:\n\nDefinir la opción params: en el YAML del documento .qmd\nIncorporar los parámetros cuando hagas el render de los documentos\n\nNo parece muy costoso, pero vamos por partes.\nDefinir params: en el YAML\n---\nparams:\n  nombre: \"Pedro\"\n---\nEn este caso hemos definido un parámetro llamado “nombre” que tomará como valor por defecto “Pedro”; es decir, si no cambiamos el valor por defecto de “nombre”, ese será el valor que tomará cuando se haga el render del fichero .qmd.\nRepito, cuando se haga el render del fichero .qmd, se usará el valor del parámetro “nombre”, y aprenderemos a cambiar el valor de ese parámetro de manera “automática” para generar informes para distintos valores del parámetro; es decir, para distintos estudiantes.\nAdemás, hay que saber que el valor del parámetro que se usará durante el render puede ser accedido dentro del fichero .qmd. El valor del parámetro estará en params$nombre y podremos usarlo en los chunks de código y también como código inline. Si en un chunk de código ponemos por ejemplo: filter(notas, estudiante == params$nombre), si utilizamos el valor por defecto del parámetro, quedará como filter(notas, estudiante == \"Pedro\") y los cálculos, el informe, se hará utilizando sólo los registros del estudiante Pedro.\nIncluso podemos usar más de un parámetro en el YAML. Por ejemplo:\n---\nparams:\n  municipio: \"Pancrudo\"\n  year: 2022\n---\nCon el anterior YAML podrían hacerse informes personalizados de, por ejemplo, presupuesto de distintos municipios para diferentes años, utilizando la misma plantilla o documento .qmd.\nIncorporar valores de los parámetros al proceso de render\nNos queda ver cómo podemos ir variando los valores de los parámetros a la hora de procesar el documento .qmd.\nSe puede hacer de varias maneras pero la más intuitiva es (una vez tenemos nuestro documento .qmd que hace de plantilla para el informe) usar un bucle con for para procesar la plantilla para diferentes valores de los parámetros.\nSupón que tenemos la plantilla en el archivo plantilla.qmd con el siguiente YAML:\n---\nparams:\n  nombre: \"Pedro\"\n---\ny que queremos hacer un informe personalizado para 4 estudiantes, en ese caso, el proceso quedaría como1:\n\nCódigoestudiantes &lt;- c(\"Pedro\", \"Concha\", \"María\", \"José\")\nnn_estudiantes &lt;- length(estudiantes)\n\nfor (ii in 1:nn_estudiantes){\n  my_estudiante = estudiantes[ii]\n    quarto::quarto_render(\n        input = \"plantilla.qmd\",\n        output_file = paste0(\"notas-\", my_estudiante, \".pdf\"),\n        execute_params = list(nombre = my_estudiante)\n        )\n}\n\n\nLógicamente habría que ejecutar el chunk anterior desde un script de R.\nHaremos una práctica sobre informes parametrizados durante el curso. I promise!!"
  },
  {
    "objectID": "blog/30_informes-parametrizados.html#contexto",
    "href": "blog/30_informes-parametrizados.html#contexto",
    "title": "Informes parametrizados",
    "section": "\n3 Contexto",
    "text": "3 Contexto\nYo ya había hecho unos cuantos informes parametrizados, incluso un año, lo enseñé en clase, pero para redactar este post me he basado en (Helveston 2023) y (GW Coders 2023). Entre otras cosas, me enteré de que Quarto tiene problemas, fácilmente superables, para usar data.frames como parámetros y para hacer el render en una carpeta diferente de la raíz del Qproject (!!)."
  },
  {
    "objectID": "blog/30_informes-parametrizados.html#más",
    "href": "blog/30_informes-parametrizados.html#más",
    "title": "Informes parametrizados",
    "section": "\n4 Más",
    "text": "4 Más\n\nYa en 2024, Jadey Ryan hizo un workshop para R-Ladies D.C. El título del workshop es Parameterized reporting using Quarto y está disponible la charla de casi 2 horas y el repo. Va a repetir el workshop en febrero de 2024 en R-Ladies Abuja. Jadey Ryan ya dio una charla de 20 minutos sobre el tema en posit::conf(2023), el vídeo aquí, 20 minutos. Además tiene un repo para hacer informes parametrizados en su organización. Este package fue revisado en directo por Luke Terney, vídeo aquí\nAquí, una preciosura de slides en las que se hace algo parecido; bueno en realidad usa child documents para crear unas slides donde hay una slide para cada persona de una organización.\n\nSi quieres hacer el render con parámetros desde la Terminal :\n quarto render annual_report.qmd -P year:2024\n\nAquí un post de Meghan Hall sobre informes parametrizados con énfasis en la personalización de los PDFs."
  },
  {
    "objectID": "blog/30_informes-parametrizados.html#footnotes",
    "href": "blog/30_informes-parametrizados.html#footnotes",
    "title": "Informes parametrizados",
    "section": "Notas",
    "text": "Notas\n\nPuede mejorarse bastante pero creo que esto es lo más intuitivo. Código más à la tidyverse sería este y este. Un ejemplo con dos parámetros aquí.↩︎"
  },
  {
    "objectID": "blog/70_botoncitos-web.html",
    "href": "blog/70_botoncitos-web.html",
    "title": "Generando botoncitos de descarga en mi web",
    "section": "",
    "text": "Durante el curso, concretamente cuando aprendimos a crear una web personal con las slides_05, vimos cómo podíamos podíamos facilitar la descarga de documentos: es muy sencillo, solo hemos de insertar un hyperlink que apunte a un recurso de nuestra web.\nPor ejemplo, Si escribo lo siguiente: [Mi publicación](/recursos/mi_articulo_01.pdf) en un documento .qmd, se generará el siguiente hyperlink Mi publicación. Si pinchamos en el anterior hyperlink, hará que se visualice en el navegador (o se descargue) el archivo mi_articulo_01 que tenemos en la carpeta ./recursos/ dentro del Qproject de nuestra web. Puedes probar a hacerlo.\nLa anterior forma de proceder es fácil y funciona perfectamente, pero queda mucho más chulo si insertamos un botones parecidos a estos. Para ello hay que instalar y usar la extensión downloadthis. Vamos a ver si lo conseguimos!!\nOtra posibilidad, que no intentaremos, es usar este tipo de botones. Puedes ver el código que los genera aquí, además genera el listado de sus publicaciones automáticamente. Llegué a esta posibilidad a través de este hilo de Twitter.\nTambién podríamos utilizar los botones de descarga que utiliza Ilya Kashnitsky aquí . El código que los genera está aquí.\nTambién podríamos hacerlo así, pero nosotros vamos a probar a hacerlo con downloadthis."
  },
  {
    "objectID": "blog/70_botoncitos-web.html#intro",
    "href": "blog/70_botoncitos-web.html#intro",
    "title": "Generando botoncitos de descarga en mi web",
    "section": "",
    "text": "Durante el curso, concretamente cuando aprendimos a crear una web personal con las slides_05, vimos cómo podíamos podíamos facilitar la descarga de documentos: es muy sencillo, solo hemos de insertar un hyperlink que apunte a un recurso de nuestra web.\nPor ejemplo, Si escribo lo siguiente: [Mi publicación](/recursos/mi_articulo_01.pdf) en un documento .qmd, se generará el siguiente hyperlink Mi publicación. Si pinchamos en el anterior hyperlink, hará que se visualice en el navegador (o se descargue) el archivo mi_articulo_01 que tenemos en la carpeta ./recursos/ dentro del Qproject de nuestra web. Puedes probar a hacerlo.\nLa anterior forma de proceder es fácil y funciona perfectamente, pero queda mucho más chulo si insertamos un botones parecidos a estos. Para ello hay que instalar y usar la extensión downloadthis. Vamos a ver si lo conseguimos!!\nOtra posibilidad, que no intentaremos, es usar este tipo de botones. Puedes ver el código que los genera aquí, además genera el listado de sus publicaciones automáticamente. Llegué a esta posibilidad a través de este hilo de Twitter.\nTambién podríamos utilizar los botones de descarga que utiliza Ilya Kashnitsky aquí . El código que los genera está aquí.\nTambién podríamos hacerlo así, pero nosotros vamos a probar a hacerlo con downloadthis."
  },
  {
    "objectID": "blog/70_botoncitos-web.html#creando-botoncitos-de-descarga-con-downloadthis",
    "href": "blog/70_botoncitos-web.html#creando-botoncitos-de-descarga-con-downloadthis",
    "title": "Generando botoncitos de descarga en mi web",
    "section": "\n2 Creando botoncitos de descarga con downloadthis\n",
    "text": "2 Creando botoncitos de descarga con downloadthis\n\nDownloadthis es una extensión para Quarto y sus instrucciones son muy claras:\n\n\nPrimero hay que instalar la extensión, así que hay que ejecutar en la Terminal lo siguiente:\nquarto add shafayetShafee/downloadthis\nNos preguntará dos veces si estamos seguros. Yo la acabo de instalar\n\nLuego sólo queda usarla."
  },
  {
    "objectID": "blog/70_botoncitos-web.html#botoncitos-con-downloadthis",
    "href": "blog/70_botoncitos-web.html#botoncitos-con-downloadthis",
    "title": "Generando botoncitos de descarga en mi web",
    "section": "\n3 Botoncitos con downloadthis\n",
    "text": "3 Botoncitos con downloadthis\n\nLa verdad es que las instrucciones son muy claras: para incluir un botón de descarga en una web (o documento html) generada con Quarto solo hay que incluir el siguiente shortcode: {{&lt; downloadthis image.png &gt;}}. Ya está, ya funcionaría si hubiese un fichero llamado image.png en la misma carpeta donde se procesa el fichero .qmd en el que estamos escribiendo.\nLa extensión, el shortcode {{&lt; downloadthis &gt;}} es más flexible, permite hacer más cosas. De hecho tiene 6 argumentos que podemos usar para tunear nuestro “botoncito de descarga”. Puedes ver esas 6 opciones aquí.\nComo ejemplo, si incluimos en nuestro qmd lo siguiente:\n{{&lt; downloadthis recursos/ababol.jpg&gt;}}\nNos generará el botoncito de más abajo, que si lo pinchas hará que se descargue la foto de “mi” ababol.\n Download \nSi no te funciona es por la ruta. La carpeta “recursos” que contiene el archivo “ababol.jpg” debe estar en la misma carpeta en la que esté el archivo qmd que estamos escribiendo.\nUna pega es que el fichero “ababol.jpg” se descargará en el archivo “file.jpg” pero si esto no nos conviene, podemos cambiar el nombre de descarga con:\n\n{{&lt; downloadthis imagenes/ababol.jpg dname= \"mi_ababol.jpg\" &gt;}}\nTuneando los botoncitos\nPodemos cambiar el nombre que se verá dentro del botón, su color, poner un icono, … casi mejor es que veas los ejemplos aquí\nPor ejemplo, el siguiente código:\n{{&lt; downloadthis recursos/ababol.jpg  label=\"Descarga mi ababol\" icon=file-earmark-pdf type=success &gt;}}\n Descarga mi ababol"
  },
  {
    "objectID": "blog/70_botoncitos-web.html#otras-posibilidades",
    "href": "blog/70_botoncitos-web.html#otras-posibilidades",
    "title": "Generando botoncitos de descarga en mi web",
    "section": "\n4 Otras posibilidades",
    "text": "4 Otras posibilidades\nYa sabemos que podemos generar enlaces de descarga con QMD, o botoncitos con la extensión downloadthis. Otras posibilidades son:\n\nCon html:\n\n&lt;a id=\"download_image_1\" href=\"https://cdn.glitch.global/ab1f9eaf-3be9-411b-9fa4-81a39033290e/1650333182176.png?v=1650469623980\" download&gt;Descarga de una afoto&lt;/a&gt;\nGenera lo siguiente:\nDescarga de una afoto\n\nSe pueden generar botoncitos Con html, usando la etiqueta \n\n\n&lt;button type=\"button\" class=\"btn btn-primary\"&gt;Mi botoncito&lt;/button&gt;\n\nMi botoncito\n\n\ny podemos incrustar en el botoncito una imagen:\n&lt;button type=\"button\" class=\"btn btn-primary\"  style=\"width:55px;\"&gt;\n&lt;img src=\"recursos/ababol.jpg\" style=\"width:55px;\" alt=\"buttonpng\" border=\"0\" /&gt;\n&lt;/button&gt;\n\n\n\n\n\nAhora un botoncito con imagen incrustada y que al pinchar te la descargues:\n\n&lt;button type=\"button\" class=\"btn btn-primary\"&gt;\n[![](recursos/ababol.jpg)](recursos/ababol.jpg)\n&lt;/button&gt;\n\n\n\n\n\nAhora botoncito con imagen incrustada y que al pinchar lleva a una dirección web (además con sintaxis MD):\n\n&lt;button type=\"button\" class=\"btn btn-primary\" style=\"width:55px;\"&gt;\n[![](https://www.lineex.es/wp-content/uploads/2016/07/logo-UV.gif)](https://www.uv.es)\n&lt;/button&gt;\n\n\n\n\n\nPb: el botoncito con la imagen ha salido muy grande, vamos, tenemos un super-botón en lugar de un botoncito. Vamos a ver si se soluciona redimensionando la imagen:\n\n\nComo veis, no me acaba de salir!!!! 😥 Pero ya no pruebo más 😞🤕\n\n\n\nOtra posibilidad, para los botoncitos que aparecen en las About’s pages generadas con plantillas de Quarto es usar la estrategia de Pilar Beneito. En su web tiene en su home page, que en realidad es una About page generada con distill unos botoncitos muy chulos para ir por ejemplo a su departamento, que también es el mio. No podemos ver el código porque su web no está alojada en Github, pero Pilar amablemente me proporciono el código para meter dentro de ellos una imagen. Simplemente hay que poner en el archivo index.qmd, que genera la Home/About, lo siguiente[^O algo parecido: no lo he probado 😃.]:\n\n links:\n  - label: '&lt;img style=\"width:95px;\" src=\"logo_AE.jpg\" border=\"0\" alt=\"\"/&gt;&lt;/i&gt;'\n    url: \"https://www.uv.es/\"\n  - icon: globe\n    text: UV web\n    href: https://www.uv.es/pjperez/\n    target: _blank"
  },
  {
    "objectID": "blog/21_layouts.html",
    "href": "blog/21_layouts.html",
    "title": "Layout’s",
    "section": "",
    "text": "Además de yaml, texto y chunks, para escribir con Quarto conviene conocer la estructura o layout de los artículos que se generan con él. Las páginas tienen un body, un margin y un área para las sidebars, que en nuestro caso contiene un TOC1. Documentación oficial aquí y aquí. Además, desde Quarto 1.3 podemos redimensionar los elementos de nuestras webs y documentos .html, para, por ejemplo, dar más espacio a la sidebar o al margin: documentación aquí.\nAdemás, usando divs y spans podemos añadir clases y atributos, haciendo que determinados elementos de nuestro documento cambien sus “propiedades”. En esta sección usaremos divs para hacer que determinadas partes de nuestro post se ajusten a distintos layout’s y ocupen más o menos espacio en nuestros documentos."
  },
  {
    "objectID": "blog/21_layouts.html#intro",
    "href": "blog/21_layouts.html#intro",
    "title": "Layout’s",
    "section": "",
    "text": "Además de yaml, texto y chunks, para escribir con Quarto conviene conocer la estructura o layout de los artículos que se generan con él. Las páginas tienen un body, un margin y un área para las sidebars, que en nuestro caso contiene un TOC1. Documentación oficial aquí y aquí. Además, desde Quarto 1.3 podemos redimensionar los elementos de nuestras webs y documentos .html, para, por ejemplo, dar más espacio a la sidebar o al margin: documentación aquí.\nAdemás, usando divs y spans podemos añadir clases y atributos, haciendo que determinados elementos de nuestro documento cambien sus “propiedades”. En esta sección usaremos divs para hacer que determinadas partes de nuestro post se ajusten a distintos layout’s y ocupen más o menos espacio en nuestros documentos."
  },
  {
    "objectID": "blog/21_layouts.html#ejemplo-con-imágenes",
    "href": "blog/21_layouts.html#ejemplo-con-imágenes",
    "title": "Layout’s",
    "section": "\n2 Ejemplo (con imágenes)",
    "text": "2 Ejemplo (con imágenes)\nPara ver las distintas posibilidades que tenemos, insertaremos una imagen ocupando distintas áreas del artículo. Empezaremos situando la imagen en el margen. para ello habría que hacer lo siguiente:\n::: {.column-margin}\n\n![](imagenes/post_21_img_01.png){fig-align=\"center\"}\n\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSi queremos podemos llegar a ocupar el 100% de la pantalla. Sólo habría que indicarlo en las opciones de la imagen con width=\"100%\"."
  },
  {
    "objectID": "blog/21_layouts.html#ejemplo-con-chunks",
    "href": "blog/21_layouts.html#ejemplo-con-chunks",
    "title": "Layout’s",
    "section": "\n3 Ejemplo (con chunks)",
    "text": "3 Ejemplo (con chunks)\nEl output de los chunks también puede ocupar distintas áreas. Veamos si un leaflet se puede poner en el margen:\n\nCódigo```{r}\n#| column: margin\n#| eval: true\nlibrary(leaflet)\nleaflet() %&gt;%\n  addTiles() %&gt;%  # Add default OpenStreetMap map tiles\n  addMarkers(lng = -4.7880, lat = 37.885, popup = \"Rectorado de la Universidad de Córdoba\\n (Sede de las XII Jornadas de usuarios de R)\")\n```\n\n\n\n\n\n\nY ahora ocupando toda la pantalla:\n\nCódigo```{r}\n#| column: screen\n#| eval: true\nlibrary(leaflet)\nleaflet() %&gt;%\n  addTiles() %&gt;%  # Add default OpenStreetMap map tiles\naddMarkers(lng = -4.7880, lat = 37.885, popup = \"Rectorado de la Universidad de Córdoba\\n (Sede de las XII Jornadas de usuarios de R)\")\n```\n\n\n\n\n\n\nComo no puede ser de otro modo, aún hay más opciones para el layout. Documentación aquí"
  },
  {
    "objectID": "blog/21_layouts.html#layout-de-las-páginas",
    "href": "blog/21_layouts.html#layout-de-las-páginas",
    "title": "Layout’s",
    "section": "\n4 Layout de las páginas",
    "text": "4 Layout de las páginas\nAdemás, para el layout de toda la página tienes las opciones aquí. Si quieres crear un “custom layout” quizás tengas que usar Bootstrap CSS grid."
  },
  {
    "objectID": "blog/21_layouts.html#footnotes",
    "href": "blog/21_layouts.html#footnotes",
    "title": "Layout’s",
    "section": "Notas",
    "text": "Notas\n\nAdemás, el layout puede venir afectado por la opción page-layout: custom   #- {article, full, custom}. Documentación oficial aquí ↩︎"
  },
  {
    "objectID": "blog/25_css.html",
    "href": "blog/25_css.html",
    "title": "Tuneando con CSS",
    "section": "",
    "text": "La apariencia visual del blog puede cambiarse utilizando CSS. El objetivo del post no es dar una clase sobre CSS, de hecho yo sé muy poquito CSS, sino solo mostrar con un ejemplo cómo poder incorporar algunos cambios en nuestro blog mediante el uso de CSS."
  },
  {
    "objectID": "blog/25_css.html#cómo-incorporar-cambios-con-css",
    "href": "blog/25_css.html#cómo-incorporar-cambios-con-css",
    "title": "Tuneando con CSS",
    "section": "\n1 ¿Cómo incorporar cambios con CSS?",
    "text": "1 ¿Cómo incorporar cambios con CSS?\nUtilizando spans\n\nEn este quarto-tip, Mine Çetinkaya-Rundel lo explica muy bien.\nPara cambiar la apariencia de un trozo de texto, tienes que meterlo dentro de [] y usando {} para definir el estilo que quieres aplicar a ese texto. Con un ejemplo se entiende mejor:\n\n\nPara que se muestre esto …\nHas de escribir\n\n\n\nPara llamar la atención puedes escribir en rojo o con un fondo amarillo; o las dos cosas a la vez.\n\n\nPara llamar la atención puedes escribir en [rojo]{style=\"color: red\"} \no con un [fondo amarillo]{style=\"background-color: yellow;\"}; \no las [dos cosas a la vez]{style=\"color: red; background-color: yellow;\"}.\n\n\n\n\nCon ficheros .css\n\nSi piensas reutilizar algunos estilos, entonces es mejor definir los estilos en un archivo .css.\nSi quisiéramos poder reutilizar los estilos que hemos definido en la anterior sección, tendríamos que crearlos como clases en un archivo css. Por ejemplo crearíamos el archivo: ./assets/mis_estilos_01.css con el siguiente contenido:\n/* css styles */\n\n.rojo {\n  color: red;\n}\n\n.yellow-background {\n  background-color: yellow;\n}\n\n.importante {\n  color: red;\n  background-color: yellow;\n}\nUna vez creado el archivo mis_estilos_01.csspara poder usar los estilos o clases allí definidos tendríamos que hacer 2 cosas:\n\nReferenciar el archivo css en el yaml del documento o post1. Esto lo haríamos incluyendo css: \"assets/mis_estilos_01.css\" en el yaml.\nUna vez incluido el fichero css en el yaml, ya podemos usar los estilos, para ello tendríamos que hacer lo siguiente:\n\n\n\nPara que se muestre esto …\nHas de escribir\nTambién podríamos haberlo hecho así:\n\n\n\nPara llamar la atención puedes escribir en rojo o con un fondo amarillo; o las dos cosas a la vez.\n\n\nPara llamar la atención puedes escribir en [rojo]{.rojo} \no con un [fondo amarillo]{.yellow-background}; \no las [dos cosas a la vez]{.importante}.\n\n\nPara llamar la atención puedes escribir en [rojo]{.rojo} \no con un [fondo amarillo]{.yellow-background}; \no las [[dos cosas a la vez]{.rojo}]{.yellow-background}."
  },
  {
    "objectID": "blog/25_css.html#algunos-estilos-útiles",
    "href": "blog/25_css.html#algunos-estilos-útiles",
    "title": "Tuneando con CSS",
    "section": "\n2 Algunos estilos útiles",
    "text": "2 Algunos estilos útiles\nCon CSS se puede modificar la apariencia de todos los elementos de una página web. En el chunk de abajo muestro algunas de las posibilidades que usaba en mis xaringan slides.\n\nCódigo/* css styles: algunos q usaba en xaringan */\n\n.rotate-45 {transform: rotate(45deg); }\n.large { font-size: 140%; }\n.small { font-size: 80%; }\n   \n   \n/*  ----------------- colores  -------------- */ \n.purple{ color: #c077af; }\n.red { color: #ef342a; }\n.orange { color: #f57125; }\n.orange2 {color: #F58634;}\n.blue { color: #22b6ed; }\n.green { color: #1fb27f; }\n.green2 {color: #007965;}\n.yellow { color: #faca07; }\n.yellow2 {color: #FFCC29;}\n.brown {color: #a84d18; }\n\n\n/*  ----------------- una nueva clase de inversa: muy chula  -------------- */ \n.inverse2 {\n  background: #69686d;\n  color: #f2f2f6;\n}\n.inverse2 a {\n  color: #b2d68c;\n}\n.inverse2 h1, .inverse2 h2 {\n  color: #f2f2f6;\n  font-size: 72px;\n  line-height: 1.2em;\n}\n\n\n.textverd{\n  color: #b2d68c;\n  font-size: 60px;  \n}"
  },
  {
    "objectID": "blog/25_css.html#estilos-útiles-pero-un-poco-bizarros",
    "href": "blog/25_css.html#estilos-útiles-pero-un-poco-bizarros",
    "title": "Tuneando con CSS",
    "section": "\n3 Estilos útiles pero (un poco) bizarros!!",
    "text": "3 Estilos útiles pero (un poco) bizarros!!\nEn clase, para mostrar como podemos modificar algunos de los elementos de un documento hecho con Rmd (ahora con Quarto) usaba un archivo css con cambios digamos un poco raros: a lo mejor ponía el titulo en pink, el autor en verde etc.. etc… Sólo era un ejemplo para mostrar algunas de las posibilidades para modificar la apariencia de un documento con CSS.\nSi quieres ver como quedaría este mismo post pero utilizando las reglas CSS (bizarras) que puedes ver abajo, puedes hacerlo aquí. Ya os digo que los cambios son un poco raros, vamos no muy estéticos.\n\nCódigo/* definiendo estilos del body : de toda la página */ \nbody { \n  background-color: aliceblue; }  /* color del fondo*/ \n\n\n/* importo un tipo de letra */ \n@import url(http://fonts.googleapis.com/css?family=Open+Sans:300italic,300); \n\n/* definiendo estilos de los párrafos */ \np {\n  text-align: justify;         /* justificar el texto del body */      \n  line-height: 1.4;            /* anchura entre las lineas 1.0 is the default in Firefox. 2.0 provides a large space */     \n  margin: 10px 0px 10px 0px;    /* margenes entre los párafos: top, izquierda, abajo, left */   \n  font-size: 13pt;                                     /* tamaño de letra */   \n  font-family: 'Open Sans', Helvetica, sans-serif; }   /* tipo de letra */  \n\n\n\n/* definiendo estilos de las cajas de código (chunks) */ \npre {\n  background-color: pink;  /* color de las cajas de código */ \n    font-size: 10pt;\n    border-radius: 9px;     /* q los bordes de las cajas sean redondas */ \n    font-family: Monaco, monospace;\n    border: 3px solid green; }\n\n/* hacer cambios en el texto en negrita, ahora el texto en negrita saldrá en verde!!! */ \nstrong {\n  color: green; }\n\n\n/* cambiar el color de los hipervinculos/enlaces  */\na {\n  color: brown;\n  font-weight: bold; }\n\n\n/* cambiar el aspecto del TOC: \nhttps://stackoverflow.com/questions/42546001/how-to-change-colors-and-attributes-of-table-of-contents-in-r-markdown-html-docu */\n.list-group-item.active, .list-group-item.active:focus, .list-group-item.active:hover{\n  color: darkgreen;\n  font-weight: bold;\n  background-color: gold; }\n   \n   \n/* para hacer cajas de texto de colorines*/\n\n.caja-darkkhaki { background-color:#bdb76b; border-radius: 4px; padding: 13px;}\n\n.caja-linea-verde {  color: #004346;\n  background-color: #fff;\n  border-top: 4pt solid #09bc8a;\n  border-right-style: none;\n  border-bottom-style: none;\n  border-left-style: none;\n  padding: 23px 10px 21px 10px;\n}\n\n\n/* Guía para los colores: https://htmlcolorcodes.com/es/nombres-de-los-colores/  */\n\n \n /* para las quotes o citas */\n\nblockquote {\n    padding: 10px 20px;\n    margin: 0 0 20px;\n    font-size: 14px;\n    border-left: 5px solid #DC143C;\n}\n\n\n/* para hacer lineas de colores */\n.linea-black {\n  border-top: 1px solid black;\n}\n\n\n.linea-red {\n  border-top: 2px dashed red;\n}"
  },
  {
    "objectID": "blog/25_css.html#footnotes",
    "href": "blog/25_css.html#footnotes",
    "title": "Tuneando con CSS",
    "section": "Notas",
    "text": "Notas\n\nO en _metadata.yml si quisiéramos usar los estilos en todos los posts↩︎"
  },
  {
    "objectID": "blog/29_tuneado-yaml.html",
    "href": "blog/29_tuneado-yaml.html",
    "title": "Tuneado de un post con opciones de YAML",
    "section": "",
    "text": "A este post le he puesto en el YAML algunas opciones un poco raras. Deberían haberse ejecutado pero … no ha salido. Si las pusiésemos en el archivo _quarto.yml sí funcionaría pero entonces empeoraríamos todo la web, así que mejor no hacerlo.\nConcretamente le he puesto estas opciones:\nCódigofontcolor: green          #- color del texto\nlinkcolor: purple         #- color de los enlaces\nmonobackgroundcolor: red  #- color de los cuadros de resultados de evaluar código\nfontsize: 0.6em           #- tamaño del texto (más pequeño de lo normal: 1)\nlinestretch: 2.3          #- tamaño entre las lineas (1.6 es lo \"normal\")"
  },
  {
    "objectID": "blog/29_tuneado-yaml.html#veamos-como-queda",
    "href": "blog/29_tuneado-yaml.html#veamos-como-queda",
    "title": "Tuneado de un post con opciones de YAML",
    "section": "\n1 Veamos como queda",
    "text": "1 Veamos como queda\nVa a empeorar bastante\n\nCódigo2 + 2\n\n[1] 4"
  },
  {
    "objectID": "blog/29_tuneado-yaml.html#un-enlace",
    "href": "blog/29_tuneado-yaml.html#un-enlace",
    "title": "Tuneado de un post con opciones de YAML",
    "section": "\n2 Un enlace",
    "text": "2 Un enlace\nVamos a ver como quedaría un link. Por ejemplo este enlace\naqui"
  },
  {
    "objectID": "blog/23_extensiones.html",
    "href": "blog/23_extensiones.html",
    "title": "Extensiones",
    "section": "",
    "text": "Una de las novedades de Quarto es la posibilidad de usar extensiones. Las extensiones se escriben en lenguaje Lua. Aquí la documentación oficial.\nSi quieres aprender a hacer extensiones, aquí tienes un buen un post.\nVamos a aprender a usar las extensiones con un ejemplo: vamos a instalar la extensión “quarto-youtube-embed” que sirve para incluir vídeos de youtube en un documento .qmd."
  },
  {
    "objectID": "blog/23_extensiones.html#intro",
    "href": "blog/23_extensiones.html#intro",
    "title": "Extensiones",
    "section": "",
    "text": "Una de las novedades de Quarto es la posibilidad de usar extensiones. Las extensiones se escriben en lenguaje Lua. Aquí la documentación oficial.\nSi quieres aprender a hacer extensiones, aquí tienes un buen un post.\nVamos a aprender a usar las extensiones con un ejemplo: vamos a instalar la extensión “quarto-youtube-embed” que sirve para incluir vídeos de youtube en un documento .qmd."
  },
  {
    "objectID": "blog/23_extensiones.html#un-ejemplo-quarto-youtube-embed",
    "href": "blog/23_extensiones.html#un-ejemplo-quarto-youtube-embed",
    "title": "Extensiones",
    "section": "\n2 Un ejemplo (quarto-youtube-embed)",
    "text": "2 Un ejemplo (quarto-youtube-embed)\nCon Rmd alguna vez he puesto vídeos en mis slides o tutoriales. Usaba el paquete de R vembed. Ahora, con Quarto, también podríamos hacerlo de esa forma, solo tendríamos que insertar en nuestro documento un chunk como:\n\nCódigo```{r}\n#| eval: false\nlibrary(\"vembedr\")\nembed_url(\"https://www.youtube.com/watch?v=ACv9zaBa1A4\")\n```\n\n\nPero, ahora, con Quarto, podemos también hacerlo usando la extensión “quarto-youtube-embed”. Aquí está el repo de la extensión. Veamos cómo:\n\n\n\n\n\n\nTarea: Instalar y usar una extensión\n\n\n\nConcretamente instalaremos la extensión “quarto-youtube-embed”. El repo aquí. Aunque realmente el repo ha sido archivado. Veremos si se puede seguir instalando.\n\nLo primero es instalar la extensión de Quarto. Como pone en el repo, lo haremos desde la Terminal así:\n\n\nCódigoquarto install extension sellorm/quarto-youtube-embed\n\n\n\nUna vez instalada, podemos incrustar un vídeo usando el siguiente “shortcode” en nuestro documento .qmd:\n\n\nCódigo{{&lt; youtube zk9zHqXm6m0 &gt;}}\n\n\nCon lo que habremos incrustado el vídeo en nuestro documento .html final.\n\n\n\nEl shortcode &lt;&lt; video &gt;&gt;\nLa extensión “quarto-youtube-embed” funcionaba perfectamente pero se ha quedado obsoleta porque Quarto ya incorpora de serie una extensión para incrustar vídeos. Solo hay que usar el siguiente shortcode:\n\nCódigo{{&lt; video https://youtu.be/7SVYNyvi0wQ &gt;}}\n\n\n\n\nAquí la documentación oficial del shortcode {{ &lt; video   &gt;}}. Como ves, se ha mejorado la extensión original ya que ahora permite, no sólo insertar vídeos de youtube, sino también de otros servicios como Vimeo, y puedes fijar el minuto en el que empieza el vídeo y algunas cosas más."
  },
  {
    "objectID": "blog/23_extensiones.html#otro-ejemplo-lightbox",
    "href": "blog/23_extensiones.html#otro-ejemplo-lightbox",
    "title": "Extensiones",
    "section": "\n3 Otro ejemplo (Lightbox)",
    "text": "3 Otro ejemplo (Lightbox)\nVamos a instalar y usar una nueva extensión, concretamente la extensión “Lightbox”.\nLo que hace esta extensión es que podamos pinchar en una imagen y verla ampliada y con una descripción. Aquí puedes ver ejemplos de lo que se puede hacer con “Lightbox”.\nEn el repo se explica con más detalle lo que se puede hacer con “Lightbox”.\n\n\n\n\n\n\nTarea: Instalar y usar la extensión “Lightbox”\n\n\n\nVamos a instalar y usar una nueva extensión, concretamente la extensión “Lightbox”. Su repo aquí\n\nLo primero es instalar la extensión desde la Terminal:\n\n\nCódigoquarto install extension quarto-ext/lightbox\n\n\nEsta vez, para poder usar la extensión en un documento .qmd hemos de incluir en el yaml del documento lo siguiente:\n---\ntitle: Simple Lightbox Example\nfilters:\n   - lightbox\n---\n\n![Mi imagen con Lighbox activado](./imagenes/economia.gif){.lightbox description=\"El logo-nano de la facultad de Economía de la Universtat de València\"\ndesc-position=\"left\"}\n\nCon lo que veríamos algo como:\n\n\n\nMi imagen con Lighbox activado\n\n\n\nResulta que tengo buen ojo, esta extensión también ha sido incorporada en Quarto 1.4. Aquí tienes la documentación oficial.\nPara habilitar Lightbox en nuestro documento .qmd solo tenemos que añadir lightbox: true en el YAML del documento:\n---\ntitle: Ejemplo de Lightbox\nlightbox: true\n---\n\n![Una foto chula](my-ruta/imagen-chula_01.jpg)\n\n![Otra imagen chula pero sin Lightbox Lovely Image](my-ruta/imagen-chula_02.jpg){.no-lightbox}\n\n\nTambien se pueden agrupar imagenes en una \"gallery\"\n\n![A Lovely Image](mv-1.jpg){group=\"my-gallery\"}\n\n![Another Lovely Image](mv-2.jpg){group=\"my-gallery\"}\n\nLightbox también funciona con imágenes (o gráficos) generadas con código R. Aquí tienes la documentación.\nLightbox ofrece más posibilidades para tunear el efecto Lightbox."
  },
  {
    "objectID": "blog/23_extensiones.html#otro-ejemplo-tweets",
    "href": "blog/23_extensiones.html#otro-ejemplo-tweets",
    "title": "Extensiones",
    "section": "\n4 Otro ejemplo (tweets)",
    "text": "4 Otro ejemplo (tweets)\nVoy a instalar una nueva extensión, concretamente la extensión Quarto social embeds. Concretamente con esta extensión podremos insertar en nuestros documentos: gists de GitHub, videos de Loom, youtube y Vimeo y tweets. Realmente la instalo porque quiero tenerla disponible para insertar tweets.\nEn el repo se explica con más detalle lo que se puede hacer con Quarto social embeds.\n\n\n\n\n\n\nInstalar y usar la extensión Quarto social embeds\n\n\n\nVamos a instalar y usar una nueva extensión, concretamente la extensión “Quarto social embeds”. Su repo está aquí.\n\nLo primero es instalar la extensión desde la Terminal:\n\n\nCódigoquarto install extension sellorm/quarto-social-embeds\n\n\n\nPara insertar un tweet has de:\n\nCódigo{{&lt; tweet user=&lt;username&gt; id=&lt;id&gt; &gt;}}\n\npor ejemplo:\n\n{{&lt; tweet user=ambitocultural id=1589543369512026112 &gt;}}\n\n\n\n\n\nPara insertar un gist de Github has de:\n\nCódigo{{&lt; gist sellorm 20525aff669acafb975b7495b8f2066e &gt;}}"
  },
  {
    "objectID": "blog/23_extensiones.html#listado-de-extensiones",
    "href": "blog/23_extensiones.html#listado-de-extensiones",
    "title": "Extensiones",
    "section": "\n5 Listado de extensiones",
    "text": "5 Listado de extensiones\nAquí tienes un listado de extensiones disponibles. Las extensiones oficiales de Quarto están aquí."
  },
  {
    "objectID": "blog/23_extensiones.html#algunas-extensiones-chulas",
    "href": "blog/23_extensiones.html#algunas-extensiones-chulas",
    "title": "Extensiones",
    "section": "\n6 Algunas extensiones chulas",
    "text": "6 Algunas extensiones chulas\nSon simplemente algunas (de las muchas) que me han llamado la atención :smile:\n\nContar palabras: https://fediscience.org/@andrew/110146498837984507\nquarto-wordcount: cuenta las palabras de un documento .qmd.\nquarto-revealjs-codewindow: genera chunk de código muy chulos, y funciona lo de pegar, rotar, etc.\nslickR: en realidad es un R pkg, pero sirve para hacer carruseles de imágenes o … plots, tables, gifs, videos and objects embedded en iframes.\nfluctuator: también un R pkg que permite manipular SVG’s con R. Apareció en este toot donde preguntaban por incremental Mermaid diagrams in Quarto.\nannotate-equations: sirve para colorear y anotar ecuaciones de Latex. En realidad es un paquete de Latex, pero él parece que lo ha adaptado a QMD. No lo he probado, pero me parece interesante.\nquarto-spotlight: extensión para hacer highlight en la posición del ratón. Tiene opciones de tamaño, color, etc. Por defecto sale chulo, muy grande y con un color que me gusta, es como si fuese un foco apuntando a una parte de las slides.\nr2resize: es un R pkg que permite hacer “cards” redimensionables, de tamaño, de tamaño del texto, etc. Esta chulo, también hay la posibilidad de tener una card que muestre una pregunta y puedas luego mover para ver la respuesta. Está chulo\nquarto-roughnotation: sirve para en unas revelajs subrayar o marcar o tachar o … trozos de texto. Es como si fuese un rotulador que solo aparece cuando aprietas la tecla R. Chulo pero no lo he probado y no sé la precisión.\nadd-code-files: permite incluir el contenido de scripts (o code files) en cajas d chunks en tus .qmd's, además, funciona lo del Code Folding y puedes poner que lineas se muestran en el documento final.\nhide-comment: para poner comentarios ocultos en tus chunks. Has de usar la marca #&gt; para crearlos.\nquartostamp: no es una extensión, es un paquete que contiene RStudio addings para insertar divs, callouts etc… Para mi ptse, PERO en este post les encanta.\n\n\n\n\n\nEl logo-nano de la facultad de Economía de la Universtat de València"
  },
  {
    "objectID": "blog/66_soluciones-practica-5-1.html",
    "href": "blog/66_soluciones-practica-5-1.html",
    "title": "Mi Segundo post con Quarto",
    "section": "",
    "text": "Este ya es mi segundo post con Quarto. En él voy a hacer lo siguiente:"
  },
  {
    "objectID": "blog/66_soluciones-practica-5-1.html#insertar-2-imágenes-side-by-side",
    "href": "blog/66_soluciones-practica-5-1.html#insertar-2-imágenes-side-by-side",
    "title": "Mi Segundo post con Quarto",
    "section": "\n1 Insertar 2 imágenes side-by-side",
    "text": "1 Insertar 2 imágenes side-by-side\n\nCódigo::: {layout-ncol=2}\n\n![Imágen 1](thumbnail.jpg){#fig-2.1}\n\n![Imágen 2](thumbnail.jpg){#fig-2.2}\n\n2 imágenes alineadas\n:::\n\n\n\n\n\n\n\n\n\n\nGráfico 1: Imágen 1\n\n\n\n\n\n\n\n\n\nGráfico 2: Imágen 2\n\n\n\n\n\n\n2 imágenes alineadas"
  },
  {
    "objectID": "blog/66_soluciones-practica-5-1.html#inserta-un-tweet",
    "href": "blog/66_soluciones-practica-5-1.html#inserta-un-tweet",
    "title": "Mi Segundo post con Quarto",
    "section": "\n2 Inserta un tweet",
    "text": "2 Inserta un tweet\n\nCódigo{{&lt; tweet user=Culturas2_tve id=1589703143562309632 &gt;}}"
  },
  {
    "objectID": "blog/66_soluciones-practica-5-1.html#inserta-un-tab-set",
    "href": "blog/66_soluciones-practica-5-1.html#inserta-un-tab-set",
    "title": "Mi Segundo post con Quarto",
    "section": "\n3 Inserta un tab-set\n",
    "text": "3 Inserta un tab-set\n\n\nCódigo::: panel-tabset\n#### Para hacer esto ...\n\n\n::: {layout-ncol=2}\n\n![Imágen 1](thumbnail.jpg){#fig-2.1}\n\n![Imágen 2](thumbnail.jpg){#fig-2.2}\n\nDos imágenes alineadas\n:::\n\n\n#### Has de escribir\n\n``` markdown\n::: {layout-ncol=2}\n\n![Imágen 1](thumbnail.jpg){#fig-2.1}\n\n![Imágen 2](thumbnail.jpg){#fig-2.2}\n\n2 imágenes alineadas\n:::\n\n\n\n\nPara hacer esto …\nHas de escribir\n\n\n\n\n\n\n\n\n\n\n\nGráfico 3: Imágen 1\n\n\n\n\n\n\n\n\n\nGráfico 4: Imágen 2\n\n\n\n\n\n\nDos imágenes alineadas\n\n\n\n\n\n::: {layout-ncol=2}\n\n![Imágen 1](thumbnail.jpg){#fig-2.1}\n\n![Imágen 2](thumbnail.jpg){#fig-2.2}\n\n2 imágenes alineadas\n:::"
  },
  {
    "objectID": "blog/66_soluciones-practica-5-1.html#inserta-un-call-out",
    "href": "blog/66_soluciones-practica-5-1.html#inserta-un-call-out",
    "title": "Mi Segundo post con Quarto",
    "section": "\n4 Inserta un call-out",
    "text": "4 Inserta un call-out\n\nCódigo::: {.callout-important icon=\"false\"}\n\n#### Tarea xx\n- Tendremos que hacer esto \n\n- y esto otro\n:::\n\n\n\n\n\n\n\n\nTarea xx\n\n\n\n\nTendremos que hacer esto\ny esto otro"
  },
  {
    "objectID": "blog/66_soluciones-practica-5-1.html#inserta-un-gráfico-en-el-margen",
    "href": "blog/66_soluciones-practica-5-1.html#inserta-un-gráfico-en-el-margen",
    "title": "Mi Segundo post con Quarto",
    "section": "\n5 Inserta un gráfico en el margen",
    "text": "5 Inserta un gráfico en el margen\n\nCódigo```{r}\n#| eval: true\n#| column: margin\nlibrary(leaflet)\nleaflet() %&gt;%\n  addTiles() %&gt;%  # Add default OpenStreetMap map tiles\n  addMarkers(lng = -4.7880, lat = 37.885, popup = \"Rectorado de la Universidad de Córdoba\\n (Sede de las XII Jornadas de usuarios de R)\")\n```\n\n\n\n\n\n\n\nCódigo```{r}\n#| column: margin\nlibrary(ggplot2)\nggplot(iris) + geom_point(aes(x = Sepal.Length, y = Petal.Length, color = Species))\n```\n\n\n\n\n\n\n\n\nPrueba superada!!\nAcabé con mi segundo post. FIN"
  },
  {
    "objectID": "blog/26_css-bizarro.html",
    "href": "blog/26_css-bizarro.html",
    "title": "Tuneando con CSS (cambios bizarros!!)",
    "section": "",
    "text": "La apariencia visual del blog puede cambiarse utilizando CSS. El objetivo no es dar una clase sobre CSS, de hecho yo sé muy poquito CSS, sino solo mostrar con un ejemplo cómo poder incorporar algunos cambios en nuestro blog mediante el uso de CSS."
  },
  {
    "objectID": "blog/26_css-bizarro.html#cómo-incorporar-cambios-con-css",
    "href": "blog/26_css-bizarro.html#cómo-incorporar-cambios-con-css",
    "title": "Tuneando con CSS (cambios bizarros!!)",
    "section": "\n1 ¿Cómo incorporar cambios con CSS?",
    "text": "1 ¿Cómo incorporar cambios con CSS?\nUtilizando spans\n\nEn este quarto-tip, Mine Çetinkaya-Rundel lo explica muy bien.\nPara cambiar la apariencia de un trozo de texto, tienes que meterlo dentro de [] y usando {} para definir el estilo que quieres aplicar a ese texto. Con un ejemplo se entiende mejor:\n\n\nPara que se muestre esto …\nHas de escribir\n\n\n\nPara llamar la atención puedes escribir en rojo o con un fondo amarillo; o las dos cosas a la vez.\n\n\nPara llamar la atención puedes escribir en [rojo]{style=\"color: red\"} \no con un [fondo amarillo]{style=\"background-color: yellow;\"}; \no las [dos cosas a la vez]{style=\"color: red; background-color: yellow;\"}.\n\n\n\n\nCon ficheros .css\n\nSi piensas reutilizar algunos estilos, entonces es mejor definir los estilos en un archivo .css.\nSi quisiéramos poder reutilizar los estilos que hemos definido en la anterior sección, tendríamos que crearlos como clases en un archivo css. Por ejemplo crearíamos el archivo: ./assets/mis_estilos_01.css con el siguiente contenido:\n/* css styles */\n\n.rojo {\n  color: red;\n}\n\n.yellow-background {\n  background-color: yellow;\n}\n\n.importante {\n  color: red;\n  background-color: yellow;\n}\nUna vez creado el archivo mis_estilos_01.csspara poder usar los estilos o clases allí definidos tendríamos que hacer 2 cosas:\n\nReferenciar el archivo css en el yaml del documento o post1. Esto lo haríamos incluyendo css: \"assets/mis_estilos_01.css\" en el yaml.\nUna vez incluido el fichero css en el yaml, ya podemos usar los estilos, para ello tendríamos que hacer lo siguiente:\n\n\n\nPara que se muestre esto …\nHas de escribir\nTambién podríamos haberlo hecho así:\n\n\n\nPara llamar la atención puedes escribir en rojo o con un fondo amarillo; o las dos cosas a la vez.\n\n\nPara llamar la atención puedes escribir en [rojo]{.rojo} \no con un [fondo amarillo]{.yellow-background}; \no las [dos cosas a la vez]{.importante}.\n\n\nPara llamar la atención puedes escribir en [rojo]{.rojo} \no con un [fondo amarillo]{.yellow-background}; \no las [[dos cosas a la vez]{.rojo}]{.yellow-background}."
  },
  {
    "objectID": "blog/26_css-bizarro.html#algunos-estilos-útiles",
    "href": "blog/26_css-bizarro.html#algunos-estilos-útiles",
    "title": "Tuneando con CSS (cambios bizarros!!)",
    "section": "\n2 Algunos estilos útiles",
    "text": "2 Algunos estilos útiles\nCon CSS se puede modificar la apariencia de todos los elementos de una página web. En el chunk de abajo muestro algunas de las posibilidades que usaba en mis xaringan slides.\n\nCódigo/* css styles: algunos q usaba en xaringan */\n\n.rotate-45 {transform: rotate(45deg); }\n.large { font-size: 140%; }\n.small { font-size: 80%; }\n   \n   \n/*  ----------------- colores  -------------- */ \n.purple{ color: #c077af; }\n.red { color: #ef342a; }\n.orange { color: #f57125; }\n.orange2 {color: #F58634;}\n.blue { color: #22b6ed; }\n.green { color: #1fb27f; }\n.green2 {color: #007965;}\n.yellow { color: #faca07; }\n.yellow2 {color: #FFCC29;}\n.brown {color: #a84d18; }\n\n\n/*  ----------------- una nueva clase de inversa: muy chula  -------------- */ \n.inverse2 {\n  background: #69686d;\n  color: #f2f2f6;\n}\n.inverse2 a {\n  color: #b2d68c;\n}\n.inverse2 h1, .inverse2 h2 {\n  color: #f2f2f6;\n  font-size: 72px;\n  line-height: 1.2em;\n}\n\n\n.textverd{\n  color: #b2d68c;\n  font-size: 60px;  \n}"
  },
  {
    "objectID": "blog/26_css-bizarro.html#estilos-útiles-pero-un-poco-bizarros",
    "href": "blog/26_css-bizarro.html#estilos-útiles-pero-un-poco-bizarros",
    "title": "Tuneando con CSS (cambios bizarros!!)",
    "section": "\n3 Estilos útiles pero (un poco) bizarros!!",
    "text": "3 Estilos útiles pero (un poco) bizarros!!\nEn clase, para mostrar como podemos modificar algunos de los elementos de un documento hecho con Rmd (ahora con Quarto) usaba un archivo css con cambios digamos un poco raros: a lo mejor ponía el titulo en pink, el autor en verde etc.. etc… Sólo era un ejemplo para mostrar algunas de las posibilidades para modificar la apariencia de un documento con CSS.\nSi quieres ver como quedaría este mismo post pero sin utilizar las reglas CSS (bizarras) que puedes ver abajo, puedes hacerlo aquí\n\nCódigo/* definiendo estilos del body : de toda la página */ \nbody { \n  background-color: aliceblue; }  /* color del fondo*/ \n\n\n/* importo un tipo de letra */ \n@import url(http://fonts.googleapis.com/css?family=Open+Sans:300italic,300); \n\n/* definiendo estilos de los párrafos */ \np {\n  text-align: justify;         /* justificar el texto del body */      \n  line-height: 1.4;            /* anchura entre las lineas 1.0 is the default in Firefox. 2.0 provides a large space */     \n  margin: 10px 0px 10px 0px;    /* margenes entre los párafos: top, izquierda, abajo, left */   \n  font-size: 13pt;                                     /* tamaño de letra */   \n  font-family: 'Open Sans', Helvetica, sans-serif; }   /* tipo de letra */  \n\n\n\n/* definiendo estilos de las cajas de código (chunks) */ \npre {\n  background-color: pink;  /* color de las cajas de código */ \n    font-size: 10pt;\n    border-radius: 9px;     /* q los bordes de las cajas sean redondas */ \n    font-family: Monaco, monospace;\n    border: 3px solid green; }\n\n/* hacer cambios en el texto en negrita, ahora el texto en negrita saldrá en verde!!! */ \nstrong {\n  color: green; }\n\n\n/* cambiar el color de los hipervinculos/enlaces  */\na {\n  color: brown;\n  font-weight: bold; }\n\n\n/* cambiar el aspecto del TOC: \nhttps://stackoverflow.com/questions/42546001/how-to-change-colors-and-attributes-of-table-of-contents-in-r-markdown-html-docu */\n.list-group-item.active, .list-group-item.active:focus, .list-group-item.active:hover{\n  color: darkgreen;\n  font-weight: bold;\n  background-color: gold; }\n   \n   \n/* para hacer cajas de texto de colorines*/\n\n.caja-darkkhaki { background-color:#bdb76b; border-radius: 4px; padding: 13px;}\n\n.caja-linea-verde {  color: #004346;\n  background-color: #fff;\n  border-top: 4pt solid #09bc8a;\n  border-right-style: none;\n  border-bottom-style: none;\n  border-left-style: none;\n  padding: 23px 10px 21px 10px;\n}\n\n\n/* Guía para los colores: https://htmlcolorcodes.com/es/nombres-de-los-colores/  */\n\n \n /* para las quotes o citas */\n\nblockquote {\n    padding: 10px 20px;\n    margin: 0 0 20px;\n    font-size: 14px;\n    border-left: 5px solid #DC143C;\n}\n\n\n/* para hacer lineas de colores */\n.linea-black {\n  border-top: 1px solid black;\n}\n\n\n.linea-red {\n  border-top: 2px dashed red;\n}"
  },
  {
    "objectID": "blog/26_css-bizarro.html#footnotes",
    "href": "blog/26_css-bizarro.html#footnotes",
    "title": "Tuneando con CSS (cambios bizarros!!)",
    "section": "Notas",
    "text": "Notas\n\nO en _metadata.yml si quisiéramos usar los estilos en todos los posts↩︎"
  }
]