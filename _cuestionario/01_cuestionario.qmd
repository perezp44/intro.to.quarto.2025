---
title: "Cuestionario"
subtitle: "Ejercicios para el curso [Escribiendo con R y Quarto](https://perezp44.github.io/intro.to.quarto/){target='blank'}"
#abstract:
toc-title: Índice
from: markdown+emoji  #- usar emojis https://gist.github.com/rxaviers/7360908
---

::: {.callout-note icon="false" collapse="true"}
####### Contexto

Cuestionario, confeccionado para el curso {{< var my_curso >}}. El curso es una introducción a Quarto en el que vemos como generar documentos (tutoriales, slides, webs ...) con contenido estadístico generado con R. 

Los ejercicios se han pensado para resolver en el Qproject "quarto.ejercicios" que puedes descargarte [aquí](./cuestionario/quarto.ejercicios.zip){target="_blank"}
:::

<br>

------------------------------------------------------------------------

<br>

# Eurovisión


::: {.callout-note icon="false" collapse="true"}
####### Contexto/Objetivo

Igual algunos de vosotros no sabéis mucho R, pero os voy a proporcionar **código R para hacer un análisis** con datos de las votaciones de **Eurovisión**.

No es preocupéis por el código R, sólo vamos a ejecutarlo para que veáis que lo que hace es cargar unos datos, trabajarlos, aplicar una técnica estadística y **crear una tabla y una visualización**.

El ejercicio solo es **una excusa**, una forma de **practicar la creación de documentos con Quarto**.

El código del ejemplo se lo debemos a [@juliasilge@fosstodon.org](https://mastodon.social/@juliasilge). Thanks Julia!!
:::


## 1. Análisis con R 

**Pega el siguiente código R en un script** (fichero .R) llamado `eurovision_1.R` y ejecuta el código

::: {.callout-warning icon="false" collapse="true"}
#### :warning: Intalación paquetes

-   Para que te funcione el script necesitarás tener instalados varios paquetes de R:

``` r
install.packages("pak")
pak::pak(c("tidyverse", "ggtext",  "curl", "perezp44/pjpv.curso.R.2022", "irlba", "widyr"))
```
:::

::: {.callout-warning icon="false" collapse="true"}
##### Código R 

``` r
#- eurovision_1.R  -----
#- https://github.com/rfordatascience/tidytuesday/blob/master/data/2022/2022-05-17/readme.md
#- https://gist.github.com/juliasilge/c5e76731e8dc4e2b709f5afd4ebf9b61

library(tidyverse)
library(widyr) #- pacman::p_load(irlba, widyr)
library(maps)

#- cargamos datos -----
eurovision_votes <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-05-17/eurovision-votes.csv')

#- clustering -----
set.seed(234)
eurovision_clusters <-  eurovision_votes %>%
  # dimensionality reduction with SVD: https://www.youtube.com/watch?v=UyAfmAZU_WI
  widyr::widely_svd(from_country, to_country, points, nv = 24) %>%
  #- combination of SVD and k-means: https://www.researchgate.net/publication/284617182_Combination_of_Singular_Value_Decomposition_and_K-means_Clustering_Methods_for_Topic_Detection_on_Twitter
  widyr::widely_kmeans(from_country, dimension, value, k = 4)

#- tabla -----
table <- eurovision_clusters %>% 
  group_by(cluster) %>% 
  summarise(from_country = paste(from_country, collapse = ", ")) 
gt::gt(table)


#- mapa -----
map_data("world") %>%
  filter(region %in% eurovision_clusters$from_country) %>%
  left_join(eurovision_clusters, by = c("region" = "from_country")) %>%
  ggplot(aes(long, lat, group = group, fill = cluster)) +
  geom_polygon(alpha = 0.8) +
  coord_map() +
  scale_fill_brewer(palette = "Dark2") +
  labs(title = "Which countries vote similarly for Eurovision?",
       subtitle = "Clusters identified with SVD and K-means",
       caption = "Big thanks to @juliasilge@fosstodon.org") +
  pjpv.curso.R.2022::theme_pjp_maps()  +
  theme(panel.background = ggplot2::element_rect(fill = "white",  color = NA)) +
  theme(plot.background = ggplot2::element_rect(colour = "white",fill = "white"))


#- otro análisis con esos datos: https://twitter.com/geokaramanis/status/1527271169447014403
```
:::

<br>

------------------------------------------------------------------------

<br>

## 2. Doc's con QMD

### 2.A (informe básico)

------------------------------------------------------------------------

Una vez hemos comprobado que el código del apartado anterior nos funciona, **hay que redactar un informe** (reproducible) que describa lo que hemos hecho con el código anterior. Más abajo os doy instrucciones más precisas.

::: {.callout-note icon="false" collapse="true"}
####### Instrucciones para confeccionar el informe

Generar un **informe básico** en formato html que describa lo que hemos en el apartado anterior

Indicaciones:

-   El documento fuente que generará el informe final ha de llamarse `eurovision_2a.qmd`

-   Informe en formato html, con título y autor.

-   El informe tendrá las siguientes **secciones de primer nivel**: Intro, Marco teórico, Datos, Análisis y Resultados

-   El informe ha de contener: párrafos, una imagen, enlaces, una cita, una nota al pie, texto en negrita, una ecuación, una tabla y un gráfico

-   No te preocupes por lo que escribes, preocúpate sólo de la sintaxis y elementos de Quarto.
:::

Evidentemente, sabrías hacer el informe, solo que necesitarías tiempo. Así que mejor si empiezas, lo intentas un poco, ya veremos cuanto (¿3-4 minutos?) y una vez lo hayas intentado usas lo siguiente:

::: {.callout-warning icon="false" collapse="true"}
####### Ayudita

``` yaml
---
title: "Eurovisión: ¿hay clubs de países?"
author: Nosotros
format: html
---

# Intro

# Marco teórico

# Datos 

# Análisis

# Resultados

## Tabla

## Mapa

```
:::

::: {.callout-warning icon="false" collapse="true"}
####### Ayuda gorda

```{r}
#| echo: false
#| warning: false
#| class-output: "sourceCode r"

cat(readLines("./_ejercicios_cuestionario/eurovision_2a.qmd"), sep = "\n")
```

:::

### 2.B (informe tuneado)

------------------------------------------------------------------------

Vamos a **mejorar nuestro informe**. Abajo os doy instrucciones más precisas:

::: {.callout-note icon="false" collapse="true"}
####### Instrucciones para tunear el informe

-   Para preservar el documento fuente del informe original, guarda una copia con el nombre `eurovision_2b.qmd`

-   Pon TOC a la derecha

-   Pon las opciones (las que puedas) de los chunks en el YAML. Aprovecha y haz que no se muestren los mensajes y los warnings que quedan muy feos en el informe final

-   Haz que los chunks sean expandibles

-   Que se pueda descargar el documento fuente

-   .... más cosas que se nos ocurran
:::

Evidentemente, sabrías tunear el informe, solo que necesitarías tiempo. Así que mejor si empiezas, lo intentas un poco, ya veremos cuanto (¿3 minutos?) y una vez lo hayas intentado (pero fuerte) usas lo siguiente:

::: {.callout-warning icon="false" collapse="true"}
####### Ayudita

Puedes usar el yaml que ves más abajo. Está un poco cargadito, pero **se trata de recordar algunas de las opciones** que tenemos en el YAML

``` yaml
---
title: "Votaciones de Eurovisión"
subtitle: "Ejercicio del curso [Escribiendo con R y Quarto](https://perezp44.github.io/intro.to.quarto/){target='blank'}"
abstract: Los resultados señalan los siguientes clusters de países .... y
date: 2023-01-02
date-modified: last-modified
author:
  - name: Pedro J. Pérez
    url: https://perezp44.github.io/intro.to.quarto/
    affiliation: Universitat de València
    affiliation-url: https://www.uv.es
    orcid: 0000-0001-9375-6330
  - name: Nosostros y [@juliasilge@fosstodon.org](https://mastodon.social/@juliasilge)
categories: [Clustering, Eurovision]
format:
  html:
    page-layout: full
    theme: 
      - superhero #sketchy #slate #- litera   darkly cosmo
      - assets/ember.scss
    css: 
      - assets/styles.css
    toc: true
    toc-title: Índice
    toc-depth: 3
    toc-location: right
    code-line-numbers: true
    code-copy: true
    code-overflow: scroll    #- {wrap, scroll}
    code-fold: show
    code-tools: false
    code-link: true
    
execute:
  echo: true
  eval: true
  message: false
  warning: false
  
embed-resources: true
---
```
:::

<br>

------------------------------------------------------------------------

<br>

## 3. Slides con QMD

### 3.A (slides básicas)

------------------------------------------------------------------------

Utiliza el documento `eurovision_2a.qmd` para generar unas **Revealjs slides** sobre Eurovision. El archivo que generará las slides llámalo `eurovision_3a.qmd`

Evidentemente sabes hacer las slides, inténtalo fuerte (3-4 minutos) y luego mira las ayudas:

::: {.callout-warning icon="false" collapse="true"}
####### Ayudita

Solo tienes que (desde RStudio) crear un fichero para presentación (File \> New File \> Quarto Presentation). Se creará un fichero con este yaml:

``` yaml
---
title: "Untitled"
format: revealjs
---
```

Luego solo tendrás que copiar el contenido, exceptuando el yaml, de `eurovision_2a.qmd`. Quedará algo como:

::: {.callout-warning icon="false" collapse="true"}
####### Primera versión de las slides

```{r}
#| echo: false
#| warning: false
#| class-output: "sourceCode r"

cat(readLines("./_ejercicios_cuestionario/eurovision_3a.qmd"), sep = "\n")
```
:::
:::

OK, salen unas slides, **PERO** no muy bien, porque hay contenido que no se ve: tenemos que dedicar un poco de tiempo a ver como separamos el contenido en slides. Una posibilidad es hacerlo como puedes ver en la siguiente ayuda.

::: {.callout-warning icon="false" collapse="true"}
####### Ayuda (segunda versión de las slides)

Simplemente he dividido el contenido del "Marco teórico" en 3 slides, he quitado cosas y he puesto bullets

```{r}
#| echo: false
#| warning: false
#| class-output: "sourceCode r"

cat(readLines("./_ejercicios_cuestionario/eurovision_3a_v2.qmd"), sep = "\n")
```

:::

Bueno, siguen sin estar muy chulas, así que vamos a usar un **theme**


::: {.callout-warning icon="false" collapse="true"}
####### Usemos un theme (3ª version de las slides)

Para ello solo has de sustituir el anterior yaml por este:


```yaml
---
title: "Votaciones de Eurovisión"
format: 
  revealjs:
    theme: sky #- https://quarto.org/docs/presentations/revealjs/themes.html
---
```
:::

Aún necesitan más trabajo, pero en un apuro gordo medio podrían valer 😉😉


### 3.B (slides tuneadas)

Una vez hemos hecho unas slides básicas **vamos a mejorarlas**. Más abajo os doy instrucciones más precisas para tunear las slides

::: {.callout-note icon="false" collapse="true"}
####### Instrucciones para tunear las slides

Indicaciones:

-   cambia el color de una página

-   ....
:::

Evidentemente, sabrías tunear las slides, solo que necesitarías tiempo. Así que mejor si empiezas, lo intentas un poco, ya veremos cuanto (¿3 minutos?) y una vez lo hayas intentado (pero fuerte) usas lo siguiente:

::: {.callout-warning icon="false" collapse="true"}
####### Ayudita

:::

<br>

------------------------------------------------------------------------

<br>
