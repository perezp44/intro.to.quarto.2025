---
title: "Curva de Phillips, ¿sigue siendo válida?"
format: revealjs
---


## Intro

Estamos en el tercer día del [curso de Introducción a Quarto](https://perezp44.github.io/intro.to.quarto/) y estamos practicando con [este ejemplo](https://twitter.com/ThomIvar/status/1516114838996631563).

## Marco teórico

La **curva de Phillips** según la Wikipedia es: 

> La curva de Phillips, en macroeconomía, representa una curva empírica de pendiente negativa que relaciona la tasa de inflación y la tasa de desempleo. -- Articulo de la Wiki [aquí](https://es.wikipedia.org/wiki/Curva_de_Phillips)

## Marco teórico (II)


![Curva de Phillips en la Wikipedia](https://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/NAIRU-SR-and-LR_es.svg/280px-NAIRU-SR-and-LR_es.svg.png)

Esta no es la ecuación de la curva de Phillips: $y_{t}=A_{1}y_{t-1}+A_{2}y_{t-2}+v_{t}$


## Datos 

- Los datos provienen de la OCDE.


```{r}
#| label: setup     #- se ejecutará siempre
#| include: false   #- para que se ejecute pero no se muestre nada en el output
library(tidyverse)
library(ggtext)
```


---

### Inflación 

Descargamos datos de inflación con este código:

```{r}
#| echo: false
#| eval: true
url_inflation <- "https://stats.oecd.org/sdmx-json/data/DP_LIVE/.CPI.../OECD?contentType=csv&detail=code&separator=comma&csv-lang=en"
ruta_inflation <- "./pruebas/DP_LIVE_22032023113248591.csv"
# curl::curl_download(url_inflation, ruta_inflation)
```

---

### Desempleo

Descargamos datos de desempleo con este código:

```{r}
#| echo: false
#| eval: true
url_unemployment <- "https://stats.oecd.org/sdmx-json/data/DP_LIVE/.HUR.../OECD?contentType=csv&detail=code&separator=comma&csv-lang=en"
ruta_unemployment <- "./pruebas/DP_LIVE_12042023090537614.csv"
# curl::curl_download(url_unemployment, ruta_unemployment)
```


## Resultados


```{r}
#| echo: false
#| eval: true
inflation_orig    <- readr::read_csv(ruta_inflation)
unemployment_orig <- readr::read_csv(ruta_unemployment)
```


```{r}
#| echo: false
#| eval: true
#- seleccionamos datos ---------------------------------------------------------
inflation <- inflation_orig %>%
  dplyr::filter(FREQUENCY == "M" & MEASURE == "AGRWTH", SUBJECT == "TOT") %>%
  select(place = LOCATION, date = TIME, cpi = Value)

unemployment <- unemployment_orig %>%
  dplyr::filter(FREQUENCY == 'M', SUBJECT == 'TOT') %>%
  select(place = LOCATION, date = TIME, rate = Value)

#- fusionamos los 2 df's -------------------------------------------------------
df <- left_join(inflation, unemployment) %>%
       tidyr::drop_na() %>%
       dplyr::mutate(group = case_when(
           str_starts(date, "199") ~ "1991-1999",
           str_starts(date, "200") ~ "2000-2009",
           str_starts(date, "201") ~ "2010-2019",
           str_starts(date, "202") ~ ">= 2020",
           TRUE ~ "other" )) %>%
      dplyr::filter(group != "other")
```


Hacemos el plot de [@ThomIvar](https://twitter.com/ThomIvar). Primero el plot básico con este código

```{r}
#| echo: true
#| eval: true
my_country <- c("G-7")  #- seleccionamos "país"
my_periodos <- c("2000-2009", "2010-2019") #- seleccionamos periodos

df_1p <- df %>%
  dplyr::filter(place == my_country) %>%
  dplyr::filter(group %in% my_periodos)


# -- make plot for 1 country
p0 <- ggplot(df_1p, aes(x = rate, y = cpi, group = group, color = group)) +
        geom_point(alpha = 0.5, size = 2.25)
```

---

```{r}
#| echo: false
#| eval: true
p0
```

---

Y ahora el super-gráfico:

```{r}
#| echo: false
#| eval: true
my_title <- glue::glue("What happened to the <b>Phillips Curve</b> in ", my_country  , "? (thanks to <b style='color:#fd5532'>@ThomIvar</b>)")

p1 <- p0 + geom_smooth(method = 'lm', se = FALSE, linetype = 2) +
  scale_color_manual(values = c('#d1495b', '#00798c')) +
  annotate('text', x = 5.5, y = 3.75, label = '2000-2009', color = '#d1495b',
           family = 'American Typewriter', fontface = 'bold') +
  annotate('text', x = 4.5, y = 0.75, label = '2010-2019', color = '#00798c',
           family = 'American Typewriter', fontface = 'bold') +
  labs(title = my_title,
       subtitle = "The Phillips curve is an economic concept that states that inflation
       and unemployment have a stable and inverse relationship. According to this concept,
       lower unemployment rates cause firms to raise wages to attract new labor,
       which increases the inflation rate. However, in the <b style='color:#00798c'>
       last decade</b> this relationship appears to have vanished.",
       caption = '@ThomIvar • source: OECD (monthly, G7 countries)',
       x = 'Unemployment rate, %',
       y = 'Inflation rate, %') +
  theme_void() +
  theme(text = element_text('American Typewriter', color = 'grey30'),
    legend.position = 'none',
    plot.title = element_textbox_simple(size = 20, margin = margin(b = 0.15, unit = 'cm')),
    plot.subtitle = element_textbox_simple(size = 11, color = 'grey60',
                                           margin = margin(b = 0.25, unit = 'cm')),
    plot.background = element_rect(fill = '#fffef7', color = '#fffef7'),
    plot.caption = element_text(size = 10, color = 'grey80'),
    plot.margin = margin(1, 1, 1, 1, 'cm'),
    panel.grid = element_line(color = 'grey70', linetype = 'dotted'),
    axis.title = element_text(margin = margin(t = 0.2, r = 0.2, unit = 'cm'), color = 'grey50'),
    axis.title.y = element_text(angle = 90),
    axis.text = element_text(color = 'grey70', size = 9,
                             margin = margin(t = 0.1, r = 0.1, unit = 'cm')),
    axis.line = element_line(color = 'grey50'),
    axis.ticks = element_line(color = 'grey50', size = 0.6),
    axis.ticks.length = unit(0.10, 'cm'))
```


```{r}
#| echo: false
#| eval: true
p1
```

## Más resultados

Por hacer algo nuevo vamos a hacer un faceted-graph:

```{r}
#| echo: false
#| eval: true
#| column: screen
#- SEGUNDA parte (del script) --------------------------------------------------
#- hacemos el gráfico para varios países ---------------------------------------
my_paises <- c("ESP", "FRA", "GBR", "DEU", "USA", "JPN")
my_periodos <- c("2000-2009", "2010-2019") 

df_paises <- df %>%  
  dplyr::filter(place %in% my_paises) %>% 
  dplyr::filter(group %in% my_periodos)

#- plot feo para luego hacer un facetting
p0 <- ggplot(df_paises, aes(x = rate, y = cpi, color = group)) +
  geom_point(alpha = 0.5, size = 0.75) +
  geom_smooth(method = 'lm', se = FALSE, linetype = 1) +
  scale_color_manual(values = c(  '#d1495b', '#00798c', '#099205','#8e0592'))

#p0
#p0 +  facet_wrap(vars(place))

p1 <- p0 +
  facet_wrap(vars(place), scales = "free")  +
  labs(title = "What happened to the <b>Phillips Curve</b>? ",
       subtitle = "The Phillips curve is an economic concept that states that inflation
       and unemployment have a stable and inverse relationship. According to this concept,
       lower unemployment rates cause firms to raise wages to attract new labor,
       which increases the inflation rate. However, this is not always case for the <b style='color:#d1495b'>
       2000-2009</b> decade, not in the <b style='color:#00798c'>
       last decade (2010-2019) </b>. This relationship appears to have vanished!!",
       caption = "@pjpv4444  (thanks to  @ThomIvar) • source: OECD (monthly, G7 countries)",
       x = 'Unemployment rate, %',
       y = 'Inflation rate, %') +
  theme_void() +
  theme(text = element_text('American Typewriter', color = 'grey30'),
    legend.position = 'none',
    plot.title = element_textbox_simple(size = 20, margin = margin(b = 0.15, unit = 'cm')),
    plot.subtitle = element_textbox_simple(size = 11, color = 'grey60',
                                           margin = margin(b = 0.25, unit = 'cm')),
    plot.background = element_rect(fill = '#fffef7', color = '#fffef7'),
    plot.caption = element_text(size = 10, color = 'grey80'),
    plot.margin = margin(1, 1, 1, 1, 'cm'),
    panel.grid = element_line(color = 'grey70', linetype = 'dotted'),
    axis.title = element_text(margin = margin(t = 0.2, r = 0.2, unit = 'cm'), color = 'grey50'),
    axis.title.y = element_text(angle = 90),
    axis.text = element_text(color = 'grey70', size = 9,
                             margin = margin(t = 0.1, r = 0.1, unit = 'cm')),
    axis.line = element_line(color = 'grey50'),
    axis.ticks = element_line(color = 'grey50', size = 0.6),
    axis.ticks.length = unit(0.10, 'cm'))
```


```{r}
#| echo: false
#| eval: true
p1
```

